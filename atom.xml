<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tenecnt&#39;s blog</title>
  
  <subtitle>2333</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tenecnt.github.io/"/>
  <updated>2018-07-17T06:01:28.745Z</updated>
  <id>http://tenecnt.github.io/</id>
  
  <author>
    <name>tenecnt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>my todolist</title>
    <link href="http://tenecnt.github.io/2018/07/16/todolist/"/>
    <id>http://tenecnt.github.io/2018/07/16/todolist/</id>
    <published>2018-07-16T05:09:41.000Z</published>
    <updated>2018-07-17T06:01:28.745Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>完成</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td></td><td style="text-align:center">分治线段树</td></tr><tr><td></td><td style="text-align:center">agc补题</td></tr><tr><td>done</td><td style="text-align:center">弦图最大团</td></tr><tr><td>done</td><td style="text-align:center">dsu on tree</td></tr></tbody></table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;完成&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;
      
    
    </summary>
    
    
      <category term="规划" scheme="http://tenecnt.github.io/tags/%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>多项式(1)</title>
    <link href="http://tenecnt.github.io/2018/07/16/poly/"/>
    <id>http://tenecnt.github.io/2018/07/16/poly/</id>
    <published>2018-07-16T04:46:48.000Z</published>
    <updated>2018-07-17T07:17:25.465Z</updated>
    
    <content type="html"><![CDATA[<p>学习了一发多项式，感觉码风得到改善</p><p>包括了：</p><ol><li>求逆</li><li>exp</li><li>求导</li><li>积分</li><li>ln</li><li>pow</li></ol><p><a href="https://www.codechef.com/JULY18A/problems/PFRUIT" target="_blank" rel="noopener">水果沙拉(CodeChef)</a></p><p>基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 1&lt;&lt;19|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lsk 998244353</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k,l;</span><br><span class="line">lg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];</span><br><span class="line">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];</span><br><span class="line">lg F[MN],G[MN],Res[MN];</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Pow</span><span class="params">(lg A,lg B)</span></span>&#123;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;B;B&gt;&gt;=<span class="number">1</span>,A=A*A%lsk)<span class="keyword">if</span>(B&amp;<span class="number">1</span>)res=res*A%lsk;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFtinit</span><span class="params">(<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line">rev[i]=(rev[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)*(l&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">lg wn=pw[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;j+=i*<span class="number">2</span>)&#123;</span><br><span class="line">lg w=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class="line">lg F=y[k+i]*w%lsk,T=y[k];</span><br><span class="line">y[k]=(F+T)%lsk;</span><br><span class="line">y[k+i]=(T-F)%lsk;</span><br><span class="line"><span class="keyword">if</span>(y[k+i]&lt;<span class="number">0</span>)y[k+i]+=lsk;</span><br><span class="line">w=w*wn%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">idft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">reverse(y+<span class="number">1</span>,y+l);</span><br><span class="line">dft(y,l);lg INv=Pow(l,lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">y[i]=y[i]*INv%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Inv</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line">res[<span class="number">0</span>]=Pow(y[<span class="number">0</span>],lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Inv(y,res,(d+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,Tmpinv);</span><br><span class="line">fill(Tmpinv+d,Tmpinv+l,<span class="number">0</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Tmpinv,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=((<span class="number">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Der</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d<span class="number">-1</span>;++i)&#123;</span><br><span class="line">y[i]=y[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%lsk;</span><br><span class="line">&#125;</span><br><span class="line">y[d<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Int</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d<span class="number">-1</span>;i;--i)&#123;</span><br><span class="line">y[i]=y[i<span class="number">-1</span>]*inv[i]%lsk;</span><br><span class="line">&#125;y[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ln</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,res);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">Der(res,d);</span><br><span class="line">fill(Tmpln,Tmpln+l,<span class="number">0</span>);</span><br><span class="line">Inv(y,Tmpln,d);FFtinit(l);</span><br><span class="line">dft(Tmpln,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpln[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">Int(res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exp</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line">res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">Exp(y,res,(d+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">fill(Tmpexp,Tmpexp+l,<span class="number">0</span>);</span><br><span class="line">Ln(res,Tmpexp,d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d;++i)&#123;</span><br><span class="line">Tmpexp[i]=y[i]-Tmpexp[i];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[i]&lt;<span class="number">0</span>)Tmpexp[i]+=lsk;</span><br><span class="line">&#125;</span><br><span class="line">++Tmpexp[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[<span class="number">0</span>]&gt;=lsk)Tmpexp[<span class="number">0</span>]-=lsk;</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(res,l);dft(Tmpexp,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pow</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d,lg k)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">fill(Tmppow,Tmppow+d,<span class="number">0</span>);</span><br><span class="line">Ln(y,Tmppow,d);k%=lsk;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class="line">Exp(Tmppow,res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Func</span><span class="params">(lg u,lg *res)</span></span>&#123;</span><br><span class="line">Tmpfuc[<span class="number">1</span>]=u+<span class="number">1</span>;</span><br><span class="line">Tmpfuc[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2((k+<span class="number">1</span>)&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">fill(res,res+l,<span class="number">0</span>);</span><br><span class="line">Exp(Tmpfuc,res,k+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;++i)res[i]=res[i+<span class="number">1</span>];</span><br><span class="line">res[k+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">fill(res+k+<span class="number">1</span>,res+l,<span class="number">0</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Iex[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+k+<span class="number">1</span>,res+l,<span class="number">0</span>);</span><br><span class="line">fill(Tmpfuc,Tmpfuc+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2((k+<span class="number">1</span>)&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">pw[<span class="number">0</span>]=<span class="number">1</span>;inv[<span class="number">0</span>]=inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1</span>&lt;&lt;<span class="number">19</span>;++i)&#123;</span><br><span class="line">pw[i]=Pow(<span class="number">3</span>,(lsk<span class="number">-1</span>)/i/<span class="number">2</span>);</span><br><span class="line">inv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class="line">assert(inv[i]);</span><br><span class="line">&#125;</span><br><span class="line">Ex[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;++i)&#123;</span><br><span class="line">Ex[i]=Ex[i<span class="number">-1</span>]*inv[i+<span class="number">1</span>]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">Inv(Ex,Iex,k+<span class="number">1</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Iex,l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%*d%d"</span>,&amp;k,&amp;n);</span><br><span class="line">init();</span><br><span class="line">fill(Res,Res+l,<span class="number">0</span>);Res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">lg a,b;<span class="keyword">int</span> c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">fill(G,G+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">fill(F,F+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Func(b,G);Func(a<span class="number">-1</span>,F);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;++j)&#123;</span><br><span class="line">G[j]-=F[j];</span><br><span class="line"><span class="keyword">if</span>(G[j]&lt;<span class="number">0</span>)G[j]+=lsk;</span><br><span class="line">&#125;</span><br><span class="line">fill(F,F+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Pow(G,F,k+<span class="number">1</span>,c);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Res,l);dft(F,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;++j)&#123;</span><br><span class="line">Res[j]=Res[j]*F[j]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(Res,l);</span><br><span class="line">fill(Res+k+<span class="number">1</span>,Res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=k;++i)res=res*i%lsk;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,res*Res[k]%lsk);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习了一发多项式，感觉码风得到改善&lt;/p&gt;
&lt;p&gt;包括了：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求逆&lt;/li&gt;
&lt;li&gt;exp&lt;/li&gt;
&lt;li&gt;求导&lt;/li&gt;
&lt;li&gt;积分&lt;/li&gt;
&lt;li&gt;ln&lt;/li&gt;
&lt;li&gt;pow&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="多项式" scheme="http://tenecnt.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>后缀自动机</title>
    <link href="http://tenecnt.github.io/2018/07/16/hzzdj/"/>
    <id>http://tenecnt.github.io/2018/07/16/hzzdj/</id>
    <published>2018-07-15T18:26:05.000Z</published>
    <updated>2018-07-16T05:06:16.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转移重要代码"><a href="#转移重要代码" class="headerlink" title="转移重要代码"></a>转移重要代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[MN];</span><br><span class="line"><span class="keyword">int</span> n,tot=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> maxlen,slink,tran[<span class="number">26</span>];</span><br><span class="line">&#125;N[MN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Nd</span><span class="params">(<span class="keyword">int</span> _maxlen,<span class="keyword">int</span> _tran,<span class="keyword">int</span> _slink)</span></span>&#123;</span><br><span class="line">N[++tot]=(Node)&#123;_maxlen,_slink,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(_tran)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];<span class="keyword">else</span> N[tot].tran[i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)N[tot].tran[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addchar</span><span class="params">(<span class="keyword">char</span> cc,<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ch=cc-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">int</span> z=Nd(N[u].maxlen+<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> v=u;</span><br><span class="line"><span class="keyword">while</span>(v&amp;&amp;!N[v].tran[ch])&#123;</span><br><span class="line">N[v].tran[ch]=z;</span><br><span class="line">v=N[v].slink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!v)&#123;N[z].slink=<span class="number">1</span>;<span class="keyword">return</span> z;&#125;</span><br><span class="line"><span class="keyword">int</span> x=N[v].tran[ch];</span><br><span class="line"><span class="keyword">if</span>(N[v].maxlen==N[x].maxlen<span class="number">-1</span>)&#123;</span><br><span class="line">N[z].slink=x;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> y=Nd(N[v].maxlen+<span class="number">1</span>,x,N[x].slink);</span><br><span class="line">N[x].slink=y;N[z].slink=y;</span><br><span class="line"><span class="keyword">while</span>(v&amp;&amp;N[v].tran[ch]==x)&#123;</span><br><span class="line">N[v].tran[ch]=y;</span><br><span class="line">v=N[v].slink;</span><br><span class="line">&#125;<span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">Nd(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;now=addchar(c[i],now);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;转移重要代码&quot;&gt;&lt;a href=&quot;#转移重要代码&quot; class=&quot;headerlink&quot; title=&quot;转移重要代码&quot;&gt;&lt;/a&gt;转移重要代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="字符串" scheme="http://tenecnt.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>虚树</title>
    <link href="http://tenecnt.github.io/2018/07/16/xushu/"/>
    <id>http://tenecnt.github.io/2018/07/16/xushu/</id>
    <published>2018-07-15T18:21:10.000Z</published>
    <updated>2018-07-16T05:09:00.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转移重要代码"><a href="#转移重要代码" class="headerlink" title="转移重要代码"></a>转移重要代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 600005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pil pair<span class="meta-string">&lt;int,long long&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="keyword">int</span> n,m,K,q;</span><br><span class="line"><span class="keyword">int</span> nex[MN],fr[MN],vi[MN];lg wi[MN];<span class="keyword">int</span> tote;</span><br><span class="line"><span class="keyword">int</span> tail=<span class="number">0</span>,stk[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z)</span></span>&#123;</span><br><span class="line">nex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> dfc=<span class="number">0</span>,dfn[MN];<span class="keyword">int</span> dep[MN],f[<span class="number">20</span>][MN];lg g[<span class="number">20</span>][MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">dfn[x]=++dfc;<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">19</span>;++i)f[i][x]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][x]],g[i][x]=min(g[i<span class="number">-1</span>][x],g[i<span class="number">-1</span>][f[i<span class="number">-1</span>][x]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=fr[x];i;i=nex[i])<span class="keyword">if</span>(vi[i]!=fa)&#123;</span><br><span class="line">f[<span class="number">0</span>][vi[i]]=x;g[<span class="number">0</span>][vi[i]]=wi[i];dep[vi[i]]=dep[x]+<span class="number">1</span>;dfs(vi[i],x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pil <span class="title">Lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line"><span class="keyword">if</span>(x==y)<span class="keyword">return</span> mp(x,<span class="number">0</span>);</span><br><span class="line">lg res=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">19</span>;~i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[f[i][x]]&gt;=dep[y])&#123;</span><br><span class="line">res=min(res,g[i][x]);</span><br><span class="line">x=f[i][x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">if</span>(x==y) <span class="keyword">return</span> mp(x,res);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">19</span>;~i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i][x]!=f[i][y])&#123;</span><br><span class="line">res=min(res,min(g[i][x],g[i][y]));</span><br><span class="line">x=f[i][x];y=f[i][y];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mp(f[<span class="number">0</span>][x],min(res,min(g[<span class="number">0</span>][x],g[<span class="number">0</span>][y])));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> v[MN],dd[MN];</span><br><span class="line"><span class="keyword">int</span> Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];<span class="keyword">int</span> Tot=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z)</span></span>&#123;Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dfn[x]&lt;dfn[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">lg <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">lg ans=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;x&lt;&lt;' '&lt;&lt;fa&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Fr[x];i;i=Nex[i])<span class="keyword">if</span>(Vi[i]!=fa)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;Vi[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(dd[Vi[i]])ans+=Wi[i];<span class="keyword">else</span> ans+=min(Wi[i],dfs2(Vi[i],x));</span><br><span class="line">&#125;<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bt</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(v+<span class="number">1</span>,v+m+<span class="number">1</span>,cmp);Tot=<span class="number">0</span>;pil L;tail=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)dd[v[i]]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"&amp;"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(i&amp;&amp;v[i]==v[i<span class="number">-1</span>])<span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;v[i]&lt;&lt;' '&lt;&lt;v[i-1]&lt;&lt;endl;</span></span><br><span class="line">L=Lca(stk[tail],v[i]);;</span><br><span class="line"><span class="keyword">while</span>(tail&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[L.ft]&gt;dep[stk[tail]]||L.ft==stk[tail])<span class="keyword">break</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;stk[tail]&lt;&lt;' '&lt;&lt;stk[tail-1]&lt;&lt;' '&lt;&lt;Lca(stk[tail],stk[tail-1]).sd&lt;&lt;"&amp;&amp;&amp;"&lt;&lt;endl;</span></span><br><span class="line">Add(stk[tail],stk[tail<span class="number">-1</span>],Lca(stk[tail],stk[tail<span class="number">-1</span>]).sd);</span><br><span class="line">--tail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(L.ft!=stk[tail])Fr[L.ft]=<span class="number">0</span>,stk[++tail]=L.ft,Q.push(L.ft);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)dd[v[i]]=<span class="number">0</span>;</span><br><span class="line">Fr[v[i]]=<span class="number">0</span>;stk[++tail]=v[i];Q.push(v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"@"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">while</span>(tail!=<span class="number">1</span>)Add(stk[tail],stk[tail<span class="number">-1</span>],Lca(stk[tail],stk[tail<span class="number">-1</span>]).sd),--tail;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dfs2(<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">while</span>(!Q.empty())&#123;<span class="keyword">int</span> x=Q.front();Q.pop();dd[x]=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"^"&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;n;++i)&#123;</span><br><span class="line">lg z;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">add(x,y,z);add(y,x,z);</span><br><span class="line">&#125;dep[<span class="number">1</span>]=<span class="number">1</span>;dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);v[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"$"&lt;&lt;endl;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,v+i);</span><br><span class="line">bt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;转移重要代码&quot;&gt;&lt;a href=&quot;#转移重要代码&quot; class=&quot;headerlink&quot; title=&quot;转移重要代码&quot;&gt;&lt;/a&gt;转移重要代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="图论" scheme="http://tenecnt.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Helloworld</title>
    <link href="http://tenecnt.github.io/2018/07/14/Helloworld/"/>
    <id>http://tenecnt.github.io/2018/07/14/Helloworld/</id>
    <published>2018-07-14T00:19:15.000Z</published>
    <updated>2018-07-16T05:06:05.608Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二次转移博客"><a href="#第二次转移博客" class="headerlink" title="第二次转移博客"></a>第二次转移博客</h1><p>$ \sqrt{\phi} $</p><script type="math/tex; mode=display">{1+1=2}</script><script type="math/tex; mode=display">{\fac 1}</script><p>Simple inline $a = b + c$</p><script type="math/tex; mode=display">\frac{\partial u}{\partial t}= h^2 \left( \frac{\partial^2 u}{\partial x^2} +\frac{\partial^2 u}{\partial y^2} +\frac{\partial^2 u}{\partial z^2}\right)</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第二次转移博客&quot;&gt;&lt;a href=&quot;#第二次转移博客&quot; class=&quot;headerlink&quot; title=&quot;第二次转移博客&quot;&gt;&lt;/a&gt;第二次转移博客&lt;/h1&gt;&lt;p&gt;$ \sqrt{\phi} $&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=d
      
    
    </summary>
    
    
      <category term="试验" scheme="http://tenecnt.github.io/tags/%E8%AF%95%E9%AA%8C/"/>
    
      <category term="math" scheme="http://tenecnt.github.io/tags/math/"/>
    
  </entry>
  
</feed>
