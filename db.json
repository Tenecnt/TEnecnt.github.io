{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/miho/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/miho/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/miho/source/images/12.jpeg","path":"images/12.jpeg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/123.jpeg","path":"images/123.jpeg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/25788865.jpeg","path":"images/25788865.jpeg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/miho/source/images/alipay_code.jpg","path":"images/alipay_code.jpg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/logo.png","path":"images/logo.png","modified":0,"renderable":1},{"_id":"themes/miho/source/images/scrollbar_arrow.png","path":"images/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/miho/source/images/stl.jpg","path":"images/stl.jpg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/miho/source/images/wechat_code.jpg","path":"images/wechat_code.jpg","modified":0,"renderable":1},{"_id":"themes/miho/source/js/animate.js","path":"js/animate.js","modified":0,"renderable":1},{"_id":"themes/miho/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/miho/source/js/pace.min.js","path":"js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/miho/source/js/particles.js","path":"js/particles.js","modified":0,"renderable":1},{"_id":"themes/miho/source/js/pop-img.js","path":"js/pop-img.js","modified":0,"renderable":1},{"_id":"themes/miho/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/miho/source/images/banner.jpg","path":"images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/miho/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/miho/source/images/banner2.jpeg","path":"images/banner2.jpeg","modified":0,"renderable":1},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/miho/source/images/banner3.jpg","path":"images/banner3.jpg","modified":0,"renderable":1},{"_id":"themes/miho/source/Gus.ico","path":"Gus.ico","modified":0,"renderable":1}],"Cache":[{"_id":"themes/miho/.gitignore","hash":"3882d7f995692721e31d9b8f886dd906d28f8439","modified":1536730232882},{"_id":"themes/miho/README.md","hash":"8a0fe72c26421a02bd9f491d53974947951b2977","modified":1536730232882},{"_id":"themes/miho/_config.yml","hash":"4a13002c3a3c05e1132e02ccfe61405a602ecfdb","modified":1539168992001},{"_id":"source/_posts/BM.md","hash":"621dea1fbce406c7624f9812531516b1aaeb126d","modified":1538827900711},{"_id":"source/_posts/CCAugINM.md","hash":"de882b90d49a6c0659a69c7903d2c7171ab71075","modified":1536730232874},{"_id":"source/_posts/CCJulyTom.md","hash":"dd9eef8a87cbaf6263d0b45a67ab068d04cafa43","modified":1536730232874},{"_id":"source/_posts/Helloworld.md","hash":"c09c5487d894812cb0c76d5b24d5eabaaf7caee9","modified":1536730232874},{"_id":"source/_posts/Stirling.md","hash":"5fb416c0e7ffb65c8b43272b36b0d3b6c45463a4","modified":1536730232874},{"_id":"source/_posts/bzoj5170.md","hash":"d5d0e7f6077d14412c16acf4c41b7067d77835ee","modified":1536730232874},{"_id":"source/_posts/fwt.md","hash":"f86430ebfef7b0dbebc1725c198d28202b933d13","modified":1537487263211},{"_id":"source/_posts/hzzdj.md","hash":"c266b7de91ed41968c5431cc159cc08d3052ea3f","modified":1536730232874},{"_id":"source/_posts/lct.md","hash":"33d98f20d478007759bb79cd0b161efc1ec39c78","modified":1536730232874},{"_id":"source/_posts/min25s.md","hash":"dcfb2004423d1246220e732225b65640c2f8d4e2","modified":1536730232874},{"_id":"source/_posts/noi18a.md","hash":"ff5b39bdd93d849241a9a87ade326670d77b8a76","modified":1536730232874},{"_id":"source/_posts/noi18b.md","hash":"ff94e6ce97aa7738e34d23ea35d61405cd2eb955","modified":1536730232874},{"_id":"source/_posts/noi18d.md","hash":"58af6d972bf836c56ef7e6aed28359bd67d69dcd","modified":1536730232874},{"_id":"source/_posts/poly.md","hash":"ed9335232e48efb7ac13d6baac74c718f2d059c1","modified":1536730232874},{"_id":"source/_posts/poly2.md","hash":"f6e7506db3089e6f55de4318351d78eb1c404b95","modified":1536730232874},{"_id":"source/_posts/todolist.md","hash":"3b5e2ef42ce9665811cc3f7696041036aa9a8edf","modified":1536730232874},{"_id":"source/_posts/xushu.md","hash":"36d0ddb2c724e812fc3db8788005f95ffed57c1a","modified":1536730232874},{"_id":"source/friends/index.md","hash":"e5b112462e3c9e5e5d0632916aaff83f46a28749","modified":1539316083834},{"_id":"themes/miho/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1536730232882},{"_id":"themes/miho/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1536730232882},{"_id":"themes/miho/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1536730232882},{"_id":"themes/miho/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1536730232882},{"_id":"themes/miho/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1536730232882},{"_id":"themes/miho/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1536730232882},{"_id":"themes/miho/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1536730232882},{"_id":"themes/miho/layout/archive.ejs","hash":"a81c2ee506a707abf3e84f60ea3c70fbd13f13d3","modified":1536730232882},{"_id":"themes/miho/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1536730232882},{"_id":"themes/miho/layout/index.ejs","hash":"6fbef93728cd69f28982c9b402529374313afec5","modified":1536730232882},{"_id":"themes/miho/layout/layout.ejs","hash":"b8840424b0d6a65f3576961631d0845b4281999d","modified":1536730232882},{"_id":"themes/miho/layout/page.ejs","hash":"ab68cf2f5e9eb7da189e8ae13b095106637b4163","modified":1539168516349},{"_id":"themes/miho/layout/post.ejs","hash":"194117cd9558e53fc95095db868810ab8cd2d239","modified":1536730232882},{"_id":"themes/miho/layout/tag.ejs","hash":"c808cccbb1a0ed975620b37a0e67e85a7c8ec875","modified":1536730232882},{"_id":"themes/miho/source/favicon.ico","hash":"35e86b04bcdeeec0cabdee2e968db69aa8202788","modified":1536730232886},{"_id":"themes/miho/layout/_partial/after-footer.ejs","hash":"f866c2a995198cac99656a4affe44f6a563027a7","modified":1536730232882},{"_id":"themes/miho/layout/_partial/archive-post.ejs","hash":"2a747112ca165f7055a665eb1b89696b1f00e845","modified":1536730232882},{"_id":"themes/miho/layout/_partial/archive.ejs","hash":"1f841349c94d40509dcb473799e72d2ec57b6fdb","modified":1536730232882},{"_id":"themes/miho/layout/_partial/article.ejs","hash":"0cd7fb60c562451f4d912ad88cf97dc6f9a49e5e","modified":1536730232882},{"_id":"themes/miho/layout/_partial/footer.ejs","hash":"4561f66bd34387a71b84cef1a07801e57ae4527a","modified":1536730232882},{"_id":"themes/miho/layout/_partial/head.ejs","hash":"630f6208191e2db57e5655ecb22195274244dd67","modified":1536730232882},{"_id":"themes/miho/layout/_partial/header.ejs","hash":"693a325e26481293dd4a35be01648635a35332a8","modified":1536730232882},{"_id":"themes/miho/layout/_partial/hitokoto.ejs","hash":"2972641fe2889c5621bb2ffc51c12b49e94c5f0e","modified":1536730232882},{"_id":"themes/miho/layout/_partial/mobile-nav.ejs","hash":"fa334fc205973aadf596784e2708a9549708fad7","modified":1536730232882},{"_id":"themes/miho/layout/_partial/search.ejs","hash":"5e581b7dcd32cfc767674a2846afcbe670256ca2","modified":1536730232882},{"_id":"themes/miho/layout/_partial/sidebar.ejs","hash":"b584c63b8c8ded9888435f1046a23df9acd67f70","modified":1536730232882},{"_id":"themes/miho/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1536730232882},{"_id":"themes/miho/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1536730232882},{"_id":"themes/miho/layout/_widget/recent_posts.ejs","hash":"1a1041680d6392c9f7b2016307e184db42ee27ab","modified":1536730232882},{"_id":"themes/miho/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1536730232882},{"_id":"themes/miho/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1536730232882},{"_id":"themes/miho/source/css/_extend.styl","hash":"2e13084404cf231512f2637a1efaa63cb9949068","modified":1536730232882},{"_id":"themes/miho/source/css/_variables.styl","hash":"fec587bfd047a1f618afd972b75cad6e81021be6","modified":1536730232882},{"_id":"themes/miho/source/css/style.styl","hash":"38ce101a4e904db24620febbda105c5b5335b106","modified":1536730232886},{"_id":"themes/miho/source/images/12.jpeg","hash":"ba2c64fba8983e587885327e45f30045d4fe94f2","modified":1536730232886},{"_id":"themes/miho/source/images/123.jpeg","hash":"0957ca9cc9bedc1e59afa6135d0ebc2896e0bb4d","modified":1536730232886},{"_id":"themes/miho/source/images/25788865.jpeg","hash":"4676e2abf40f41493c76e5694019cdffb7776b75","modified":1536730232886},{"_id":"themes/miho/source/images/alipay.png","hash":"b3f9db844b1e522fc55125302f2979f50a6d0529","modified":1536730232886},{"_id":"themes/miho/source/images/alipay_code.jpg","hash":"3b328818714af7fbf7b20748d783c861d876fd5b","modified":1536730232886},{"_id":"themes/miho/source/images/logo.png","hash":"f1d5d676b78b087ba2a1f177f7ca949c4c8296e4","modified":1536730232890},{"_id":"themes/miho/source/images/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1536730232890},{"_id":"themes/miho/source/images/stl.jpg","hash":"621488e22488b581e84c03302b9e88a2c211a830","modified":1536730232890},{"_id":"themes/miho/source/images/wechat.png","hash":"8de97bf5bb3f3a0845e02172f79d6bba2fb6bb3b","modified":1536730232890},{"_id":"themes/miho/source/images/wechat_code.jpg","hash":"4a5d67c6aed4a266ab0ddac7488361cfa01cf694","modified":1536730232890},{"_id":"themes/miho/source/js/animate.js","hash":"d5cf7dc4ad33b02bea74bb76d3eba85b67e907ce","modified":1536730232890},{"_id":"themes/miho/source/js/main.js","hash":"cae44d65bd63b29a749fcf43cea26d3b0cb8b2ef","modified":1536730232890},{"_id":"themes/miho/source/js/pace.min.js","hash":"d32ab818e0f97d3b0c80f5631fc23d8a0cb52795","modified":1536730232890},{"_id":"themes/miho/source/js/particles.js","hash":"8009af99d913d8c40509efaecfa5e56cefefbf0d","modified":1536730232890},{"_id":"themes/miho/source/js/pop-img.js","hash":"8e638e492b9699da1b9ca22d9f74a6578712925a","modified":1536730232890},{"_id":"themes/miho/source/js/search.js","hash":"ae4b06fd09a090a5388fd880bba919a1c0c64dd3","modified":1536730232890},{"_id":"themes/miho/source/images/banner.jpg","hash":"e1d7853fb02b68ee6adcc2d9b3ca647bc802e9a9","modified":1536730232886},{"_id":"themes/miho/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/copyright.ejs","hash":"8f6069e311908089f8b2851f0ce01c50f1418ee0","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/nav.ejs","hash":"f2dc6b9c72396fdb1a1e082760c909d4102972d4","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/reward.ejs","hash":"cbfee26b248c08a106a164f28d640c21cf184716","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/share.ejs","hash":"6f78a06e7192544a7b422697d5c988824320b7c7","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/tag.ejs","hash":"85c8e80fd158e282e0cae15f087515cb8bc89feb","modified":1536730232882},{"_id":"themes/miho/layout/_partial/post/title.ejs","hash":"745f1d88b7c72a3a235cb25624523f6c50fb22bf","modified":1539168552297},{"_id":"themes/miho/layout/_partial/post/toc.ejs","hash":"e3853445aa25e087023f87705329695803c7559e","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/archive.styl","hash":"ede0d1652892d3bcbec38752060945106a6eb9e8","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/article.styl","hash":"c953791ee70e3db68e584b7a4ed35c80bbcd4444","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/comment.styl","hash":"d0f38e19a43094fb8b9c6d84c52ec91030e2e881","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/footer.styl","hash":"d71916880dee26532c502b0735500a43837ca284","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/header.styl","hash":"a01e42f609ec67e5a9eecb22ddbc0aca078cdfc9","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/highlight.styl","hash":"dd97dae3d0a349e5460b58fec408392f2b265fd8","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/mobile.styl","hash":"17de8a444f05d2d5b96a8b88a6ba48baefa70f94","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/pace.styl","hash":"c70eea98b2cc347ea5fec333b107a564422b7f8f","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/post.styl","hash":"378f5cb4e76889604d68c7c82ccbee335a0e97cf","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/reward.styl","hash":"db0840761ff4b8c1f26241a8abcac66813bc3a2f","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/scroll.styl","hash":"be3dae89bec0da8a4249b7bb07be0f7383859167","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/share.styl","hash":"7d6a5ad5eddfa84ba47dc7c2cec9f2efa458cccb","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1536730232882},{"_id":"themes/miho/source/css/_partial/sidebar.styl","hash":"eb2d3d33148fed6ef9d0540b9a7c19d964d359a6","modified":1536730232882},{"_id":"themes/miho/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1536730232882},{"_id":"themes/miho/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1536730232882},{"_id":"themes/miho/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1536730232882},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1536730232882},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1536730232886},{"_id":"themes/miho/source/images/banner2.jpeg","hash":"2474d443937d37abc296dcdbe3f09cb7538b7b84","modified":1536730232886},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1536730232886},{"_id":"themes/miho/layout/_partial/plugins/analytics/baidu-analytics.ejs","hash":"b21500b87d79a0068e3ca0408b4e125e3e749d01","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/analytics/cnzz-analytics.ejs","hash":"87050e9063edebfe88f9766fc3430b2eac90c6ff","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/analytics/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/comments/changyan.ejs","hash":"23bc1544520a5376339ea9286f3177ce605da3fa","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/comments/gitment.ejs","hash":"4a5d0212a27ba54e386d92c1836a302e2eadde90","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/comments/wangyiyun.ejs","hash":"7245dacec0177d8fa1249e7cbee872c534e96dc9","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/comments/youyan.ejs","hash":"82b529c0df6bea5c098d147baa6201e6b295fc1b","modified":1536730232882},{"_id":"themes/miho/layout/_partial/plugins/sites/visit.ejs","hash":"a5daff983fb14472998bce00d0d113e303eddb19","modified":1536730232882},{"_id":"themes/miho/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1536730232886},{"_id":"themes/miho/source/images/banner3.jpg","hash":"d6d84635c41be2f4969a23aa8f96b5c017eeabe9","modified":1536730232890},{"_id":"themes/miho/source/Gus.ico","hash":"4e71d9ec615bb4b8f773d8f07241780b6bfc4e36","modified":1144510479000},{"_id":"public/atom.xml","hash":"a4ed724fc096509baafb00f8d369e69b392c4005","modified":1539169505020},{"_id":"public/content.json","hash":"3acc5a2a41493c0ecdf227586df53d20c813f97c","modified":1539315670564},{"_id":"public/sitemap.xml","hash":"86721f4d20494da59528ee2756f398d71262b0f3","modified":1539315670564},{"_id":"public/2018/09/01/lct/index.html","hash":"fba5323316bde74d4d42c2549353c04b08f06914","modified":1539169506045},{"_id":"public/2018/09/20/fwt/index.html","hash":"5ebc12bdd1abd399e27a4ba8a5a93617a1564a69","modified":1539169506047},{"_id":"public/friends/index.html","hash":"2d7ef784f130f7aecd0100e3c43a9dc580935ae2","modified":1539315671601},{"_id":"public/archives/2018/07/page/2/index.html","hash":"b87f9dfecb16709a0861f90fffa685f9ae370e83","modified":1539169506772},{"_id":"public/archives/2018/09/index.html","hash":"73e6e754d6c7f89b440d0e5d47d7583bf5ffb6cf","modified":1539169506772},{"_id":"public/tags/数列/index.html","hash":"ad181fcdd9a591693873f4da034a314b57c19ca6","modified":1539169506772},{"_id":"public/tags/递推式/index.html","hash":"13bb5df447a108331f444c27b154a05d2db35acb","modified":1539169506772},{"_id":"public/tags/交互题/index.html","hash":"af2aede8365875911a5ebe1c27e86233c4e3bcfe","modified":1539169506772},{"_id":"public/tags/乱搞/index.html","hash":"bb47de7fac0a67cc871ed3d75e5b800d3533067c","modified":1539169506772},{"_id":"public/tags/图论/index.html","hash":"7c8f6f8944e5938dd93be91d87eb77de15e19a0f","modified":1539169506772},{"_id":"public/tags/最大团/index.html","hash":"4c056b8609a689b5d06c376ca136fec908cd04d1","modified":1539169506772},{"_id":"public/tags/试验/index.html","hash":"dd6d461cc328d4016f6f029e245d949ba12343b4","modified":1539169506772},{"_id":"public/tags/math/index.html","hash":"379c6ef154031ef6f6728da0b559d63743d2fe7c","modified":1539169506773},{"_id":"public/tags/组合数学/index.html","hash":"cddd3a5be3961eb99b61e4d9a2cb6069480221fb","modified":1539169506773},{"_id":"public/tags/树状数组/index.html","hash":"2508174b78688eb65d09ef0e990b8fdd1a0b43ab","modified":1539169506773},{"_id":"public/tags/fwt/index.html","hash":"fd854a69f404d1f7fa552644a5759a2837d01067","modified":1539169506773},{"_id":"public/tags/字符串/index.html","hash":"9beae76de294aab28d45304c2ace8280b822d328","modified":1539169506773},{"_id":"public/tags/数据结构/index.html","hash":"24722bc0edddeb74f419049c4eca5c0d64df4f49","modified":1539169506773},{"_id":"public/tags/lct/index.html","hash":"5db1584b68fde2b438ef8c6afde7512728eb0050","modified":1539169506773},{"_id":"public/tags/数论/index.html","hash":"58ef3e1e2e6d2063216c285859724b65c2a8b009","modified":1539169506773},{"_id":"public/tags/数论筛/index.html","hash":"dc918b545a2a09423e6174e0f19aa8e1adb54130","modified":1539169506773},{"_id":"public/tags/NOI/index.html","hash":"dea76fb3f409e03d5280c642c13db79980aac0b8","modified":1539169506773},{"_id":"public/tags/生成树/index.html","hash":"21de5dd2d4e312e8416f4e7119f06c3fb194a495","modified":1539169506773},{"_id":"public/tags/CRT/index.html","hash":"f170661747300f3a26964943a619b4f838211a09","modified":1539169506774},{"_id":"public/tags/多项式/index.html","hash":"275e805cbeac09880128b1cf0f33ec4a873c35de","modified":1539169506774},{"_id":"public/tags/规划/index.html","hash":"cc1c126f18f52a8a5f0800c0c283f06787f00beb","modified":1539169506774},{"_id":"public/archives/2018/08/index.html","hash":"59c87fd8fe132a35e81a07c0caeaa65256b02d9b","modified":1539169506774},{"_id":"public/archives/2018/10/index.html","hash":"a7c21a791976a0dfd500904aef0c19366f044822","modified":1539169506774},{"_id":"public/2018/07/27/min25s/index.html","hash":"62626bf903e20d7426ebe285a9c8e05c58719404","modified":1539169506774},{"_id":"public/2018/08/09/CCAugINM/index.html","hash":"7d971af9b5b7537823a8ccafb1364e00ed4fca4e","modified":1539169506774},{"_id":"public/2018/07/24/Stirling/index.html","hash":"8cbaa8d3c6fb1aa472dccd8a999eacbb9f288788","modified":1539169506774},{"_id":"public/2018/07/24/CCJulyTom/index.html","hash":"9d053042b919a93a0d657fa0af8fc78ed67aef5f","modified":1539169506774},{"_id":"public/2018/07/24/bzoj5170/index.html","hash":"76f33654f16fce90d1f3b3ae3e8d90687877eac0","modified":1539169506775},{"_id":"public/2018/07/22/noi18d/index.html","hash":"be9903c591050ae674ab1ed5117c8dec194c1c36","modified":1539169506775},{"_id":"public/2018/07/19/noi18b/index.html","hash":"15e3bb45d44f4c07a1f98d2adcd02deea35d27c6","modified":1539169506775},{"_id":"public/2018/07/19/noi18a/index.html","hash":"bea41fc7d5f2d25878c122d35da35518e5e6cbe7","modified":1539169506775},{"_id":"public/2018/07/17/poly2/index.html","hash":"f87be57d2c07a8293f4bb2fc91c1e64d533a6b0e","modified":1539169506775},{"_id":"public/2018/10/06/BM/index.html","hash":"5423ae78baa414bebae5330600e1f6a363686a26","modified":1539169506775},{"_id":"public/2018/07/16/todolist/index.html","hash":"40516458d424abf4df9234e2a405d615a2238da8","modified":1539169506775},{"_id":"public/2018/07/16/xushu/index.html","hash":"1a510c62fc63273b16d032c5875ae3e52809b4d1","modified":1539169506776},{"_id":"public/archives/index.html","hash":"5c0e45e443cfd49b716a90f2ffe7e340d9471b2c","modified":1539169506776},{"_id":"public/archives/page/2/index.html","hash":"b62f250a9d2fb6abf990d0ebebaf6cd637ea58f5","modified":1539169506776},{"_id":"public/archives/2018/index.html","hash":"9de5a15ec78c8b05a2d834160e7c6f78ddff7220","modified":1539169506776},{"_id":"public/archives/2018/page/2/index.html","hash":"31029e956366fcc5ea9fd7f44b89308a976c11df","modified":1539169506776},{"_id":"public/archives/2018/07/index.html","hash":"d4edd20cc31f6a3b0bf0739de680aab2bd3f451f","modified":1539169506776},{"_id":"public/2018/07/16/hzzdj/index.html","hash":"76385a27f05a85e6b6df5e7d7b825b56d40a127d","modified":1539169506776},{"_id":"public/2018/07/16/poly/index.html","hash":"a168849b8e5af78994aeeb4c193b95060c5739a9","modified":1539169506776},{"_id":"public/index.html","hash":"7c28f51da0e74e0759a772d1ce8319a72348088b","modified":1539169506776},{"_id":"public/page/2/index.html","hash":"bb6601afc6ef4a03807620b2a457e6ec9cf74177","modified":1539169506776},{"_id":"public/2018/07/14/Helloworld/index.html","hash":"5886539e40dd61d6d1e925d1366a43efb4c8261c","modified":1539169506777},{"_id":"public/Gus.ico","hash":"4e71d9ec615bb4b8f773d8f07241780b6bfc4e36","modified":1539169506781}],"Category":[],"Data":[],"Page":[{"title":"Friends","date":"2018-10-10T10:11:31.000Z","_content":"They are my friends\n\n - <a href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">f<href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">unctionendless</a>\n\n - <a href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">d<href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">olabmoon</a>\n\n - <a href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">a<href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">pocrypha</a>\n\n - <a href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">j<href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">hdjames37</a>\n \n\n\n\n","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2018-10-10 18:11:31\n---\nThey are my friends\n\n - <a href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">f<href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">unctionendless</a>\n\n - <a href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">d<href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">olabmoon</a>\n\n - <a href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">a<href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">pocrypha</a>\n\n - <a href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">j<href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">hdjames37</a>\n \n\n\n\n","updated":"2018-10-12T03:48:03.834Z","path":"friends/index.html","_id":"cjn2zxwll0020injxsgtoxoca","comments":1,"layout":"page","content":"<p>They are my friends</p>\n<ul>\n<li><p><a href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">f<href=\"https: cnblogs.com=\"\" functionendless\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">unctionendless</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">d<href=\"https: dolabmoon.coding.me\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">olabmoon</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">a<href=\"https: cnblogs.com=\"\" apocrypha\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">pocrypha</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">j<href=\"https: jhdjames37.github.io\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">hdjames37</href=\"https:></a></p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>They are my friends</p>\n<ul>\n<li><p><a href=\"https://cnblogs.com/functionendless\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">f<href=\"https: cnblogs.com=\"\" functionendless\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">unctionendless</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://dolabmoon.coding.me\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">d<href=\"https: dolabmoon.coding.me\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">olabmoon</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://cnblogs.com/Apocrypha\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">a<href=\"https: cnblogs.com=\"\" apocrypha\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">pocrypha</href=\"https:></a></p>\n</li>\n<li><p><a href=\"https://jhdjames37.github.io\" target=\"_blank\" style=\"font-family:arial;color:black;font-size:20px;\">j<href=\"https: jhdjames37.github.io\"=\"\" target=\"_blank\" style=\"font-family:arial;color:red;font-size:20px;\">hdjames37</href=\"https:></a></p>\n</li>\n</ul>\n"}],"Post":[{"title":"Berlekamp-Massey学习","top":1,"mathjax":true,"date":"2018-10-06T10:12:03.000Z","_content":"\n刚刚学习了BM算法,用来求解一个数列所对应的最小次数递推式\n\n它的复杂度是$$O(n^2)$$的\n\n它的思路并不复杂\n\n首先,我们有一个数列\n\n接下来,我们要构造一个可以符合这个数列的递推式res,对于所有位置\n\n$$\\sum_{1}^{q}a[i-q] \\times res[q]=0$$\n\n我们从左往右扫\n\n每个位置记录$$ delta[i] $$表示$$\\sum_{1}^{q}a[i-q] \\times res[q]$$\n\n当$$delta[i]=0$$时,显然不需要任何修改\n\n否则,我们对递推式进行一些修改使其符合数列的前$$i$$位\n\n修改方法比较玄学......我不想讲了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define mp make_pair\n#define pb push_back\n#define lg long long\n#define pii pair<lg,lg>\n#define db double\n#define lb(x) ((x)&-(x))\n#define ft first\n#define sd second\n\n#define HII cerr<<\"HI\"<<endl\n#define LLLINE cerr<<\"@@@@@@@@@@@@@@@@@@@@\"<<endl\n\ntemplate <class _T_>\nvoid read(_T_& d){\n    d=0;int f=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f*=-1;\n    for(;c>='0'&&c<='9';c=getchar())d=d*10+c-'0';\n    d*=f;\n}\n\n/************************************************/\n#define Md 998244353\n#define MN 5005\n#define poly vector<int>\nnamespace{\n    inline int A(int x,int y){return x+y>=Md?x+y-Md:x+y;}\n    inline int S(int x,int y){return x-y<0?x-y+Md:x-y;}\n    inline int M(int x,int y){return (lg)x*y%Md;}\n    inline int P(int x,int y){int res=1;for(;y;y>>=1,x=M(x,x))if(y&1)res=M(res,x);return res;}\n    inline int D(int x,int y){return M(x,P(y,Md-2));}\n}\npoly s;int n;\nint dta[MN];\npoly bm(poly s){\n    static poly now,lst,llst;\n    now.clear();lst.clear();llst.clear();\n    int fail=-1,lfail=-1,cnt=0;\n    for(int i=0;i<n;++i){\n        int sum=S(0,s[i]);\n        for(unsigned j=0;j<now.size();++j){\n            sum=A(sum,M(now[j],s[i-j-1]));\n        }\n        dta[i]=sum;\n        if(!sum)continue;\n        fail=i;\n        if(!cnt){\n            lfail=fail;++cnt;now.resize(i+1);continue;\n        }\n        int ml=D(S(0,dta[i]),dta[lfail]);\n        ++cnt;lst.swap(now);\n        now.clear();now.resize(i-lfail-1);\n        now.pb(S(0,ml));\n        for(unsigned j=0;j<llst.size();++j){\n            now.pb(M(ml,llst[j]));\n        }\n        if(now.size()<lst.size())now.resize(lst.size());\n        for(unsigned j=0;j<now.size();++j){\n            now[j]=A(now[j],lst[j]);\n        }\n        if(i-lfail+llst.size()>=lst.size())llst=lst,lfail=fail;\n    }\n    return now;\n}\nint main(){\n    read(n);\n    s.resize(n);\n    for(int i=0;i<n;++i)read(s[i]);\n    poly res=bm(s);\n    cerr<<res.size()<<endl;\n    for(auto z:res)printf(\"%d \",z);\n    return 0;\n}\n```\n","source":"_posts/BM.md","raw":"---\ntitle: Berlekamp-Massey学习\ntop: 1\nmathjax: true\ndate: 2018-10-06 18:12:03\ntags:\n\t- 数列\n\t- 递推式\n---\n\n刚刚学习了BM算法,用来求解一个数列所对应的最小次数递推式\n\n它的复杂度是$$O(n^2)$$的\n\n它的思路并不复杂\n\n首先,我们有一个数列\n\n接下来,我们要构造一个可以符合这个数列的递推式res,对于所有位置\n\n$$\\sum_{1}^{q}a[i-q] \\times res[q]=0$$\n\n我们从左往右扫\n\n每个位置记录$$ delta[i] $$表示$$\\sum_{1}^{q}a[i-q] \\times res[q]$$\n\n当$$delta[i]=0$$时,显然不需要任何修改\n\n否则,我们对递推式进行一些修改使其符合数列的前$$i$$位\n\n修改方法比较玄学......我不想讲了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define mp make_pair\n#define pb push_back\n#define lg long long\n#define pii pair<lg,lg>\n#define db double\n#define lb(x) ((x)&-(x))\n#define ft first\n#define sd second\n\n#define HII cerr<<\"HI\"<<endl\n#define LLLINE cerr<<\"@@@@@@@@@@@@@@@@@@@@\"<<endl\n\ntemplate <class _T_>\nvoid read(_T_& d){\n    d=0;int f=1;char c=getchar();\n    for(;c<'0'||c>'9';c=getchar())if(c=='-')f*=-1;\n    for(;c>='0'&&c<='9';c=getchar())d=d*10+c-'0';\n    d*=f;\n}\n\n/************************************************/\n#define Md 998244353\n#define MN 5005\n#define poly vector<int>\nnamespace{\n    inline int A(int x,int y){return x+y>=Md?x+y-Md:x+y;}\n    inline int S(int x,int y){return x-y<0?x-y+Md:x-y;}\n    inline int M(int x,int y){return (lg)x*y%Md;}\n    inline int P(int x,int y){int res=1;for(;y;y>>=1,x=M(x,x))if(y&1)res=M(res,x);return res;}\n    inline int D(int x,int y){return M(x,P(y,Md-2));}\n}\npoly s;int n;\nint dta[MN];\npoly bm(poly s){\n    static poly now,lst,llst;\n    now.clear();lst.clear();llst.clear();\n    int fail=-1,lfail=-1,cnt=0;\n    for(int i=0;i<n;++i){\n        int sum=S(0,s[i]);\n        for(unsigned j=0;j<now.size();++j){\n            sum=A(sum,M(now[j],s[i-j-1]));\n        }\n        dta[i]=sum;\n        if(!sum)continue;\n        fail=i;\n        if(!cnt){\n            lfail=fail;++cnt;now.resize(i+1);continue;\n        }\n        int ml=D(S(0,dta[i]),dta[lfail]);\n        ++cnt;lst.swap(now);\n        now.clear();now.resize(i-lfail-1);\n        now.pb(S(0,ml));\n        for(unsigned j=0;j<llst.size();++j){\n            now.pb(M(ml,llst[j]));\n        }\n        if(now.size()<lst.size())now.resize(lst.size());\n        for(unsigned j=0;j<now.size();++j){\n            now[j]=A(now[j],lst[j]);\n        }\n        if(i-lfail+llst.size()>=lst.size())llst=lst,lfail=fail;\n    }\n    return now;\n}\nint main(){\n    read(n);\n    s.resize(n);\n    for(int i=0;i<n;++i)read(s[i]);\n    poly res=bm(s);\n    cerr<<res.size()<<endl;\n    for(auto z:res)printf(\"%d \",z);\n    return 0;\n}\n```\n","slug":"BM","published":1,"updated":"2018-10-06T12:11:40.711Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwj20000injxfzzb0pro","content":"<p>刚刚学习了BM算法,用来求解一个数列所对应的最小次数递推式</p>\n<p>它的复杂度是<script type=\"math/tex\">O(n^2)</script>的</p>\n<p>它的思路并不复杂</p>\n<p>首先,我们有一个数列</p>\n<p>接下来,我们要构造一个可以符合这个数列的递推式res,对于所有位置</p>\n<script type=\"math/tex; mode=display\">\\sum_{1}^{q}a[i-q] \\times res[q]=0</script><p>我们从左往右扫</p>\n<p>每个位置记录<script type=\"math/tex\">delta[i]</script>表示<script type=\"math/tex\">\\sum_{1}^{q}a[i-q] \\times res[q]</script></p>\n<p>当<script type=\"math/tex\">delta[i]=0</script>时,显然不需要任何修改</p>\n<p>否则,我们对递推式进行一些修改使其符合数列的前<script type=\"math/tex\">i</script>位</p>\n<p>修改方法比较玄学……我不想讲了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pb push_back</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pii pair<span class=\"meta-string\">&lt;lg,lg&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> db double</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;-(x))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> HII cerr&lt;&lt;<span class=\"meta-string\">\"HI\"</span>&lt;&lt;endl</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLLINE cerr&lt;&lt;<span class=\"meta-string\">\"@@@@@@@@@@@@@@@@@@@@\"</span>&lt;&lt;endl</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"class\"><span class=\"keyword\">class</span> _<span class=\"title\">T_</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">read</span>(_<span class=\"title\">T_</span>&amp; <span class=\"title\">d</span>)&#123;</span></span><br><span class=\"line\">    d=<span class=\"number\">0</span>;<span class=\"keyword\">int</span> f=<span class=\"number\">1</span>;<span class=\"keyword\">char</span> c=getchar();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;c&lt;<span class=\"string\">'0'</span>||c&gt;<span class=\"string\">'9'</span>;c=getchar())<span class=\"keyword\">if</span>(c==<span class=\"string\">'-'</span>)f*=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>;c=getchar())d=d*<span class=\"number\">10</span>+c-<span class=\"string\">'0'</span>;</span><br><span class=\"line\">    d*=f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/************************************************/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Md 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 5005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> poly vector<span class=\"meta-string\">&lt;int&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">A</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> x+y&gt;=Md?x+y-Md:x+y;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">S</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> x-y&lt;<span class=\"number\">0</span>?x-y+Md:x-y;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">M</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> (lg)x*y%Md;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">P</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;<span class=\"keyword\">for</span>(;y;y&gt;&gt;=<span class=\"number\">1</span>,x=M(x,x))<span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)res=M(res,x);<span class=\"keyword\">return</span> res;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> M(x,P(y,Md<span class=\"number\">-2</span>));&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">poly s;<span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dta[MN];</span><br><span class=\"line\"><span class=\"function\">poly <span class=\"title\">bm</span><span class=\"params\">(poly s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> poly now,lst,llst;</span><br><span class=\"line\">    now.clear();lst.clear();llst.clear();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> fail=<span class=\"number\">-1</span>,lfail=<span class=\"number\">-1</span>,cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum=S(<span class=\"number\">0</span>,s[i]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;now.size();++j)&#123;</span><br><span class=\"line\">            sum=A(sum,M(now[j],s[i-j<span class=\"number\">-1</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dta[i]=sum;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!sum)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        fail=i;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!cnt)&#123;</span><br><span class=\"line\">            lfail=fail;++cnt;now.resize(i+<span class=\"number\">1</span>);<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ml=D(S(<span class=\"number\">0</span>,dta[i]),dta[lfail]);</span><br><span class=\"line\">        ++cnt;lst.swap(now);</span><br><span class=\"line\">        now.clear();now.resize(i-lfail<span class=\"number\">-1</span>);</span><br><span class=\"line\">        now.pb(S(<span class=\"number\">0</span>,ml));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;llst.size();++j)&#123;</span><br><span class=\"line\">            now.pb(M(ml,llst[j]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(now.size()&lt;lst.size())now.resize(lst.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;now.size();++j)&#123;</span><br><span class=\"line\">            now[j]=A(now[j],lst[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i-lfail+llst.size()&gt;=lst.size())llst=lst,lfail=fail;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> now;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    read(n);</span><br><span class=\"line\">    s.resize(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)read(s[i]);</span><br><span class=\"line\">    poly res=bm(s);</span><br><span class=\"line\">    <span class=\"built_in\">cerr</span>&lt;&lt;res.size()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> z:res)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,z);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>刚刚学习了BM算法,用来求解一个数列所对应的最小次数递推式</p>\n<p>它的复杂度是<script type=\"math/tex\">O(n^2)</script>的</p>\n<p>它的思路并不复杂</p>\n<p>首先,我们有一个数列</p>\n<p>接下来,我们要构造一个可以符合这个数列的递推式res,对于所有位置</p>\n<script type=\"math/tex; mode=display\">\\sum_{1}^{q}a[i-q] \\times res[q]=0</script><p>我们从左往右扫</p>\n<p>每个位置记录<script type=\"math/tex\">delta[i]</script>表示<script type=\"math/tex\">\\sum_{1}^{q}a[i-q] \\times res[q]</script></p>\n<p>当<script type=\"math/tex\">delta[i]=0</script>时,显然不需要任何修改</p>\n<p>否则,我们对递推式进行一些修改使其符合数列的前<script type=\"math/tex\">i</script>位</p>\n<p>修改方法比较玄学……我不想讲了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pb push_back</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pii pair<span class=\"meta-string\">&lt;lg,lg&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> db double</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;-(x))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> HII cerr&lt;&lt;<span class=\"meta-string\">\"HI\"</span>&lt;&lt;endl</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LLLINE cerr&lt;&lt;<span class=\"meta-string\">\"@@@@@@@@@@@@@@@@@@@@\"</span>&lt;&lt;endl</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">template</span> &lt;<span class=\"class\"><span class=\"keyword\">class</span> _<span class=\"title\">T_</span>&gt;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">void</span> <span class=\"title\">read</span>(_<span class=\"title\">T_</span>&amp; <span class=\"title\">d</span>)&#123;</span></span><br><span class=\"line\">    d=<span class=\"number\">0</span>;<span class=\"keyword\">int</span> f=<span class=\"number\">1</span>;<span class=\"keyword\">char</span> c=getchar();</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;c&lt;<span class=\"string\">'0'</span>||c&gt;<span class=\"string\">'9'</span>;c=getchar())<span class=\"keyword\">if</span>(c==<span class=\"string\">'-'</span>)f*=<span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(;c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>;c=getchar())d=d*<span class=\"number\">10</span>+c-<span class=\"string\">'0'</span>;</span><br><span class=\"line\">    d*=f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/************************************************/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> Md 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 5005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> poly vector<span class=\"meta-string\">&lt;int&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">A</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> x+y&gt;=Md?x+y-Md:x+y;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">S</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> x-y&lt;<span class=\"number\">0</span>?x-y+Md:x-y;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">M</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> (lg)x*y%Md;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">P</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">int</span> res=<span class=\"number\">1</span>;<span class=\"keyword\">for</span>(;y;y&gt;&gt;=<span class=\"number\">1</span>,x=M(x,x))<span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)res=M(res,x);<span class=\"keyword\">return</span> res;&#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;<span class=\"keyword\">return</span> M(x,P(y,Md<span class=\"number\">-2</span>));&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">poly s;<span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dta[MN];</span><br><span class=\"line\"><span class=\"function\">poly <span class=\"title\">bm</span><span class=\"params\">(poly s)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">static</span> poly now,lst,llst;</span><br><span class=\"line\">    now.clear();lst.clear();llst.clear();</span><br><span class=\"line\">    <span class=\"keyword\">int</span> fail=<span class=\"number\">-1</span>,lfail=<span class=\"number\">-1</span>,cnt=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sum=S(<span class=\"number\">0</span>,s[i]);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;now.size();++j)&#123;</span><br><span class=\"line\">            sum=A(sum,M(now[j],s[i-j<span class=\"number\">-1</span>]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dta[i]=sum;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!sum)<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        fail=i;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!cnt)&#123;</span><br><span class=\"line\">            lfail=fail;++cnt;now.resize(i+<span class=\"number\">1</span>);<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ml=D(S(<span class=\"number\">0</span>,dta[i]),dta[lfail]);</span><br><span class=\"line\">        ++cnt;lst.swap(now);</span><br><span class=\"line\">        now.clear();now.resize(i-lfail<span class=\"number\">-1</span>);</span><br><span class=\"line\">        now.pb(S(<span class=\"number\">0</span>,ml));</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;llst.size();++j)&#123;</span><br><span class=\"line\">            now.pb(M(ml,llst[j]));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(now.size()&lt;lst.size())now.resize(lst.size());</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">unsigned</span> j=<span class=\"number\">0</span>;j&lt;now.size();++j)&#123;</span><br><span class=\"line\">            now[j]=A(now[j],lst[j]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(i-lfail+llst.size()&gt;=lst.size())llst=lst,lfail=fail;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> now;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    read(n);</span><br><span class=\"line\">    s.resize(n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)read(s[i]);</span><br><span class=\"line\">    poly res=bm(s);</span><br><span class=\"line\">    <span class=\"built_in\">cerr</span>&lt;&lt;res.size()&lt;&lt;<span class=\"built_in\">endl</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">auto</span> z:res)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d \"</span>,z);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"(CC 2018AugestLong)Interactive Matrix","top":1,"mathjax":true,"date":"2018-08-09T02:51:29.000Z","_content":"[这](https://www.codechef.com/AUG18A/problems/INMAT)真是一道神奇的乱搞题\n\n首先限制说明，询问次数可以达到$$4n$$\n我们发现，每次询问四个顶点，当一边的两个值都大于$$V$$时，可以除去这一边\n如果这样走完整个矩阵，答案刚好$$4n$$\n但是这里就出现了所不能解决的情况\n\n\n| | | |  |\n|--|--|--|--|\n|大| | |小|\n|小| | |大|\n\n这样什么都删不掉\n\n这可如何是好？\n\n注意到上下左右关于$$V$$的大小关系\n\n其一定是\n\n\n| | | |  |\n|--|--|--|--|\n|大|大 | 小|小|\n|大| 大|大 |小|\n|小| 小| 大|大|\n\n或\n\n| | | |  |\n|--|--|--|--|\n|大|大 | 小|小|\n|大| 大| 小|小|\n|小|小| 小|大|\n\n这类的情况\n\n也就是说，“大”与“小”分别占据角上一部分，并且扩展方向是单调的\n\n这时爆扫边界，复杂度就是两条边界的长度，但确定边界开始位置时，要爆扫一边，所以最坏情况下要$$6n$$\n\n我码完后才发现这有点假了~~其实本来发现不了的，但交题时网炸了，菊花转不出，这时复杂度一分析好像不对~~，但顺手还是交了一发（毕竟写完了嘛），然后。。。\n\n# 过了！\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 1005\nint V;\nint a[MN][MN];\nint b[MN],c[MN];\nint k=0,K;\n\nint Qry(int x,int y){\n\tif(a[x][y])return a[x][y];\n\t++k;\n\tprintf(\"1 %d %d\\n\",x,y);\n\tfflush(stdout);\n\tint res;\n\tscanf(\"%d\",&res);\n\tif(res==V){\n\t\tprintf(\"2 %d %d\\n\",x,y);\n\t\tfflush(stdout);\n\t\texit(0);\n\t}\n\tif(k==K){\n\t\tputs(\"2 -1 -1\");\n\t\tfflush(stdout);\n\t\texit(0);\n\t}\n\treturn a[x][y]=res;\n}\n\nvoid Rin(int u,int d,int l,int r){\n\tint Vul=Qry(u,l);\n\tint Vdl=Qry(d,l);\n\tint Vur=Qry(u,r);\n\tint Vdr=Qry(d,r);\n\tif(Vul>V){\n\t\tint x=u,y=l;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)++y;if(y>r)--y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)--y;\n\t\t\t++x;\n\t\t}\n\t\tx=d,y=r;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)--y;if(y<l)++y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)++y;\n\t\t\t--x;\n\t\t}\n\t}else{\n\t\tint x=d,y=l;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)++y;if(y>r)--y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)--y;\n\t\t\t--x;\n\t\t}\n\t\tx=u,y=r;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)--y;if(y<l)++y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)++y;\n\t\t\t++x;\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d%d%d\",&n,&K,&V);\n\tint u=1,l=1,r=n,d=n;\n\twhile(u<=d&&r>=l){\n\t\t//cout<<\"ID\"<<' '<<u<<' '<<d<<' '<<l<<' '<<r<<endl;\n\t\tif(Qry(u,l)>V&&Qry(u,r)>V||Qry(u,l)<V&&Qry(u,r)<V){++u;continue;}\n\t\tif(Qry(d,l)>V&&Qry(d,r)>V||Qry(d,l)<V&&Qry(d,r)<V){--d;continue;}\n\t\tif(Qry(u,l)>V&&Qry(d,l)>V||Qry(u,l)<V&&Qry(d,l)<V){++l;continue;}\n\t\tif(Qry(u,r)>V&&Qry(d,r)>V||Qry(u,r)<V&&Qry(d,r)<V){--r;continue;}\n\t\tbreak;\n\t}\n\t//cout<<\"#####\"<<endl;\n\tif(u>d||r<l){\n\t\tputs(\"2 -1 -1\");\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\tRin(u,d,l,r);\n\tputs(\"2 -1 -1\");\n\tfflush(stdout);\n\treturn 0;\n}\n```\n","source":"_posts/CCAugINM.md","raw":"---\ntitle: (CC 2018AugestLong)Interactive Matrix\ntop: 1\nmathjax: true\ndate: 2018-08-09 10:51:29\ntags:\n\t- 交互题\n\t- 乱搞\n---\n[这](https://www.codechef.com/AUG18A/problems/INMAT)真是一道神奇的乱搞题\n\n首先限制说明，询问次数可以达到$$4n$$\n我们发现，每次询问四个顶点，当一边的两个值都大于$$V$$时，可以除去这一边\n如果这样走完整个矩阵，答案刚好$$4n$$\n但是这里就出现了所不能解决的情况\n\n\n| | | |  |\n|--|--|--|--|\n|大| | |小|\n|小| | |大|\n\n这样什么都删不掉\n\n这可如何是好？\n\n注意到上下左右关于$$V$$的大小关系\n\n其一定是\n\n\n| | | |  |\n|--|--|--|--|\n|大|大 | 小|小|\n|大| 大|大 |小|\n|小| 小| 大|大|\n\n或\n\n| | | |  |\n|--|--|--|--|\n|大|大 | 小|小|\n|大| 大| 小|小|\n|小|小| 小|大|\n\n这类的情况\n\n也就是说，“大”与“小”分别占据角上一部分，并且扩展方向是单调的\n\n这时爆扫边界，复杂度就是两条边界的长度，但确定边界开始位置时，要爆扫一边，所以最坏情况下要$$6n$$\n\n我码完后才发现这有点假了~~其实本来发现不了的，但交题时网炸了，菊花转不出，这时复杂度一分析好像不对~~，但顺手还是交了一发（毕竟写完了嘛），然后。。。\n\n# 过了！\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 1005\nint V;\nint a[MN][MN];\nint b[MN],c[MN];\nint k=0,K;\n\nint Qry(int x,int y){\n\tif(a[x][y])return a[x][y];\n\t++k;\n\tprintf(\"1 %d %d\\n\",x,y);\n\tfflush(stdout);\n\tint res;\n\tscanf(\"%d\",&res);\n\tif(res==V){\n\t\tprintf(\"2 %d %d\\n\",x,y);\n\t\tfflush(stdout);\n\t\texit(0);\n\t}\n\tif(k==K){\n\t\tputs(\"2 -1 -1\");\n\t\tfflush(stdout);\n\t\texit(0);\n\t}\n\treturn a[x][y]=res;\n}\n\nvoid Rin(int u,int d,int l,int r){\n\tint Vul=Qry(u,l);\n\tint Vdl=Qry(d,l);\n\tint Vur=Qry(u,r);\n\tint Vdr=Qry(d,r);\n\tif(Vul>V){\n\t\tint x=u,y=l;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)++y;if(y>r)--y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)--y;\n\t\t\t++x;\n\t\t}\n\t\tx=d,y=r;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)--y;if(y<l)++y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)++y;\n\t\t\t--x;\n\t\t}\n\t}else{\n\t\tint x=d,y=l;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)++y;if(y>r)--y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)--y;\n\t\t\t--x;\n\t\t}\n\t\tx=u,y=r;\n\t\twhile(x>=u&&x<=d&&y>=l&&y<=r){\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)>V)--y;if(y<l)++y;\n\t\t\twhile(y>=l&&y<=r&&Qry(x,y)<V)++y;\n\t\t\t++x;\n\t\t}\n\t}\n}\n\nint main(){\n\tint n;\n\tscanf(\"%d%d%d\",&n,&K,&V);\n\tint u=1,l=1,r=n,d=n;\n\twhile(u<=d&&r>=l){\n\t\t//cout<<\"ID\"<<' '<<u<<' '<<d<<' '<<l<<' '<<r<<endl;\n\t\tif(Qry(u,l)>V&&Qry(u,r)>V||Qry(u,l)<V&&Qry(u,r)<V){++u;continue;}\n\t\tif(Qry(d,l)>V&&Qry(d,r)>V||Qry(d,l)<V&&Qry(d,r)<V){--d;continue;}\n\t\tif(Qry(u,l)>V&&Qry(d,l)>V||Qry(u,l)<V&&Qry(d,l)<V){++l;continue;}\n\t\tif(Qry(u,r)>V&&Qry(d,r)>V||Qry(u,r)<V&&Qry(d,r)<V){--r;continue;}\n\t\tbreak;\n\t}\n\t//cout<<\"#####\"<<endl;\n\tif(u>d||r<l){\n\t\tputs(\"2 -1 -1\");\n\t\tfflush(stdout);\n\t\treturn 0;\n\t}\n\tRin(u,d,l,r);\n\tputs(\"2 -1 -1\");\n\tfflush(stdout);\n\treturn 0;\n}\n```\n","slug":"CCAugINM","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwj80001injx9kvzzj4z","content":"<p><a href=\"https://www.codechef.com/AUG18A/problems/INMAT\" target=\"_blank\" rel=\"noopener\">这</a>真是一道神奇的乱搞题</p>\n<p>首先限制说明，询问次数可以达到<script type=\"math/tex\">4n</script><br>我们发现，每次询问四个顶点，当一边的两个值都大于<script type=\"math/tex\">V</script>时，可以除去这一边<br>如果这样走完整个矩阵，答案刚好<script type=\"math/tex\">4n</script><br>但是这里就出现了所不能解决的情况</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td></td>\n<td></td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td></td>\n<td></td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>这样什么都删不掉</p>\n<p>这可如何是好？</p>\n<p>注意到上下左右关于<script type=\"math/tex\">V</script>的大小关系</p>\n<p>其一定是</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td>小</td>\n<td>大</td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>或</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td>小</td>\n<td>小</td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>这类的情况</p>\n<p>也就是说，“大”与“小”分别占据角上一部分，并且扩展方向是单调的</p>\n<p>这时爆扫边界，复杂度就是两条边界的长度，但确定边界开始位置时，要爆扫一边，所以最坏情况下要<script type=\"math/tex\">6n</script></p>\n<p>我码完后才发现这有点假了<del>其实本来发现不了的，但交题时网炸了，菊花转不出，这时复杂度一分析好像不对</del>，但顺手还是交了一发（毕竟写完了嘛），然后。。。</p>\n<h1 id=\"过了！\"><a href=\"#过了！\" class=\"headerlink\" title=\"过了！\"></a>过了！</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1005</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> V;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[MN][MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> b[MN],c[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> k=<span class=\"number\">0</span>,K;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a[x][y])<span class=\"keyword\">return</span> a[x][y];</span><br><span class=\"line\">\t++k;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"1 %d %d\\n\"</span>,x,y);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;res);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(res==V)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"2 %d %d\\n\"</span>,x,y);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(k==K)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a[x][y]=res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rin</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vul=Qry(u,l);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vdl=Qry(d,l);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vur=Qry(u,r);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vdr=Qry(d,r);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Vul&gt;V)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=u,y=l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class=\"keyword\">if</span>(y&gt;r)--y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class=\"line\">\t\t\t++x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tx=d,y=r;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class=\"keyword\">if</span>(y&lt;l)++y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class=\"line\">\t\t\t--x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=d,y=l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class=\"keyword\">if</span>(y&gt;r)--y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class=\"line\">\t\t\t--x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tx=u,y=r;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class=\"keyword\">if</span>(y&lt;l)++y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class=\"line\">\t\t\t++x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;K,&amp;V);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>,l=<span class=\"number\">1</span>,r=n,d=n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(u&lt;=d&amp;&amp;r&gt;=l)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//cout&lt;&lt;\"ID\"&lt;&lt;' '&lt;&lt;u&lt;&lt;' '&lt;&lt;d&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(u,r)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(u,r)&lt;V)&#123;++u;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(d,l)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(d,l)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--d;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(d,l)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(d,l)&lt;V)&#123;++l;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,r)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(u,r)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--r;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//cout&lt;&lt;\"#####\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(u&gt;d||r&lt;l)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tRin(u,d,l,r);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.codechef.com/AUG18A/problems/INMAT\" target=\"_blank\" rel=\"noopener\">这</a>真是一道神奇的乱搞题</p>\n<p>首先限制说明，询问次数可以达到<script type=\"math/tex\">4n</script><br>我们发现，每次询问四个顶点，当一边的两个值都大于<script type=\"math/tex\">V</script>时，可以除去这一边<br>如果这样走完整个矩阵，答案刚好<script type=\"math/tex\">4n</script><br>但是这里就出现了所不能解决的情况</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td></td>\n<td></td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td></td>\n<td></td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>这样什么都删不掉</p>\n<p>这可如何是好？</p>\n<p>注意到上下左右关于<script type=\"math/tex\">V</script>的大小关系</p>\n<p>其一定是</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td>小</td>\n<td>大</td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>或</p>\n<div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>大</td>\n<td>大</td>\n<td>小</td>\n<td>小</td>\n</tr>\n<tr>\n<td>小</td>\n<td>小</td>\n<td>小</td>\n<td>大</td>\n</tr>\n</tbody>\n</table>\n</div>\n<p>这类的情况</p>\n<p>也就是说，“大”与“小”分别占据角上一部分，并且扩展方向是单调的</p>\n<p>这时爆扫边界，复杂度就是两条边界的长度，但确定边界开始位置时，要爆扫一边，所以最坏情况下要<script type=\"math/tex\">6n</script></p>\n<p>我码完后才发现这有点假了<del>其实本来发现不了的，但交题时网炸了，菊花转不出，这时复杂度一分析好像不对</del>，但顺手还是交了一发（毕竟写完了嘛），然后。。。</p>\n<h1 id=\"过了！\"><a href=\"#过了！\" class=\"headerlink\" title=\"过了！\"></a>过了！</h1><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1005</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> V;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[MN][MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> b[MN],c[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> k=<span class=\"number\">0</span>,K;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(a[x][y])<span class=\"keyword\">return</span> a[x][y];</span><br><span class=\"line\">\t++k;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"1 %d %d\\n\"</span>,x,y);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;res);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(res==V)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"2 %d %d\\n\"</span>,x,y);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(k==K)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a[x][y]=res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rin</span><span class=\"params\">(<span class=\"keyword\">int</span> u,<span class=\"keyword\">int</span> d,<span class=\"keyword\">int</span> l,<span class=\"keyword\">int</span> r)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vul=Qry(u,l);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vdl=Qry(d,l);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vur=Qry(u,r);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> Vdr=Qry(d,r);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(Vul&gt;V)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=u,y=l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class=\"keyword\">if</span>(y&gt;r)--y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class=\"line\">\t\t\t++x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tx=d,y=r;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class=\"keyword\">if</span>(y&lt;l)++y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class=\"line\">\t\t\t--x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=d,y=l;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class=\"keyword\">if</span>(y&gt;r)--y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class=\"line\">\t\t\t--x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tx=u,y=r;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class=\"keyword\">if</span>(y&lt;l)++y;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class=\"line\">\t\t\t++x;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> n;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%d\"</span>,&amp;n,&amp;K,&amp;V);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> u=<span class=\"number\">1</span>,l=<span class=\"number\">1</span>,r=n,d=n;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(u&lt;=d&amp;&amp;r&gt;=l)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//cout&lt;&lt;\"ID\"&lt;&lt;' '&lt;&lt;u&lt;&lt;' '&lt;&lt;d&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(u,r)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(u,r)&lt;V)&#123;++u;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(d,l)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(d,l)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--d;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(d,l)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(d,l)&lt;V)&#123;++l;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Qry(u,r)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(u,r)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--r;<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//cout&lt;&lt;\"#####\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(u&gt;d||r&lt;l)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tRin(u,d,l,r);</span><br><span class=\"line\">\t<span class=\"built_in\">puts</span>(<span class=\"string\">\"2 -1 -1\"</span>);</span><br><span class=\"line\">\tfflush(<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"(CC JulyLong)Tom and Jerry","top":1,"mathjax":true,"date":"2018-07-24T11:54:37.000Z","_content":"这道题首先先猜一个结论：这是要求最大团\n\n但是最大团怎么跑200000呢\n\n这里有一个优越的性质：这是一个弦图\n\n弦图有一个优秀的性质：它有一个完美消除序列\n\n完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键点\n\n还有一个性质：它的最大团大小就是他的最大染色数\n\n还有一个性质：按逆完美消除序列操作贪心染色就是最优解\n\n所以求出完美消除序列就行了\n\n于是要用一个神奇的算法，它叫MCS\n\n它倒过来求完美消除序列\n\n每次取与现在已被取的点中度数最大的\n\n弄一堆链表~~(vector)~~就能操作了\n\n# 以上所有内容，全部只会用不会证。证明？不存在的～～\n\n留下一个[好东西](https://www.codechef.com/JULY18A/problems/JERRYTOM)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 400005\n\nint fr[MN],nex[MN<<1],vi[MN<<1],tot=0;\nvoid add(int x,int y){\n\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;\n}\n\nint n,m;\nint vd[MN],d[MN];\n\nstruct Node{\n\tint v,id;\n};\nbool operator<(Node A,Node B){\n\treturn A.v<B.v||A.v==B.v&&A.id<B.id;\n}\n\nvector<int> V[MN];\n\nvoid clear(){\n\tmemset(fr,0,sizeof fr);\n\ttot=0;\n\tmemset(vd,0,sizeof vd);\n\tmemset(d,0,sizeof d);\n\tfor(int i=0;i<=n;++i)V[i].clear();\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tclear();\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1,a,b;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tadd(a,b);add(b,a);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tV[0].push_back(i);\n\t\t}int Ms=0;int res=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\twhile(V[Ms].size()==0||vd[V[Ms][V[Ms].size()-1]]){\n\t\t\t\tif(V[Ms].size()==0)--Ms;\n\t\t\t\telse V[Ms].pop_back();\n\t\t\t}\n\t\t\tint x=V[Ms][V[Ms].size()-1],sz=1;\n\t\t\tV[Ms].pop_back();\n\t\t\tvd[x]=1;\n\t\t\t//cout<<x<<\"#\"<<endl;\n\t\t\tfor(int i=fr[x];i;i=nex[i])if(!vd[vi[i]]){\n\t\t\t\t++d[vi[i]];\n\t\t\t\tV[d[vi[i]]].push_back(vi[i]);\n\t\t\t\tMs=max(Ms,d[vi[i]]);\n\t\t\t\t//Q.push((Node){d[vi[i]],vi[i]});\n\t\t\t}else ++sz;\n\t\t\tres=max(res,sz);\n\t\t\t//cout<<sz<<endl;\n\t\t}\n\t\tprintf(\"%d\\n\",res);\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/CCJulyTom.md","raw":"---\ntitle: (CC JulyLong)Tom and Jerry\ntop: 1\nmathjax: true\ndate: 2018-07-24 19:54:37\ntags:\n\t- 图论\n\t- 最大团\n---\n这道题首先先猜一个结论：这是要求最大团\n\n但是最大团怎么跑200000呢\n\n这里有一个优越的性质：这是一个弦图\n\n弦图有一个优秀的性质：它有一个完美消除序列\n\n完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键点\n\n还有一个性质：它的最大团大小就是他的最大染色数\n\n还有一个性质：按逆完美消除序列操作贪心染色就是最优解\n\n所以求出完美消除序列就行了\n\n于是要用一个神奇的算法，它叫MCS\n\n它倒过来求完美消除序列\n\n每次取与现在已被取的点中度数最大的\n\n弄一堆链表~~(vector)~~就能操作了\n\n# 以上所有内容，全部只会用不会证。证明？不存在的～～\n\n留下一个[好东西](https://www.codechef.com/JULY18A/problems/JERRYTOM)\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 400005\n\nint fr[MN],nex[MN<<1],vi[MN<<1],tot=0;\nvoid add(int x,int y){\n\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;\n}\n\nint n,m;\nint vd[MN],d[MN];\n\nstruct Node{\n\tint v,id;\n};\nbool operator<(Node A,Node B){\n\treturn A.v<B.v||A.v==B.v&&A.id<B.id;\n}\n\nvector<int> V[MN];\n\nvoid clear(){\n\tmemset(fr,0,sizeof fr);\n\ttot=0;\n\tmemset(vd,0,sizeof vd);\n\tmemset(d,0,sizeof d);\n\tfor(int i=0;i<=n;++i)V[i].clear();\n}\n\nint main(){\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tclear();\n\t\tscanf(\"%d%d\",&n,&m);\n\t\tfor(int i=1,a,b;i<=m;++i){\n\t\t\tscanf(\"%d%d\",&a,&b);\n\t\t\tadd(a,b);add(b,a);\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tV[0].push_back(i);\n\t\t}int Ms=0;int res=0;\n\t\tfor(int i=1;i<=n;++i){\n\t\t\twhile(V[Ms].size()==0||vd[V[Ms][V[Ms].size()-1]]){\n\t\t\t\tif(V[Ms].size()==0)--Ms;\n\t\t\t\telse V[Ms].pop_back();\n\t\t\t}\n\t\t\tint x=V[Ms][V[Ms].size()-1],sz=1;\n\t\t\tV[Ms].pop_back();\n\t\t\tvd[x]=1;\n\t\t\t//cout<<x<<\"#\"<<endl;\n\t\t\tfor(int i=fr[x];i;i=nex[i])if(!vd[vi[i]]){\n\t\t\t\t++d[vi[i]];\n\t\t\t\tV[d[vi[i]]].push_back(vi[i]);\n\t\t\t\tMs=max(Ms,d[vi[i]]);\n\t\t\t\t//Q.push((Node){d[vi[i]],vi[i]});\n\t\t\t}else ++sz;\n\t\t\tres=max(res,sz);\n\t\t\t//cout<<sz<<endl;\n\t\t}\n\t\tprintf(\"%d\\n\",res);\n\t}\n\treturn 0;\n}\n```\n","slug":"CCJulyTom","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwje0003injxvb9pn24c","content":"<p>这道题首先先猜一个结论：这是要求最大团</p>\n<p>但是最大团怎么跑200000呢</p>\n<p>这里有一个优越的性质：这是一个弦图</p>\n<p>弦图有一个优秀的性质：它有一个完美消除序列</p>\n<p>完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键点</p>\n<p>还有一个性质：它的最大团大小就是他的最大染色数</p>\n<p>还有一个性质：按逆完美消除序列操作贪心染色就是最优解</p>\n<p>所以求出完美消除序列就行了</p>\n<p>于是要用一个神奇的算法，它叫MCS</p>\n<p>它倒过来求完美消除序列</p>\n<p>每次取与现在已被取的点中度数最大的</p>\n<p>弄一堆链表<del>(vector)</del>就能操作了</p>\n<h1 id=\"以上所有内容，全部只会用不会证。证明？不存在的～～\"><a href=\"#以上所有内容，全部只会用不会证。证明？不存在的～～\" class=\"headerlink\" title=\"以上所有内容，全部只会用不会证。证明？不存在的～～\"></a>以上所有内容，全部只会用不会证。证明？不存在的～～</h1><p>留下一个<a href=\"https://www.codechef.com/JULY18A/problems/JERRYTOM\" target=\"_blank\" rel=\"noopener\">好东西</a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 400005</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> fr[MN],nex[MN&lt;&lt;<span class=\"number\">1</span>],vi[MN&lt;&lt;<span class=\"number\">1</span>],tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> vd[MN],d[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,id;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Node A,Node B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.v&lt;B.v||A.v==B.v&amp;&amp;A.id&lt;B.id;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; V[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(fr,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> fr);</span><br><span class=\"line\">\ttot=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vd,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vd);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(d,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> d);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)V[i].clear();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\tclear();</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,a,b;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">\t\t\tadd(a,b);add(b,a);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\tV[<span class=\"number\">0</span>].push_back(i);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">int</span> Ms=<span class=\"number\">0</span>;<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(V[Ms].size()==<span class=\"number\">0</span>||vd[V[Ms][V[Ms].size()<span class=\"number\">-1</span>]])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(V[Ms].size()==<span class=\"number\">0</span>)--Ms;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> V[Ms].pop_back();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x=V[Ms][V[Ms].size()<span class=\"number\">-1</span>],sz=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tV[Ms].pop_back();</span><br><span class=\"line\">\t\t\tvd[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//cout&lt;&lt;x&lt;&lt;\"#\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])<span class=\"keyword\">if</span>(!vd[vi[i]])&#123;</span><br><span class=\"line\">\t\t\t\t++d[vi[i]];</span><br><span class=\"line\">\t\t\t\tV[d[vi[i]]].push_back(vi[i]);</span><br><span class=\"line\">\t\t\t\tMs=max(Ms,d[vi[i]]);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//Q.push((Node)&#123;d[vi[i]],vi[i]&#125;);</span></span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> ++sz;</span><br><span class=\"line\">\t\t\tres=max(res,sz);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//cout&lt;&lt;sz&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>这道题首先先猜一个结论：这是要求最大团</p>\n<p>但是最大团怎么跑200000呢</p>\n<p>这里有一个优越的性质：这是一个弦图</p>\n<p>弦图有一个优秀的性质：它有一个完美消除序列</p>\n<p>完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键点</p>\n<p>还有一个性质：它的最大团大小就是他的最大染色数</p>\n<p>还有一个性质：按逆完美消除序列操作贪心染色就是最优解</p>\n<p>所以求出完美消除序列就行了</p>\n<p>于是要用一个神奇的算法，它叫MCS</p>\n<p>它倒过来求完美消除序列</p>\n<p>每次取与现在已被取的点中度数最大的</p>\n<p>弄一堆链表<del>(vector)</del>就能操作了</p>\n<h1 id=\"以上所有内容，全部只会用不会证。证明？不存在的～～\"><a href=\"#以上所有内容，全部只会用不会证。证明？不存在的～～\" class=\"headerlink\" title=\"以上所有内容，全部只会用不会证。证明？不存在的～～\"></a>以上所有内容，全部只会用不会证。证明？不存在的～～</h1><p>留下一个<a href=\"https://www.codechef.com/JULY18A/problems/JERRYTOM\" target=\"_blank\" rel=\"noopener\">好东西</a><br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 400005</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> fr[MN],nex[MN&lt;&lt;<span class=\"number\">1</span>],vi[MN&lt;&lt;<span class=\"number\">1</span>],tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"><span class=\"keyword\">int</span> vd[MN],d[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,id;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Node A,Node B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.v&lt;B.v||A.v==B.v&amp;&amp;A.id&lt;B.id;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">vector</span>&lt;<span class=\"keyword\">int</span>&gt; V[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(fr,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> fr);</span><br><span class=\"line\">\ttot=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vd,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vd);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(d,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> d);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=n;++i)V[i].clear();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\tclear();</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,a,b;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;a,&amp;b);</span><br><span class=\"line\">\t\t\tadd(a,b);add(b,a);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\tV[<span class=\"number\">0</span>].push_back(i);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">int</span> Ms=<span class=\"number\">0</span>;<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(V[Ms].size()==<span class=\"number\">0</span>||vd[V[Ms][V[Ms].size()<span class=\"number\">-1</span>]])&#123;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(V[Ms].size()==<span class=\"number\">0</span>)--Ms;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">else</span> V[Ms].pop_back();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> x=V[Ms][V[Ms].size()<span class=\"number\">-1</span>],sz=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\tV[Ms].pop_back();</span><br><span class=\"line\">\t\t\tvd[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//cout&lt;&lt;x&lt;&lt;\"#\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])<span class=\"keyword\">if</span>(!vd[vi[i]])&#123;</span><br><span class=\"line\">\t\t\t\t++d[vi[i]];</span><br><span class=\"line\">\t\t\t\tV[d[vi[i]]].push_back(vi[i]);</span><br><span class=\"line\">\t\t\t\tMs=max(Ms,d[vi[i]]);</span><br><span class=\"line\">\t\t\t\t<span class=\"comment\">//Q.push((Node)&#123;d[vi[i]],vi[i]&#125;);</span></span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span> ++sz;</span><br><span class=\"line\">\t\t\tres=max(res,sz);</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//cout&lt;&lt;sz&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Helloworld","date":"2018-07-14T00:19:15.000Z","mathjax":true,"top":1,"_content":"\n# 第二次转移博客\n\n$ \\sqrt{\\phi} $\n$${1+1=2}$$\n$${\\fac 1}$$\nSimple inline $ a = b + c $\n\n$$ \\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right) $$\n","source":"_posts/Helloworld.md","raw":"---\ntitle: Helloworld\ndate: 2018-07-14 08:19:15\ntags: \n\t\t- 试验\n\t\t- math\nmathjax: true\ntop: 1\n---\n\n# 第二次转移博客\n\n$ \\sqrt{\\phi} $\n$${1+1=2}$$\n$${\\fac 1}$$\nSimple inline $ a = b + c $\n\n$$ \\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right) $$\n","slug":"Helloworld","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjg0004injx1odsecas","content":"<h1 id=\"第二次转移博客\"><a href=\"#第二次转移博客\" class=\"headerlink\" title=\"第二次转移博客\"></a>第二次转移博客</h1><p>$ \\sqrt{\\phi} $</p>\n<script type=\"math/tex; mode=display\">{1+1=2}</script><script type=\"math/tex; mode=display\">{\\fac 1}</script><p>Simple inline $ a = b + c $</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)</script>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"第二次转移博客\"><a href=\"#第二次转移博客\" class=\"headerlink\" title=\"第二次转移博客\"></a>第二次转移博客</h1><p>$ \\sqrt{\\phi} $</p>\n<script type=\"math/tex; mode=display\">{1+1=2}</script><script type=\"math/tex; mode=display\">{\\fac 1}</script><p>Simple inline $ a = b + c $</p>\n<script type=\"math/tex; mode=display\">\\frac{\\partial u}{\\partial t}\n= h^2 \\left( \\frac{\\partial^2 u}{\\partial x^2} +\n\\frac{\\partial^2 u}{\\partial y^2} +\n\\frac{\\partial^2 u}{\\partial z^2}\\right)</script>"},{"title":"Stirling学习","top":1,"mathjax":true,"date":"2018-07-24T13:28:44.000Z","cover_picture":"images/stl.jpg","_content":"昨天学习了一发Stirling数~~哒哒哒~~，感觉很有用\n\n首先，Stirling数~~哒哒哒~~分两类\n\n## 第一类Stirling数\n$$\\begin{bmatrix} n \\\\ k \\end{bmatrix}$$\n\n这表示第一类Stirling数~~哒哒哒~~\n\n### 意义\n\n由 $$n$$ 个数构成置换的方案数\n\n### 递推式\n\n$$\\begin{bmatrix} n \\\\ k \\end{bmatrix} = \\begin{bmatrix} n-1 \\\\ k-1 \\end{bmatrix} + (n-1)\\begin{bmatrix} n-1 \\\\ k \\end{bmatrix} $$\n\n解释很简单，对于新加的$$n$$,要么单独成一个置换，要么放在某个的后面\n\n### 用途\n\n$$x^{\\overline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}x^{k}$$\n\n$$x^{\\underline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}(-1)^{n-k}x^{k}$$\n\n## 第二类Stirling数\n$$\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}$$\n\n这表示第二类Stirling数~~哒哒哒~~\n\n### 意义\n\n由 $$n$$ 个数构成集合的方案数\n\n### 递推式\n\n$$\\begin{Bmatrix} n \\\\ k \\end{Bmatrix} = \\begin{Bmatrix} n-1 \\\\ k-1 \\end{Bmatrix} + k\\begin{Bmatrix} n-1 \\\\ k \\end{Bmatrix} $$\n\n解释很简单，对于新加的$$n$$,要么单独成一个置换，要么放在某个的后面\n\n### 用途\n\n$$x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}x^{\\underline{k}}$$\n\n$$x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}(-1)^{n-k}x^{\\overline{k}}$$\n","source":"_posts/Stirling.md","raw":"---\ntitle: Stirling学习\ntop: 1\nmathjax: true\ndate: 2018-07-24 21:28:44\ntags:\n\t- 组合数学\ncover_picture: images/stl.jpg\n---\n昨天学习了一发Stirling数~~哒哒哒~~，感觉很有用\n\n首先，Stirling数~~哒哒哒~~分两类\n\n## 第一类Stirling数\n$$\\begin{bmatrix} n \\\\ k \\end{bmatrix}$$\n\n这表示第一类Stirling数~~哒哒哒~~\n\n### 意义\n\n由 $$n$$ 个数构成置换的方案数\n\n### 递推式\n\n$$\\begin{bmatrix} n \\\\ k \\end{bmatrix} = \\begin{bmatrix} n-1 \\\\ k-1 \\end{bmatrix} + (n-1)\\begin{bmatrix} n-1 \\\\ k \\end{bmatrix} $$\n\n解释很简单，对于新加的$$n$$,要么单独成一个置换，要么放在某个的后面\n\n### 用途\n\n$$x^{\\overline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}x^{k}$$\n\n$$x^{\\underline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}(-1)^{n-k}x^{k}$$\n\n## 第二类Stirling数\n$$\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}$$\n\n这表示第二类Stirling数~~哒哒哒~~\n\n### 意义\n\n由 $$n$$ 个数构成集合的方案数\n\n### 递推式\n\n$$\\begin{Bmatrix} n \\\\ k \\end{Bmatrix} = \\begin{Bmatrix} n-1 \\\\ k-1 \\end{Bmatrix} + k\\begin{Bmatrix} n-1 \\\\ k \\end{Bmatrix} $$\n\n解释很简单，对于新加的$$n$$,要么单独成一个置换，要么放在某个的后面\n\n### 用途\n\n$$x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}x^{\\underline{k}}$$\n\n$$x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}(-1)^{n-k}x^{\\overline{k}}$$\n","slug":"Stirling","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjo0005injxw16fh8xt","content":"<p>昨天学习了一发Stirling数<del>哒哒哒</del>，感觉很有用</p>\n<p>首先，Stirling数<del>哒哒哒</del>分两类</p>\n<h2 id=\"第一类Stirling数\"><a href=\"#第一类Stirling数\" class=\"headerlink\" title=\"第一类Stirling数\"></a>第一类Stirling数</h2><script type=\"math/tex; mode=display\">\\begin{bmatrix} n \\\\ k \\end{bmatrix}</script><p>这表示第一类Stirling数<del>哒哒哒</del></p>\n<h3 id=\"意义\"><a href=\"#意义\" class=\"headerlink\" title=\"意义\"></a>意义</h3><p>由 <script type=\"math/tex\">n</script> 个数构成置换的方案数</p>\n<h3 id=\"递推式\"><a href=\"#递推式\" class=\"headerlink\" title=\"递推式\"></a>递推式</h3><script type=\"math/tex; mode=display\">\\begin{bmatrix} n \\\\ k \\end{bmatrix} = \\begin{bmatrix} n-1 \\\\ k-1 \\end{bmatrix} + (n-1)\\begin{bmatrix} n-1 \\\\ k \\end{bmatrix}</script><p>解释很简单，对于新加的<script type=\"math/tex\">n</script>,要么单独成一个置换，要么放在某个的后面</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><script type=\"math/tex; mode=display\">x^{\\overline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}x^{k}</script><script type=\"math/tex; mode=display\">x^{\\underline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}(-1)^{n-k}x^{k}</script><h2 id=\"第二类Stirling数\"><a href=\"#第二类Stirling数\" class=\"headerlink\" title=\"第二类Stirling数\"></a>第二类Stirling数</h2><script type=\"math/tex; mode=display\">\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}</script><p>这表示第二类Stirling数<del>哒哒哒</del></p>\n<h3 id=\"意义-1\"><a href=\"#意义-1\" class=\"headerlink\" title=\"意义\"></a>意义</h3><p>由 <script type=\"math/tex\">n</script> 个数构成集合的方案数</p>\n<h3 id=\"递推式-1\"><a href=\"#递推式-1\" class=\"headerlink\" title=\"递推式\"></a>递推式</h3><script type=\"math/tex; mode=display\">\\begin{Bmatrix} n \\\\ k \\end{Bmatrix} = \\begin{Bmatrix} n-1 \\\\ k-1 \\end{Bmatrix} + k\\begin{Bmatrix} n-1 \\\\ k \\end{Bmatrix}</script><p>解释很简单，对于新加的<script type=\"math/tex\">n</script>,要么单独成一个置换，要么放在某个的后面</p>\n<h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><script type=\"math/tex; mode=display\">x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}x^{\\underline{k}}</script><script type=\"math/tex; mode=display\">x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}(-1)^{n-k}x^{\\overline{k}}</script>","site":{"data":{}},"excerpt":"","more":"<p>昨天学习了一发Stirling数<del>哒哒哒</del>，感觉很有用</p>\n<p>首先，Stirling数<del>哒哒哒</del>分两类</p>\n<h2 id=\"第一类Stirling数\"><a href=\"#第一类Stirling数\" class=\"headerlink\" title=\"第一类Stirling数\"></a>第一类Stirling数</h2><script type=\"math/tex; mode=display\">\\begin{bmatrix} n \\\\ k \\end{bmatrix}</script><p>这表示第一类Stirling数<del>哒哒哒</del></p>\n<h3 id=\"意义\"><a href=\"#意义\" class=\"headerlink\" title=\"意义\"></a>意义</h3><p>由 <script type=\"math/tex\">n</script> 个数构成置换的方案数</p>\n<h3 id=\"递推式\"><a href=\"#递推式\" class=\"headerlink\" title=\"递推式\"></a>递推式</h3><script type=\"math/tex; mode=display\">\\begin{bmatrix} n \\\\ k \\end{bmatrix} = \\begin{bmatrix} n-1 \\\\ k-1 \\end{bmatrix} + (n-1)\\begin{bmatrix} n-1 \\\\ k \\end{bmatrix}</script><p>解释很简单，对于新加的<script type=\"math/tex\">n</script>,要么单独成一个置换，要么放在某个的后面</p>\n<h3 id=\"用途\"><a href=\"#用途\" class=\"headerlink\" title=\"用途\"></a>用途</h3><script type=\"math/tex; mode=display\">x^{\\overline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}x^{k}</script><script type=\"math/tex; mode=display\">x^{\\underline{n}} = \\sum_{k}\\begin{bmatrix} n \\\\ k \\end{bmatrix}(-1)^{n-k}x^{k}</script><h2 id=\"第二类Stirling数\"><a href=\"#第二类Stirling数\" class=\"headerlink\" title=\"第二类Stirling数\"></a>第二类Stirling数</h2><script type=\"math/tex; mode=display\">\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}</script><p>这表示第二类Stirling数<del>哒哒哒</del></p>\n<h3 id=\"意义-1\"><a href=\"#意义-1\" class=\"headerlink\" title=\"意义\"></a>意义</h3><p>由 <script type=\"math/tex\">n</script> 个数构成集合的方案数</p>\n<h3 id=\"递推式-1\"><a href=\"#递推式-1\" class=\"headerlink\" title=\"递推式\"></a>递推式</h3><script type=\"math/tex; mode=display\">\\begin{Bmatrix} n \\\\ k \\end{Bmatrix} = \\begin{Bmatrix} n-1 \\\\ k-1 \\end{Bmatrix} + k\\begin{Bmatrix} n-1 \\\\ k \\end{Bmatrix}</script><p>解释很简单，对于新加的<script type=\"math/tex\">n</script>,要么单独成一个置换，要么放在某个的后面</p>\n<h3 id=\"用途-1\"><a href=\"#用途-1\" class=\"headerlink\" title=\"用途\"></a>用途</h3><script type=\"math/tex; mode=display\">x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}x^{\\underline{k}}</script><script type=\"math/tex; mode=display\">x^{n} = \\sum_{k}\\begin{Bmatrix} n \\\\ k \\end{Bmatrix}(-1)^{n-k}x^{\\overline{k}}</script>"},{"title":"bzoj5170(Fable)","top":1,"mathjax":true,"date":"2018-07-24T10:57:35.000Z","_content":"[QwQ](https://www.lydsy.com/JudgeOnline/problem.php?id=5170)有点有趣\n\n明显，平衡树可以秒这道题\n\n但是总是感觉太烦了。\n\n有没有好一点的方法呢？\n\n如果我们考虑每一个数，如果没有向后送，向前移的位置数等于前面比它大的数，显然这可以用树状数组搞。\n\n而剩下的数相对顺序一定排好了\n\n所以把剩下的数sort一下填进去就好了\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 200005\n#define lb(x) ((x)&(-x))\n#define ft first\n#define sd second\n#define pii pair<int,int>\n\nint c[MN],res[MN],b[MN],n,k;\npii a[MN];\n\nint add(int x,int y){\n\tfor(;x<=n;x+=lb(x))c[x]+=y;\n}\n\nbool C(pii A,pii B){\n\treturn A.sd<B.sd;\n}\n\nint qry(int x){\n\tint res=0;\n\tfor(;x;x-=lb(x))res+=c[x];\n\treturn res;\n}\n\npriority_queue<int> pQ;\n\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i].ft);\n\t\ta[i].sd=i;\n\t}\n\tsort(a+1,a+n+1);\n\tfor(int i=n;i;--i){\n\t\tb[a[i].sd]=qry(a[i].sd);\n\t\tadd(a[i].sd,1);\n\t\tif(b[a[i].sd]>k)res[a[i].sd-k]=a[i].ft;\n\t\telse pQ.push(a[i].ft);\n\t}\n\tfor(int i=n;i;--i){\n\t\tif(!res[i])res[i]=pQ.top(),pQ.pop();\n\t}\n\tfor(int i=1;i<=n;++i)printf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n```\n","source":"_posts/bzoj5170.md","raw":"---\ntitle: bzoj5170(Fable)\ntop: 1\nmathjax: true\ndate: 2018-07-24 18:57:35\ntags:\n\t- 树状数组\n---\n[QwQ](https://www.lydsy.com/JudgeOnline/problem.php?id=5170)有点有趣\n\n明显，平衡树可以秒这道题\n\n但是总是感觉太烦了。\n\n有没有好一点的方法呢？\n\n如果我们考虑每一个数，如果没有向后送，向前移的位置数等于前面比它大的数，显然这可以用树状数组搞。\n\n而剩下的数相对顺序一定排好了\n\n所以把剩下的数sort一下填进去就好了\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 200005\n#define lb(x) ((x)&(-x))\n#define ft first\n#define sd second\n#define pii pair<int,int>\n\nint c[MN],res[MN],b[MN],n,k;\npii a[MN];\n\nint add(int x,int y){\n\tfor(;x<=n;x+=lb(x))c[x]+=y;\n}\n\nbool C(pii A,pii B){\n\treturn A.sd<B.sd;\n}\n\nint qry(int x){\n\tint res=0;\n\tfor(;x;x-=lb(x))res+=c[x];\n\treturn res;\n}\n\npriority_queue<int> pQ;\n\nint main(){\n\tscanf(\"%d%d\",&n,&k);\n\tfor(int i=1;i<=n;++i){\n\t\tscanf(\"%d\",&a[i].ft);\n\t\ta[i].sd=i;\n\t}\n\tsort(a+1,a+n+1);\n\tfor(int i=n;i;--i){\n\t\tb[a[i].sd]=qry(a[i].sd);\n\t\tadd(a[i].sd,1);\n\t\tif(b[a[i].sd]>k)res[a[i].sd-k]=a[i].ft;\n\t\telse pQ.push(a[i].ft);\n\t}\n\tfor(int i=n;i;--i){\n\t\tif(!res[i])res[i]=pQ.top(),pQ.pop();\n\t}\n\tfor(int i=1;i<=n;++i)printf(\"%d\\n\",res[i]);\n\treturn 0;\n}\n```\n","slug":"bzoj5170","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjr0007injx7vfkag65","content":"<p><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=5170\" target=\"_blank\" rel=\"noopener\">QwQ</a>有点有趣</p>\n<p>明显，平衡树可以秒这道题</p>\n<p>但是总是感觉太烦了。</p>\n<p>有没有好一点的方法呢？</p>\n<p>如果我们考虑每一个数，如果没有向后送，向前移的位置数等于前面比它大的数，显然这可以用树状数组搞。</p>\n<p>而剩下的数相对顺序一定排好了</p>\n<p>所以把剩下的数sort一下填进去就好了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;(-x))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pii pair<span class=\"meta-string\">&lt;int,int&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> c[MN],res[MN],b[MN],n,k;</span><br><span class=\"line\">pii a[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">C</span><span class=\"params\">(pii A,pii B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.sd&lt;B.sd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">priority_queue&lt;<span class=\"keyword\">int</span>&gt; pQ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i].ft);</span><br><span class=\"line\">\t\ta[i].sd=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(a+<span class=\"number\">1</span>,a+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i;--i)&#123;</span><br><span class=\"line\">\t\tb[a[i].sd]=qry(a[i].sd);</span><br><span class=\"line\">\t\tadd(a[i].sd,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b[a[i].sd]&gt;k)res[a[i].sd-k]=a[i].ft;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> pQ.push(a[i].ft);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!res[i])res[i]=pQ.top(),pQ.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,res[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=5170\" target=\"_blank\" rel=\"noopener\">QwQ</a>有点有趣</p>\n<p>明显，平衡树可以秒这道题</p>\n<p>但是总是感觉太烦了。</p>\n<p>有没有好一点的方法呢？</p>\n<p>如果我们考虑每一个数，如果没有向后送，向前移的位置数等于前面比它大的数，显然这可以用树状数组搞。</p>\n<p>而剩下的数相对顺序一定排好了</p>\n<p>所以把剩下的数sort一下填进去就好了<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;(-x))</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pii pair<span class=\"meta-string\">&lt;int,int&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> c[MN],res[MN],b[MN],n,k;</span><br><span class=\"line\">pii a[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">C</span><span class=\"params\">(pii A,pii B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.sd&lt;B.sd;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">priority_queue&lt;<span class=\"keyword\">int</span>&gt; pQ;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;a[i].ft);</span><br><span class=\"line\">\t\ta[i].sd=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tsort(a+<span class=\"number\">1</span>,a+n+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i;--i)&#123;</span><br><span class=\"line\">\t\tb[a[i].sd]=qry(a[i].sd);</span><br><span class=\"line\">\t\tadd(a[i].sd,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(b[a[i].sd]&gt;k)res[a[i].sd-k]=a[i].ft;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> pQ.push(a[i].ft);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=n;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!res[i])res[i]=pQ.top(),pQ.pop();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,res[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Fwt学习","top":1,"mathjax":true,"date":"2018-09-19T23:26:00.000Z","_content":"fwt主要是用来处理一类卷积问题的\n\n首先说明一下集合幂级数\n\n这就是一个用集合作为下标的函数\n\n而fwt可以处理一类与集合幂级数相关的卷积问题\n\n我们考虑$$\\circ$$是一个关于集合的运算\n\n现在有集合$$A,B$$\n\n我们需要求\n\n$$ C_{i}=\\sum_{j \\circ k =i} A_{j} \\bigotimes B_{k} $$\n\n其中$$\\bigotimes$$是任意运算\n\n如何处理这个问题\n\n我们如果能构造出一种对于$$A,B$$的变换，使得\n\n$$tf(A) \\bigotimes tf(B)=tf(C)$$\n\n(指对应位置运算，而不是卷积)\n\n那么就可以对$$A$$和$$B$$变换，在算出$$C$$后变换回来，得到答案\n\n那么问题在于如何得到这种变换\n\n我们考虑最高位的情况\n\n我们定义$$tf(A_{0})$$为最高位为$$0$$的变换结果，$$tf(A_{1})$$为最高位为$$1$$的变换结果\n\n现在如果可以用$$tf(A_{0})$$和$$tf(A_{1})$$表示$$tf(A)$$，那问题就能解决\n\n接下来我们对不同的运算具体分析\n\n这里我们先定义($$A,B$$)指直接将$$A,B$$相接,后面会用到\n\n## xor\n\n对于xor运算，我们可以发现\n\n$$tf(C)=(tf(A_{0})*tf(B_{0})+tf(A_{1})*tf(B_{1}),tf(A_{0})*tf(B_{1})+tf(A_{1})*tf(B_{0}))$$\n\n这里有个结论\n\n$$tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{0})-tf(A_{1}))$$\n\n~~推我不会~~，但证明应该谁都会\n\n同理逆变换\n\n$$utf(A)=(\\frac{utf(A_{0})+utf(A_{1})}{2},\\frac{utf(A_{0})-utf(A_{1})}{2})$$\n\n\n代码\n\n```cpp\nvoid txor(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\tlg A=a[k],B=a[k+p];\n\t\t\t\ta[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;\n\t\t\t\tif(a[k+p]<0)a[k+p]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## and\n\n还是背结论吧\n\n$$tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{1}))$$\n\n$$utf(A)=(utf(A_{0})-utf(A_{1}),utf(A_{1}))$$\n\n代码\n\n```cpp\nvoid tand(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\ta[k]=(a[k]+a[k+p]*on)%Md;\n\t\t\t\tif(a[k]<0)a[k]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## or\n\n$$tf(A)=(tf(A_{0}),tf(A_{1})+tf(A_{0}))$$\n\n$$utf(A)=(utf(A_{0}),utf(A_{1})-utf(A_{0}))$$\n\n代码\n\n```cpp\nvoid tor(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\ta[k+p]=(a[k+p]+a[k]*on)%Md;\n\t\t\t\tif(a[k+p]<0)a[k+p]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n完整代码\n\n```cpp\nnamespace Ura{\n    void txor(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    lg A=a[k],B=a[k+p];\n                    a[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;\n                    if(a[k+p]<0)a[k+p]+=Md;\n                }\n            }\n        }\n    }\n    void tand(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    a[k]=(a[k]+a[k+p]*on)%Md;\n                    if(a[k]<0)a[k]+=Md;\n                }\n            }\n        }\n    }\n    void tor(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    a[k+p]=(a[k+p]+a[k]*on)%Md;\n                    if(a[k+p]<0)a[k+p]+=Md;\n                }\n            }\n        }\n    }\n}\n```\n","source":"_posts/fwt.md","raw":"---\ntitle: fwt学习\ntop: 1\nmathjax: true\ndate: 2018-09-20 07:26:00\ntags:\n\t- fwt\n---\nfwt主要是用来处理一类卷积问题的\n\n首先说明一下集合幂级数\n\n这就是一个用集合作为下标的函数\n\n而fwt可以处理一类与集合幂级数相关的卷积问题\n\n我们考虑$$\\circ$$是一个关于集合的运算\n\n现在有集合$$A,B$$\n\n我们需要求\n\n$$ C_{i}=\\sum_{j \\circ k =i} A_{j} \\bigotimes B_{k} $$\n\n其中$$\\bigotimes$$是任意运算\n\n如何处理这个问题\n\n我们如果能构造出一种对于$$A,B$$的变换，使得\n\n$$tf(A) \\bigotimes tf(B)=tf(C)$$\n\n(指对应位置运算，而不是卷积)\n\n那么就可以对$$A$$和$$B$$变换，在算出$$C$$后变换回来，得到答案\n\n那么问题在于如何得到这种变换\n\n我们考虑最高位的情况\n\n我们定义$$tf(A_{0})$$为最高位为$$0$$的变换结果，$$tf(A_{1})$$为最高位为$$1$$的变换结果\n\n现在如果可以用$$tf(A_{0})$$和$$tf(A_{1})$$表示$$tf(A)$$，那问题就能解决\n\n接下来我们对不同的运算具体分析\n\n这里我们先定义($$A,B$$)指直接将$$A,B$$相接,后面会用到\n\n## xor\n\n对于xor运算，我们可以发现\n\n$$tf(C)=(tf(A_{0})*tf(B_{0})+tf(A_{1})*tf(B_{1}),tf(A_{0})*tf(B_{1})+tf(A_{1})*tf(B_{0}))$$\n\n这里有个结论\n\n$$tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{0})-tf(A_{1}))$$\n\n~~推我不会~~，但证明应该谁都会\n\n同理逆变换\n\n$$utf(A)=(\\frac{utf(A_{0})+utf(A_{1})}{2},\\frac{utf(A_{0})-utf(A_{1})}{2})$$\n\n\n代码\n\n```cpp\nvoid txor(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\tlg A=a[k],B=a[k+p];\n\t\t\t\ta[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;\n\t\t\t\tif(a[k+p]<0)a[k+p]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## and\n\n还是背结论吧\n\n$$tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{1}))$$\n\n$$utf(A)=(utf(A_{0})-utf(A_{1}),utf(A_{1}))$$\n\n代码\n\n```cpp\nvoid tand(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\ta[k]=(a[k]+a[k+p]*on)%Md;\n\t\t\t\tif(a[k]<0)a[k]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n## or\n\n$$tf(A)=(tf(A_{0}),tf(A_{1})+tf(A_{0}))$$\n\n$$utf(A)=(utf(A_{0}),utf(A_{1})-utf(A_{0}))$$\n\n代码\n\n```cpp\nvoid tor(lg *a,int n,int on=1){\n\tint U=1<<n;\n\tfor(int i=2,p=1;i<=U;i<<=1,p<<=1){\n\t\tfor(int j=0;j<U;j+=i){\n\t\t\tfor(int k=j;k<j+p;++k){\n\t\t\t\ta[k+p]=(a[k+p]+a[k]*on)%Md;\n\t\t\t\tif(a[k+p]<0)a[k+p]+=Md;\n\t\t\t}\n\t\t}\n\t}\n}\n```\n\n完整代码\n\n```cpp\nnamespace Ura{\n    void txor(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    lg A=a[k],B=a[k+p];\n                    a[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;\n                    if(a[k+p]<0)a[k+p]+=Md;\n                }\n            }\n        }\n    }\n    void tand(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    a[k]=(a[k]+a[k+p]*on)%Md;\n                    if(a[k]<0)a[k]+=Md;\n                }\n            }\n        }\n    }\n    void tor(lg *a,int n,int on=1){\n        int U=1<<n;\n        for(int i=2,p=1;i<=U;i<<=1,p<<=1){\n            for(int j=0;j<U;j+=i){\n                for(int k=j;k<j+p;++k){\n                    a[k+p]=(a[k+p]+a[k]*on)%Md;\n                    if(a[k+p]<0)a[k+p]+=Md;\n                }\n            }\n        }\n    }\n}\n```\n","slug":"fwt","published":1,"updated":"2018-09-20T23:47:43.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjt0008injxwb72g6vn","content":"<p>fwt主要是用来处理一类卷积问题的</p>\n<p>首先说明一下集合幂级数</p>\n<p>这就是一个用集合作为下标的函数</p>\n<p>而fwt可以处理一类与集合幂级数相关的卷积问题</p>\n<p>我们考虑<script type=\"math/tex\">\\circ</script>是一个关于集合的运算</p>\n<p>现在有集合<script type=\"math/tex\">A,B</script></p>\n<p>我们需要求</p>\n<script type=\"math/tex; mode=display\">C_{i}=\\sum_{j \\circ k =i} A_{j} \\bigotimes B_{k}</script><p>其中<script type=\"math/tex\">\\bigotimes</script>是任意运算</p>\n<p>如何处理这个问题</p>\n<p>我们如果能构造出一种对于<script type=\"math/tex\">A,B</script>的变换，使得</p>\n<script type=\"math/tex; mode=display\">tf(A) \\bigotimes tf(B)=tf(C)</script><p>(指对应位置运算，而不是卷积)</p>\n<p>那么就可以对<script type=\"math/tex\">A</script>和<script type=\"math/tex\">B</script>变换，在算出<script type=\"math/tex\">C</script>后变换回来，得到答案</p>\n<p>那么问题在于如何得到这种变换</p>\n<p>我们考虑最高位的情况</p>\n<p>我们定义<script type=\"math/tex\">tf(A_{0})</script>为最高位为<script type=\"math/tex\">0</script>的变换结果，<script type=\"math/tex\">tf(A_{1})</script>为最高位为<script type=\"math/tex\">1</script>的变换结果</p>\n<p>现在如果可以用<script type=\"math/tex\">tf(A_{0})</script>和<script type=\"math/tex\">tf(A_{1})</script>表示<script type=\"math/tex\">tf(A)</script>，那问题就能解决</p>\n<p>接下来我们对不同的运算具体分析</p>\n<p>这里我们先定义(<script type=\"math/tex\">A,B</script>)指直接将<script type=\"math/tex\">A,B</script>相接,后面会用到</p>\n<h2 id=\"xor\"><a href=\"#xor\" class=\"headerlink\" title=\"xor\"></a>xor</h2><p>对于xor运算，我们可以发现</p>\n<script type=\"math/tex; mode=display\">tf(C)=(tf(A_{0})*tf(B_{0})+tf(A_{1})*tf(B_{1}),tf(A_{0})*tf(B_{1})+tf(A_{1})*tf(B_{0}))</script><p>这里有个结论</p>\n<script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{0})-tf(A_{1}))</script><p><del>推我不会</del>，但证明应该谁都会</p>\n<p>同理逆变换</p>\n<script type=\"math/tex; mode=display\">utf(A)=(\\frac{utf(A_{0})+utf(A_{1})}{2},\\frac{utf(A_{0})-utf(A_{1})}{2})</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">txor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg A=a[k],B=a[k+p];</span><br><span class=\"line\">\t\t\t\ta[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h2><p>还是背结论吧</p>\n<script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{1}))</script><script type=\"math/tex; mode=display\">utf(A)=(utf(A_{0})-utf(A_{1}),utf(A_{1}))</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tand</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\ta[k]=(a[k]+a[k+p]*on)%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k]&lt;<span class=\"number\">0</span>)a[k]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"or\"><a href=\"#or\" class=\"headerlink\" title=\"or\"></a>or</h2><script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0}),tf(A_{1})+tf(A_{0}))</script><script type=\"math/tex; mode=display\">utf(A)=(utf(A_{0}),utf(A_{1})-utf(A_{0}))</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\ta[k+p]=(a[k+p]+a[k]*on)%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完整代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> Ura&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">txor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    lg A=a[k],B=a[k+p];</span><br><span class=\"line\">                    a[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tand</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    a[k]=(a[k]+a[k+p]*on)%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k]&lt;<span class=\"number\">0</span>)a[k]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    a[k+p]=(a[k+p]+a[k]*on)%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>fwt主要是用来处理一类卷积问题的</p>\n<p>首先说明一下集合幂级数</p>\n<p>这就是一个用集合作为下标的函数</p>\n<p>而fwt可以处理一类与集合幂级数相关的卷积问题</p>\n<p>我们考虑<script type=\"math/tex\">\\circ</script>是一个关于集合的运算</p>\n<p>现在有集合<script type=\"math/tex\">A,B</script></p>\n<p>我们需要求</p>\n<script type=\"math/tex; mode=display\">C_{i}=\\sum_{j \\circ k =i} A_{j} \\bigotimes B_{k}</script><p>其中<script type=\"math/tex\">\\bigotimes</script>是任意运算</p>\n<p>如何处理这个问题</p>\n<p>我们如果能构造出一种对于<script type=\"math/tex\">A,B</script>的变换，使得</p>\n<script type=\"math/tex; mode=display\">tf(A) \\bigotimes tf(B)=tf(C)</script><p>(指对应位置运算，而不是卷积)</p>\n<p>那么就可以对<script type=\"math/tex\">A</script>和<script type=\"math/tex\">B</script>变换，在算出<script type=\"math/tex\">C</script>后变换回来，得到答案</p>\n<p>那么问题在于如何得到这种变换</p>\n<p>我们考虑最高位的情况</p>\n<p>我们定义<script type=\"math/tex\">tf(A_{0})</script>为最高位为<script type=\"math/tex\">0</script>的变换结果，<script type=\"math/tex\">tf(A_{1})</script>为最高位为<script type=\"math/tex\">1</script>的变换结果</p>\n<p>现在如果可以用<script type=\"math/tex\">tf(A_{0})</script>和<script type=\"math/tex\">tf(A_{1})</script>表示<script type=\"math/tex\">tf(A)</script>，那问题就能解决</p>\n<p>接下来我们对不同的运算具体分析</p>\n<p>这里我们先定义(<script type=\"math/tex\">A,B</script>)指直接将<script type=\"math/tex\">A,B</script>相接,后面会用到</p>\n<h2 id=\"xor\"><a href=\"#xor\" class=\"headerlink\" title=\"xor\"></a>xor</h2><p>对于xor运算，我们可以发现</p>\n<script type=\"math/tex; mode=display\">tf(C)=(tf(A_{0})*tf(B_{0})+tf(A_{1})*tf(B_{1}),tf(A_{0})*tf(B_{1})+tf(A_{1})*tf(B_{0}))</script><p>这里有个结论</p>\n<script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{0})-tf(A_{1}))</script><p><del>推我不会</del>，但证明应该谁都会</p>\n<p>同理逆变换</p>\n<script type=\"math/tex; mode=display\">utf(A)=(\\frac{utf(A_{0})+utf(A_{1})}{2},\\frac{utf(A_{0})-utf(A_{1})}{2})</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">txor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg A=a[k],B=a[k+p];</span><br><span class=\"line\">\t\t\t\ta[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"and\"><a href=\"#and\" class=\"headerlink\" title=\"and\"></a>and</h2><p>还是背结论吧</p>\n<script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0})+tf(A_{1}),tf(A_{1}))</script><script type=\"math/tex; mode=display\">utf(A)=(utf(A_{0})-utf(A_{1}),utf(A_{1}))</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tand</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\ta[k]=(a[k]+a[k+p]*on)%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k]&lt;<span class=\"number\">0</span>)a[k]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"or\"><a href=\"#or\" class=\"headerlink\" title=\"or\"></a>or</h2><script type=\"math/tex; mode=display\">tf(A)=(tf(A_{0}),tf(A_{1})+tf(A_{0}))</script><script type=\"math/tex; mode=display\">utf(A)=(utf(A_{0}),utf(A_{1})-utf(A_{0}))</script><p>代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">\t\t\t\ta[k+p]=(a[k+p]+a[k]*on)%Md;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完整代码</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> Ura&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">txor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    lg A=a[k],B=a[k+p];</span><br><span class=\"line\">                    a[k]=(A+B)*on%Md;a[k+p]=(A-B)*on%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tand</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    a[k]=(a[k]+a[k+p]*on)%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k]&lt;<span class=\"number\">0</span>)a[k]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">tor</span><span class=\"params\">(lg *a,<span class=\"keyword\">int</span> n,<span class=\"keyword\">int</span> on=<span class=\"number\">1</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> U=<span class=\"number\">1</span>&lt;&lt;n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>,p=<span class=\"number\">1</span>;i&lt;=U;i&lt;&lt;=<span class=\"number\">1</span>,p&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;U;j+=i)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;j+p;++k)&#123;</span><br><span class=\"line\">                    a[k+p]=(a[k+p]+a[k]*on)%Md;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(a[k+p]&lt;<span class=\"number\">0</span>)a[k+p]+=Md;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"后缀自动机","date":"2018-07-15T18:26:05.000Z","top":1,"_content":"\n##转移重要代码\n```cpp\nchar c[MN];\nint n,tot=0;\nstruct Node{\n\tint maxlen,slink,tran[26];\n}N[MN];\nint Nd(int _maxlen,int _tran,int _slink){\n\tN[++tot]=(Node){_maxlen,_slink,0};\n\tif(_tran){\n\t\tfor(int i=0;i<26;++i)if(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];else N[tot].tran[i]=0;\n\t}else for(int i=0;i<26;++i)N[tot].tran[i]=0;\n\treturn tot;\n}\nint addchar(char cc,int u){\n\tint ch=cc-'a';\n\tint z=Nd(N[u].maxlen+1,0,0);\n\tint v=u;\n\twhile(v&&!N[v].tran[ch]){\n\t\tN[v].tran[ch]=z;\n\t\tv=N[v].slink;\n\t}\n\tif(!v){N[z].slink=1;return z;}\n\tint x=N[v].tran[ch];\n\tif(N[v].maxlen==N[x].maxlen-1){\n\t\tN[z].slink=x;\n\t\treturn z;\n\t}\n\tint y=Nd(N[v].maxlen+1,x,N[x].slink);\n\tN[x].slink=y;N[z].slink=y;\n\twhile(v&&N[v].tran[ch]==x){\n\t\tN[v].tran[ch]=y;\n\t\tv=N[v].slink;\n\t}return z;\n}\nvoid insert(){\n\tNd(0,0,0);\n\tint now=1;\n\tfor(int i=1;i<=n;++i){now=addchar(c[i],now);}\n}\n```\n","source":"_posts/hzzdj.md","raw":"---\ntitle: 后缀自动机\ndate: 2018-07-16 02:26:05\ntags:\n\t- 字符串\ntop: 1\n---\n\n##转移重要代码\n```cpp\nchar c[MN];\nint n,tot=0;\nstruct Node{\n\tint maxlen,slink,tran[26];\n}N[MN];\nint Nd(int _maxlen,int _tran,int _slink){\n\tN[++tot]=(Node){_maxlen,_slink,0};\n\tif(_tran){\n\t\tfor(int i=0;i<26;++i)if(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];else N[tot].tran[i]=0;\n\t}else for(int i=0;i<26;++i)N[tot].tran[i]=0;\n\treturn tot;\n}\nint addchar(char cc,int u){\n\tint ch=cc-'a';\n\tint z=Nd(N[u].maxlen+1,0,0);\n\tint v=u;\n\twhile(v&&!N[v].tran[ch]){\n\t\tN[v].tran[ch]=z;\n\t\tv=N[v].slink;\n\t}\n\tif(!v){N[z].slink=1;return z;}\n\tint x=N[v].tran[ch];\n\tif(N[v].maxlen==N[x].maxlen-1){\n\t\tN[z].slink=x;\n\t\treturn z;\n\t}\n\tint y=Nd(N[v].maxlen+1,x,N[x].slink);\n\tN[x].slink=y;N[z].slink=y;\n\twhile(v&&N[v].tran[ch]==x){\n\t\tN[v].tran[ch]=y;\n\t\tv=N[v].slink;\n\t}return z;\n}\nvoid insert(){\n\tNd(0,0,0);\n\tint now=1;\n\tfor(int i=1;i<=n;++i){now=addchar(c[i],now);}\n}\n```\n","slug":"hzzdj","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjv000ainjxv90cxbb2","content":"<h2 id=\"转移重要代码\"><a href=\"#转移重要代码\" class=\"headerlink\" title=\"转移重要代码\"></a>转移重要代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> c[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> maxlen,slink,tran[<span class=\"number\">26</span>];</span><br><span class=\"line\">&#125;N[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Nd</span><span class=\"params\">(<span class=\"keyword\">int</span> _maxlen,<span class=\"keyword\">int</span> _tran,<span class=\"keyword\">int</span> _slink)</span></span>&#123;</span><br><span class=\"line\">\tN[++tot]=(Node)&#123;_maxlen,_slink,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(_tran)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;++i)<span class=\"keyword\">if</span>(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];<span class=\"keyword\">else</span> N[tot].tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;++i)N[tot].tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addchar</span><span class=\"params\">(<span class=\"keyword\">char</span> cc,<span class=\"keyword\">int</span> u)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch=cc-<span class=\"string\">'a'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> z=Nd(N[u].maxlen+<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v=u;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(v&amp;&amp;!N[v].tran[ch])&#123;</span><br><span class=\"line\">\t\tN[v].tran[ch]=z;</span><br><span class=\"line\">\t\tv=N[v].slink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!v)&#123;N[z].slink=<span class=\"number\">1</span>;<span class=\"keyword\">return</span> z;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=N[v].tran[ch];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(N[v].maxlen==N[x].maxlen<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\tN[z].slink=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> y=Nd(N[v].maxlen+<span class=\"number\">1</span>,x,N[x].slink);</span><br><span class=\"line\">\tN[x].slink=y;N[z].slink=y;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(v&amp;&amp;N[v].tran[ch]==x)&#123;</span><br><span class=\"line\">\t\tN[v].tran[ch]=y;</span><br><span class=\"line\">\t\tv=N[v].slink;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tNd(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> now=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;now=addchar(c[i],now);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"转移重要代码\"><a href=\"#转移重要代码\" class=\"headerlink\" title=\"转移重要代码\"></a>转移重要代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">char</span> c[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> maxlen,slink,tran[<span class=\"number\">26</span>];</span><br><span class=\"line\">&#125;N[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">Nd</span><span class=\"params\">(<span class=\"keyword\">int</span> _maxlen,<span class=\"keyword\">int</span> _tran,<span class=\"keyword\">int</span> _slink)</span></span>&#123;</span><br><span class=\"line\">\tN[++tot]=(Node)&#123;_maxlen,_slink,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(_tran)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;++i)<span class=\"keyword\">if</span>(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];<span class=\"keyword\">else</span> N[tot].tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span> <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">26</span>;++i)N[tot].tran[i]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> tot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">addchar</span><span class=\"params\">(<span class=\"keyword\">char</span> cc,<span class=\"keyword\">int</span> u)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ch=cc-<span class=\"string\">'a'</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> z=Nd(N[u].maxlen+<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v=u;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(v&amp;&amp;!N[v].tran[ch])&#123;</span><br><span class=\"line\">\t\tN[v].tran[ch]=z;</span><br><span class=\"line\">\t\tv=N[v].slink;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(!v)&#123;N[z].slink=<span class=\"number\">1</span>;<span class=\"keyword\">return</span> z;&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x=N[v].tran[ch];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(N[v].maxlen==N[x].maxlen<span class=\"number\">-1</span>)&#123;</span><br><span class=\"line\">\t\tN[z].slink=x;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> y=Nd(N[v].maxlen+<span class=\"number\">1</span>,x,N[x].slink);</span><br><span class=\"line\">\tN[x].slink=y;N[z].slink=y;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(v&amp;&amp;N[v].tran[ch]==x)&#123;</span><br><span class=\"line\">\t\tN[v].tran[ch]=y;</span><br><span class=\"line\">\t\tv=N[v].slink;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> z;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">insert</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tNd(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> now=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;now=addchar(c[i],now);&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"Lct学习","top":1,"mathjax":true,"date":"2018-09-01T10:06:29.000Z","_content":"终于还是学习了一下lct~~(然而我还是不会证复杂度)~~\n\n讲道理，这东西比想象的要来的简单\n\n## 概述\n\n首先，这个东西是用来维护树的信息的\n\n可以支持link和cut操作(所以叫做link-cut-tree)\n\n这个link和cut，顾名思义，就是把图断开和接上\n\n如何做到呢？\n\n同是用数据结构维护一树，我们会想到树剖\n\n树剖分重链轻链，这里也可以这样\n\n但略有偏差，这里重链不一定要最大，而且一个点向下可以没有重链\n\n但重链与轻链随时会改变，那怎么办呢\n\n我们不用线段树维护，我们用splay\n\n支持分裂合并的平衡树都可以完成这件事\n\n但为什么选splay？因为出于某种玄学的复杂度证明用splay是一个log的……\n\n现在，我们用一棵splay表示一条重链，中序遍历表示它从上往下的顺序\n\n那么每次如何操作呢？\n\n我们需要制造出这么几个操作：\n\n###is_root\n\n它的意思就是判断一个点是否是一棵splay的根\n\n注意这是splay的根，而不是树的根~~我被坑了一次~~\n\n注意这个函数没有在其他splay出现过，这里只是为了不用写分裂合并\n\n方法很简单，用“父亲有没有孩子是自己”来标记是否为根\n\n这使lct中的splay短了很多\n\n```cpp\n    bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n```\n\n### access\n\n它指打通一个点到根的链(打成重链)\n就是不停spaly，然后把父亲的儿子变成自己，很好理解\n```cpp\n    void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;Up(x);//Up->上传标记\n        }\n    }\n```\n\n### mkroot\n\n把一个点变成根(树的根)\n有了access，然后splay它他就成了splay的根了，但实际中序遍历还是最后\n那再reverse一下就好了啊\n```cpp\n    void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n```\n---\n还有一些零碎操作比如findroot什么的，很好想清楚，就不讲了\n\n## 题\n\n### [弹飞绵羊](https://www.lydsy.com/JudgeOnline/problem.php?id=2002)\n\n明显每次把儿子a从b接到c上，没有什么困难的东西\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n \n#define MN 400005\n \nint v[MN];\nint n;\n \nnamespace CFA{//China Football Association!!\n    struct Node{\n        int fa,s[2],fl,sz;\n        int& operator[](int x){return s[x];}\n    }N[MN];\n \n    bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n \n    void Up(int x){\n        N[x].sz=N[N[x][0]].sz+N[N[x][1]].sz+1;\n    }\n \n    void Down(int x){\n        if(!N[x].fl)return;\n        swap(N[x][1],N[x][0]);\n        N[N[x][0]].fl^=1;\n        N[N[x][1]].fl^=1;\n        N[x].fl=0;\n    }\n \n    void Rotate(int x,int y=0){\n        int p=N[x].fa,f=N[p][0]==x,pp=N[p].fa;\n        N[p][f^1]=N[x][f];\n        N[N[x][f]].fa=p;\n        N[x][f]=p;N[p].fa=x;\n        Up(p);Up(x);\n        if(N[pp][0]==p)N[pp][0]=x;\n        if(N[pp][1]==p)N[pp][1]=x;\n        N[x].fa=pp;\n        if(y)Rotate(y);\n    }\n \n    int stk[MN],ssz=0;\n    void Splay(int x){\n        assert(ssz==0);\n        stk[++ssz]=x;\n        for(int i=x;!Isroot(i);i=N[i].fa)stk[++ssz]=N[i].fa;\n        while(ssz)Down(stk[ssz--]);\n        while(!Isroot(x)){\n            int p=N[x].fa,f=N[p][1]==x,pp=N[p].fa,ff=N[pp][1]==p;\n            if(Isroot(p))Rotate(x);\n            else if(f==ff)Rotate(p,x);\n            else Rotate(x,x);\n        }\n    }\n \n    void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;Up(x);\n        }\n    }\n \n    void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n \n    void Link(int x,int y){\n        Mkroot(x);N[x].fa=y;\n    }\n \n    void Cut(int x,int y){\n        Mkroot(x);Access(y);Splay(y);\n        N[y][0]=N[x].fa=0;\n    }\n}\n \nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n+1;++i)CFA::N[i].sz=1;\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",v+i);\n        CFA::Link(i,min(n+1,i+v[i]));\n    }\n    int q;\n    scanf(\"%d\",&q);\n    while(q--){\n        int op,x,y;\n        scanf(\"%d\",&op);\n        if(op==1){\n            scanf(\"%d\",&x);++x;\n            CFA::Mkroot(n+1);CFA::Access(x);CFA::Splay(x);\n            printf(\"%d\\n\",CFA::N[x].sz-1);\n        }else{\n            scanf(\"%d%d\",&x,&y);++x;\n            CFA::Cut(x,min(n+1,x+v[x]));\n            CFA::Link(x,min(n+1,x+(v[x]=y)));\n        }\n    }\n    return 0;\n}\n```\n\n### [洞穴勘测](https://www.lydsy.com/JudgeOnline/problem.php?id=2049)\n\n明显每次判断联不联通，没有什么困难的东西\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 10005\n\nnamespace Tohsaka{\n    struct Node{\n        int fa,fl,s[2];\n        int& operator[](int x){return s[x];}\n    }N[MN];\n\n    inline void Down(int x){\n        if(N[x].fl){\n            N[N[x][0]].fl^=1;N[N[x][1]].fl^=1;\n            swap(N[x][0],N[x][1]);\n            N[x].fl=0;\n        }\n    }\n\n    inline bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n\n    inline void Rotate(int x){\n        int p=N[x].fa,pp=N[p].fa;\n        int d=N[p][0]==x;\n        N[N[x][d]].fa=p;\n        N[p][d^1]=N[x][d];\n        N[p].fa=x;N[x][d]=p;\n        if(N[pp][0]==p)N[pp][0]=x;\n        if(N[pp][1]==p)N[pp][1]=x;\n        N[x].fa=pp;\n    }\n\n    int stk[MN],ttk=0;\n    void Splay(int x){\n        stk[++ttk]=x;\n        for(int i=x;!Isroot(i);i=N[i].fa)stk[++ttk]=N[i].fa;\n        while(ttk)Down(stk[ttk--]);\n        while(!Isroot(x)){\n            int p=N[x].fa,pp=N[p].fa;\n            if(Isroot(p)){Rotate(x);continue;}\n            int f=N[p][1]==x,ff=N[pp][1]==p;\n            if(f==ff){\n                Rotate(p),Rotate(x);\n            }else{\n                Rotate(x),Rotate(x);\n            }\n        }\n    }\n\n    inline void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;\n        }\n    }\n\n    inline void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n\n    inline void Link(int x,int y){\n        Mkroot(x);N[x].fa=y;\n    }\n\n    inline void Cut(int x,int y){\n        Mkroot(x);Access(y);Splay(y);\n        N[x].fa=N[y][0]=0;\n    }\n\n    inline int Fdroot(int x){\n        Access(x);Splay(x);\n        while(N[x][0])x=N[x][0];\n        Splay(x);\n        return x;\n    }\n}\n\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,x,y;i<=m;++i){\n        char cc[11];\n        scanf(\"%s%d%d\",cc,&x,&y);\n        if(cc[0]=='Q'){\n            Tohsaka::Mkroot(x);\n            if(Tohsaka::Fdroot(y)!=x)puts(\"No\");\n            else puts(\"Yes\");\n        }\n        if(cc[0]=='C'){\n            Tohsaka::Link(x,y);\n        }\n        if(cc[0]=='D'){\n            Tohsaka::Cut(x,y);\n        }\n    }\n    return 0;\n}\n```\n","source":"_posts/lct.md","raw":"---\ntitle: lct学习\ntop: 1\nmathjax: true\ndate: 2018-09-01 18:06:29\ntags:\n\t- 数据结构\n\t- 图论\n\t- lct\n---\n终于还是学习了一下lct~~(然而我还是不会证复杂度)~~\n\n讲道理，这东西比想象的要来的简单\n\n## 概述\n\n首先，这个东西是用来维护树的信息的\n\n可以支持link和cut操作(所以叫做link-cut-tree)\n\n这个link和cut，顾名思义，就是把图断开和接上\n\n如何做到呢？\n\n同是用数据结构维护一树，我们会想到树剖\n\n树剖分重链轻链，这里也可以这样\n\n但略有偏差，这里重链不一定要最大，而且一个点向下可以没有重链\n\n但重链与轻链随时会改变，那怎么办呢\n\n我们不用线段树维护，我们用splay\n\n支持分裂合并的平衡树都可以完成这件事\n\n但为什么选splay？因为出于某种玄学的复杂度证明用splay是一个log的……\n\n现在，我们用一棵splay表示一条重链，中序遍历表示它从上往下的顺序\n\n那么每次如何操作呢？\n\n我们需要制造出这么几个操作：\n\n###is_root\n\n它的意思就是判断一个点是否是一棵splay的根\n\n注意这是splay的根，而不是树的根~~我被坑了一次~~\n\n注意这个函数没有在其他splay出现过，这里只是为了不用写分裂合并\n\n方法很简单，用“父亲有没有孩子是自己”来标记是否为根\n\n这使lct中的splay短了很多\n\n```cpp\n    bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n```\n\n### access\n\n它指打通一个点到根的链(打成重链)\n就是不停spaly，然后把父亲的儿子变成自己，很好理解\n```cpp\n    void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;Up(x);//Up->上传标记\n        }\n    }\n```\n\n### mkroot\n\n把一个点变成根(树的根)\n有了access，然后splay它他就成了splay的根了，但实际中序遍历还是最后\n那再reverse一下就好了啊\n```cpp\n    void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n```\n---\n还有一些零碎操作比如findroot什么的，很好想清楚，就不讲了\n\n## 题\n\n### [弹飞绵羊](https://www.lydsy.com/JudgeOnline/problem.php?id=2002)\n\n明显每次把儿子a从b接到c上，没有什么困难的东西\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n \n#define MN 400005\n \nint v[MN];\nint n;\n \nnamespace CFA{//China Football Association!!\n    struct Node{\n        int fa,s[2],fl,sz;\n        int& operator[](int x){return s[x];}\n    }N[MN];\n \n    bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n \n    void Up(int x){\n        N[x].sz=N[N[x][0]].sz+N[N[x][1]].sz+1;\n    }\n \n    void Down(int x){\n        if(!N[x].fl)return;\n        swap(N[x][1],N[x][0]);\n        N[N[x][0]].fl^=1;\n        N[N[x][1]].fl^=1;\n        N[x].fl=0;\n    }\n \n    void Rotate(int x,int y=0){\n        int p=N[x].fa,f=N[p][0]==x,pp=N[p].fa;\n        N[p][f^1]=N[x][f];\n        N[N[x][f]].fa=p;\n        N[x][f]=p;N[p].fa=x;\n        Up(p);Up(x);\n        if(N[pp][0]==p)N[pp][0]=x;\n        if(N[pp][1]==p)N[pp][1]=x;\n        N[x].fa=pp;\n        if(y)Rotate(y);\n    }\n \n    int stk[MN],ssz=0;\n    void Splay(int x){\n        assert(ssz==0);\n        stk[++ssz]=x;\n        for(int i=x;!Isroot(i);i=N[i].fa)stk[++ssz]=N[i].fa;\n        while(ssz)Down(stk[ssz--]);\n        while(!Isroot(x)){\n            int p=N[x].fa,f=N[p][1]==x,pp=N[p].fa,ff=N[pp][1]==p;\n            if(Isroot(p))Rotate(x);\n            else if(f==ff)Rotate(p,x);\n            else Rotate(x,x);\n        }\n    }\n \n    void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;Up(x);\n        }\n    }\n \n    void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n \n    void Link(int x,int y){\n        Mkroot(x);N[x].fa=y;\n    }\n \n    void Cut(int x,int y){\n        Mkroot(x);Access(y);Splay(y);\n        N[y][0]=N[x].fa=0;\n    }\n}\n \nint main(){\n    scanf(\"%d\",&n);\n    for(int i=1;i<=n+1;++i)CFA::N[i].sz=1;\n    for(int i=1;i<=n;++i){\n        scanf(\"%d\",v+i);\n        CFA::Link(i,min(n+1,i+v[i]));\n    }\n    int q;\n    scanf(\"%d\",&q);\n    while(q--){\n        int op,x,y;\n        scanf(\"%d\",&op);\n        if(op==1){\n            scanf(\"%d\",&x);++x;\n            CFA::Mkroot(n+1);CFA::Access(x);CFA::Splay(x);\n            printf(\"%d\\n\",CFA::N[x].sz-1);\n        }else{\n            scanf(\"%d%d\",&x,&y);++x;\n            CFA::Cut(x,min(n+1,x+v[x]));\n            CFA::Link(x,min(n+1,x+(v[x]=y)));\n        }\n    }\n    return 0;\n}\n```\n\n### [洞穴勘测](https://www.lydsy.com/JudgeOnline/problem.php?id=2049)\n\n明显每次判断联不联通，没有什么困难的东西\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 10005\n\nnamespace Tohsaka{\n    struct Node{\n        int fa,fl,s[2];\n        int& operator[](int x){return s[x];}\n    }N[MN];\n\n    inline void Down(int x){\n        if(N[x].fl){\n            N[N[x][0]].fl^=1;N[N[x][1]].fl^=1;\n            swap(N[x][0],N[x][1]);\n            N[x].fl=0;\n        }\n    }\n\n    inline bool Isroot(int x){\n        return N[N[x].fa][0]!=x&&N[N[x].fa][1]!=x;\n    }\n\n    inline void Rotate(int x){\n        int p=N[x].fa,pp=N[p].fa;\n        int d=N[p][0]==x;\n        N[N[x][d]].fa=p;\n        N[p][d^1]=N[x][d];\n        N[p].fa=x;N[x][d]=p;\n        if(N[pp][0]==p)N[pp][0]=x;\n        if(N[pp][1]==p)N[pp][1]=x;\n        N[x].fa=pp;\n    }\n\n    int stk[MN],ttk=0;\n    void Splay(int x){\n        stk[++ttk]=x;\n        for(int i=x;!Isroot(i);i=N[i].fa)stk[++ttk]=N[i].fa;\n        while(ttk)Down(stk[ttk--]);\n        while(!Isroot(x)){\n            int p=N[x].fa,pp=N[p].fa;\n            if(Isroot(p)){Rotate(x);continue;}\n            int f=N[p][1]==x,ff=N[pp][1]==p;\n            if(f==ff){\n                Rotate(p),Rotate(x);\n            }else{\n                Rotate(x),Rotate(x);\n            }\n        }\n    }\n\n    inline void Access(int x){\n        for(int i=0;x;i=x,x=N[x].fa){\n            Splay(x);N[x][1]=i;\n        }\n    }\n\n    inline void Mkroot(int x){\n        Access(x);Splay(x);N[x].fl^=1;\n    }\n\n    inline void Link(int x,int y){\n        Mkroot(x);N[x].fa=y;\n    }\n\n    inline void Cut(int x,int y){\n        Mkroot(x);Access(y);Splay(y);\n        N[x].fa=N[y][0]=0;\n    }\n\n    inline int Fdroot(int x){\n        Access(x);Splay(x);\n        while(N[x][0])x=N[x][0];\n        Splay(x);\n        return x;\n    }\n}\n\nint main(){\n    int n,m;\n    scanf(\"%d%d\",&n,&m);\n    for(int i=1,x,y;i<=m;++i){\n        char cc[11];\n        scanf(\"%s%d%d\",cc,&x,&y);\n        if(cc[0]=='Q'){\n            Tohsaka::Mkroot(x);\n            if(Tohsaka::Fdroot(y)!=x)puts(\"No\");\n            else puts(\"Yes\");\n        }\n        if(cc[0]=='C'){\n            Tohsaka::Link(x,y);\n        }\n        if(cc[0]=='D'){\n            Tohsaka::Cut(x,y);\n        }\n    }\n    return 0;\n}\n```\n","slug":"lct","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwjx000cinjxxvav47xm","content":"<p>终于还是学习了一下lct<del>(然而我还是不会证复杂度)</del></p>\n<p>讲道理，这东西比想象的要来的简单</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>首先，这个东西是用来维护树的信息的</p>\n<p>可以支持link和cut操作(所以叫做link-cut-tree)</p>\n<p>这个link和cut，顾名思义，就是把图断开和接上</p>\n<p>如何做到呢？</p>\n<p>同是用数据结构维护一树，我们会想到树剖</p>\n<p>树剖分重链轻链，这里也可以这样</p>\n<p>但略有偏差，这里重链不一定要最大，而且一个点向下可以没有重链</p>\n<p>但重链与轻链随时会改变，那怎么办呢</p>\n<p>我们不用线段树维护，我们用splay</p>\n<p>支持分裂合并的平衡树都可以完成这件事</p>\n<p>但为什么选splay？因为出于某种玄学的复杂度证明用splay是一个log的……</p>\n<p>现在，我们用一棵splay表示一条重链，中序遍历表示它从上往下的顺序</p>\n<p>那么每次如何操作呢？</p>\n<p>我们需要制造出这么几个操作：</p>\n<h3 id=\"is-root\"><a href=\"#is-root\" class=\"headerlink\" title=\"is_root\"></a>is_root</h3><p>它的意思就是判断一个点是否是一棵splay的根</p>\n<p>注意这是splay的根，而不是树的根<del>我被坑了一次</del></p>\n<p>注意这个函数没有在其他splay出现过，这里只是为了不用写分裂合并</p>\n<p>方法很简单，用“父亲有没有孩子是自己”来标记是否为根</p>\n<p>这使lct中的splay短了很多</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"access\"><a href=\"#access\" class=\"headerlink\" title=\"access\"></a>access</h3><p>它指打通一个点到根的链(打成重链)<br>就是不停spaly，然后把父亲的儿子变成自己，很好理解<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">        Splay(x);N[x][<span class=\"number\">1</span>]=i;Up(x);<span class=\"comment\">//Up-&gt;上传标记</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mkroot\"><a href=\"#mkroot\" class=\"headerlink\" title=\"mkroot\"></a>mkroot</h3><p>把一个点变成根(树的根)<br>有了access，然后splay它他就成了splay的根了，但实际中序遍历还是最后<br>那再reverse一下就好了啊<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>还有一些零碎操作比如findroot什么的，很好想清楚，就不讲了</p>\n<h2 id=\"题\"><a href=\"#题\" class=\"headerlink\" title=\"题\"></a>题</h2><h3 id=\"弹飞绵羊\"><a href=\"#弹飞绵羊\" class=\"headerlink\" title=\"弹飞绵羊\"></a><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=2002\" target=\"_blank\" rel=\"noopener\">弹飞绵羊</a></h3><p>明显每次把儿子a从b接到c上，没有什么困难的东西<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 400005</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">int</span> v[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> CFA&#123;<span class=\"comment\">//China Football Association!!</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fa,s[<span class=\"number\">2</span>],fl,sz;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>&amp; <span class=\"keyword\">operator</span>[](<span class=\"keyword\">int</span> x)&#123;<span class=\"keyword\">return</span> s[x];&#125;</span><br><span class=\"line\">    &#125;N[MN];</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Up</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        N[x].sz=N[N[x][<span class=\"number\">0</span>]].sz+N[N[x][<span class=\"number\">1</span>]].sz+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Down</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!N[x].fl)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        swap(N[x][<span class=\"number\">1</span>],N[x][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        N[N[x][<span class=\"number\">0</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        N[N[x][<span class=\"number\">1</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        N[x].fl=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rotate</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y=<span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=N[x].fa,f=N[p][<span class=\"number\">0</span>]==x,pp=N[p].fa;</span><br><span class=\"line\">        N[p][f^<span class=\"number\">1</span>]=N[x][f];</span><br><span class=\"line\">        N[N[x][f]].fa=p;</span><br><span class=\"line\">        N[x][f]=p;N[p].fa=x;</span><br><span class=\"line\">        Up(p);Up(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">0</span>]==p)N[pp][<span class=\"number\">0</span>]=x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">1</span>]==p)N[pp][<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        N[x].fa=pp;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y)Rotate(y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">int</span> stk[MN],ssz=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Splay</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        assert(ssz==<span class=\"number\">0</span>);</span><br><span class=\"line\">        stk[++ssz]=x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;!Isroot(i);i=N[i].fa)stk[++ssz]=N[i].fa;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ssz)Down(stk[ssz--]);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!Isroot(x))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> p=N[x].fa,f=N[p][<span class=\"number\">1</span>]==x,pp=N[p].fa,ff=N[pp][<span class=\"number\">1</span>]==p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Isroot(p))Rotate(x);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(f==ff)Rotate(p,x);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> Rotate(x,x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">            Splay(x);N[x][<span class=\"number\">1</span>]=i;Up(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Link</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);N[x].fa=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cut</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);Access(y);Splay(y);</span><br><span class=\"line\">        N[y][<span class=\"number\">0</span>]=N[x].fa=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+<span class=\"number\">1</span>;++i)CFA::N[i].sz=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,v+i);</span><br><span class=\"line\">        CFA::Link(i,min(n+<span class=\"number\">1</span>,i+v[i]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> q;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;q);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> op,x,y;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;op);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);++x;</span><br><span class=\"line\">            CFA::Mkroot(n+<span class=\"number\">1</span>);CFA::Access(x);CFA::Splay(x);</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,CFA::N[x].sz<span class=\"number\">-1</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);++x;</span><br><span class=\"line\">            CFA::Cut(x,min(n+<span class=\"number\">1</span>,x+v[x]));</span><br><span class=\"line\">            CFA::Link(x,min(n+<span class=\"number\">1</span>,x+(v[x]=y)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"洞穴勘测\"><a href=\"#洞穴勘测\" class=\"headerlink\" title=\"洞穴勘测\"></a><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=2049\" target=\"_blank\" rel=\"noopener\">洞穴勘测</a></h3><p>明显每次判断联不联通，没有什么困难的东西<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 10005</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> Tohsaka&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fa,fl,s[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>&amp; <span class=\"keyword\">operator</span>[](<span class=\"keyword\">int</span> x)&#123;<span class=\"keyword\">return</span> s[x];&#125;</span><br><span class=\"line\">    &#125;N[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Down</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[x].fl)&#123;</span><br><span class=\"line\">            N[N[x][<span class=\"number\">0</span>]].fl^=<span class=\"number\">1</span>;N[N[x][<span class=\"number\">1</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">            swap(N[x][<span class=\"number\">0</span>],N[x][<span class=\"number\">1</span>]);</span><br><span class=\"line\">            N[x].fl=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Rotate</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=N[x].fa,pp=N[p].fa;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> d=N[p][<span class=\"number\">0</span>]==x;</span><br><span class=\"line\">        N[N[x][d]].fa=p;</span><br><span class=\"line\">        N[p][d^<span class=\"number\">1</span>]=N[x][d];</span><br><span class=\"line\">        N[p].fa=x;N[x][d]=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">0</span>]==p)N[pp][<span class=\"number\">0</span>]=x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">1</span>]==p)N[pp][<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        N[x].fa=pp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> stk[MN],ttk=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Splay</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        stk[++ttk]=x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;!Isroot(i);i=N[i].fa)stk[++ttk]=N[i].fa;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ttk)Down(stk[ttk--]);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!Isroot(x))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> p=N[x].fa,pp=N[p].fa;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Isroot(p))&#123;Rotate(x);<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> f=N[p][<span class=\"number\">1</span>]==x,ff=N[pp][<span class=\"number\">1</span>]==p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(f==ff)&#123;</span><br><span class=\"line\">                Rotate(p),Rotate(x);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                Rotate(x),Rotate(x);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">            Splay(x);N[x][<span class=\"number\">1</span>]=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Link</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);N[x].fa=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Cut</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);Access(y);Splay(y);</span><br><span class=\"line\">        N[x].fa=N[y][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Fdroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(N[x][<span class=\"number\">0</span>])x=N[x][<span class=\"number\">0</span>];</span><br><span class=\"line\">        Splay(x);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,x,y;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> cc[<span class=\"number\">11</span>];</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%d%d\"</span>,cc,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'Q'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Mkroot(x);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Tohsaka::Fdroot(y)!=x)<span class=\"built_in\">puts</span>(<span class=\"string\">\"No\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"Yes\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'C'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Link(x,y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'D'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Cut(x,y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>终于还是学习了一下lct<del>(然而我还是不会证复杂度)</del></p>\n<p>讲道理，这东西比想象的要来的简单</p>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>首先，这个东西是用来维护树的信息的</p>\n<p>可以支持link和cut操作(所以叫做link-cut-tree)</p>\n<p>这个link和cut，顾名思义，就是把图断开和接上</p>\n<p>如何做到呢？</p>\n<p>同是用数据结构维护一树，我们会想到树剖</p>\n<p>树剖分重链轻链，这里也可以这样</p>\n<p>但略有偏差，这里重链不一定要最大，而且一个点向下可以没有重链</p>\n<p>但重链与轻链随时会改变，那怎么办呢</p>\n<p>我们不用线段树维护，我们用splay</p>\n<p>支持分裂合并的平衡树都可以完成这件事</p>\n<p>但为什么选splay？因为出于某种玄学的复杂度证明用splay是一个log的……</p>\n<p>现在，我们用一棵splay表示一条重链，中序遍历表示它从上往下的顺序</p>\n<p>那么每次如何操作呢？</p>\n<p>我们需要制造出这么几个操作：</p>\n<h3 id=\"is-root\"><a href=\"#is-root\" class=\"headerlink\" title=\"is_root\"></a>is_root</h3><p>它的意思就是判断一个点是否是一棵splay的根</p>\n<p>注意这是splay的根，而不是树的根<del>我被坑了一次</del></p>\n<p>注意这个函数没有在其他splay出现过，这里只是为了不用写分裂合并</p>\n<p>方法很简单，用“父亲有没有孩子是自己”来标记是否为根</p>\n<p>这使lct中的splay短了很多</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"access\"><a href=\"#access\" class=\"headerlink\" title=\"access\"></a>access</h3><p>它指打通一个点到根的链(打成重链)<br>就是不停spaly，然后把父亲的儿子变成自己，很好理解<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">        Splay(x);N[x][<span class=\"number\">1</span>]=i;Up(x);<span class=\"comment\">//Up-&gt;上传标记</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"mkroot\"><a href=\"#mkroot\" class=\"headerlink\" title=\"mkroot\"></a>mkroot</h3><p>把一个点变成根(树的根)<br>有了access，然后splay它他就成了splay的根了，但实际中序遍历还是最后<br>那再reverse一下就好了啊<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">    Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p>还有一些零碎操作比如findroot什么的，很好想清楚，就不讲了</p>\n<h2 id=\"题\"><a href=\"#题\" class=\"headerlink\" title=\"题\"></a>题</h2><h3 id=\"弹飞绵羊\"><a href=\"#弹飞绵羊\" class=\"headerlink\" title=\"弹飞绵羊\"></a><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=2002\" target=\"_blank\" rel=\"noopener\">弹飞绵羊</a></h3><p>明显每次把儿子a从b接到c上，没有什么困难的东西<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 400005</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">int</span> v[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> CFA&#123;<span class=\"comment\">//China Football Association!!</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fa,s[<span class=\"number\">2</span>],fl,sz;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>&amp; <span class=\"keyword\">operator</span>[](<span class=\"keyword\">int</span> x)&#123;<span class=\"keyword\">return</span> s[x];&#125;</span><br><span class=\"line\">    &#125;N[MN];</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Up</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        N[x].sz=N[N[x][<span class=\"number\">0</span>]].sz+N[N[x][<span class=\"number\">1</span>]].sz+<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Down</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!N[x].fl)<span class=\"keyword\">return</span>;</span><br><span class=\"line\">        swap(N[x][<span class=\"number\">1</span>],N[x][<span class=\"number\">0</span>]);</span><br><span class=\"line\">        N[N[x][<span class=\"number\">0</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        N[N[x][<span class=\"number\">1</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">        N[x].fl=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Rotate</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y=<span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=N[x].fa,f=N[p][<span class=\"number\">0</span>]==x,pp=N[p].fa;</span><br><span class=\"line\">        N[p][f^<span class=\"number\">1</span>]=N[x][f];</span><br><span class=\"line\">        N[N[x][f]].fa=p;</span><br><span class=\"line\">        N[x][f]=p;N[p].fa=x;</span><br><span class=\"line\">        Up(p);Up(x);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">0</span>]==p)N[pp][<span class=\"number\">0</span>]=x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">1</span>]==p)N[pp][<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        N[x].fa=pp;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y)Rotate(y);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">int</span> stk[MN],ssz=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Splay</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        assert(ssz==<span class=\"number\">0</span>);</span><br><span class=\"line\">        stk[++ssz]=x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;!Isroot(i);i=N[i].fa)stk[++ssz]=N[i].fa;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ssz)Down(stk[ssz--]);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!Isroot(x))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> p=N[x].fa,f=N[p][<span class=\"number\">1</span>]==x,pp=N[p].fa,ff=N[pp][<span class=\"number\">1</span>]==p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Isroot(p))Rotate(x);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(f==ff)Rotate(p,x);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> Rotate(x,x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">            Splay(x);N[x][<span class=\"number\">1</span>]=i;Up(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Link</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);N[x].fa=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Cut</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);Access(y);Splay(y);</span><br><span class=\"line\">        N[y][<span class=\"number\">0</span>]=N[x].fa=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n+<span class=\"number\">1</span>;++i)CFA::N[i].sz=<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,v+i);</span><br><span class=\"line\">        CFA::Link(i,min(n+<span class=\"number\">1</span>,i+v[i]));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> q;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;q);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> op,x,y;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;op);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(op==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;x);++x;</span><br><span class=\"line\">            CFA::Mkroot(n+<span class=\"number\">1</span>);CFA::Access(x);CFA::Splay(x);</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">\"%d\\n\"</span>,CFA::N[x].sz<span class=\"number\">-1</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;x,&amp;y);++x;</span><br><span class=\"line\">            CFA::Cut(x,min(n+<span class=\"number\">1</span>,x+v[x]));</span><br><span class=\"line\">            CFA::Link(x,min(n+<span class=\"number\">1</span>,x+(v[x]=y)));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"洞穴勘测\"><a href=\"#洞穴勘测\" class=\"headerlink\" title=\"洞穴勘测\"></a><a href=\"https://www.lydsy.com/JudgeOnline/problem.php?id=2049\" target=\"_blank\" rel=\"noopener\">洞穴勘测</a></h3><p>明显每次判断联不联通，没有什么困难的东西<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 10005</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> Tohsaka&#123;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> fa,fl,s[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>&amp; <span class=\"keyword\">operator</span>[](<span class=\"keyword\">int</span> x)&#123;<span class=\"keyword\">return</span> s[x];&#125;</span><br><span class=\"line\">    &#125;N[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Down</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[x].fl)&#123;</span><br><span class=\"line\">            N[N[x][<span class=\"number\">0</span>]].fl^=<span class=\"number\">1</span>;N[N[x][<span class=\"number\">1</span>]].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">            swap(N[x][<span class=\"number\">0</span>],N[x][<span class=\"number\">1</span>]);</span><br><span class=\"line\">            N[x].fl=<span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">bool</span> <span class=\"title\">Isroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> N[N[x].fa][<span class=\"number\">0</span>]!=x&amp;&amp;N[N[x].fa][<span class=\"number\">1</span>]!=x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Rotate</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> p=N[x].fa,pp=N[p].fa;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> d=N[p][<span class=\"number\">0</span>]==x;</span><br><span class=\"line\">        N[N[x][d]].fa=p;</span><br><span class=\"line\">        N[p][d^<span class=\"number\">1</span>]=N[x][d];</span><br><span class=\"line\">        N[p].fa=x;N[x][d]=p;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">0</span>]==p)N[pp][<span class=\"number\">0</span>]=x;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(N[pp][<span class=\"number\">1</span>]==p)N[pp][<span class=\"number\">1</span>]=x;</span><br><span class=\"line\">        N[x].fa=pp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> stk[MN],ttk=<span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Splay</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        stk[++ttk]=x;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=x;!Isroot(i);i=N[i].fa)stk[++ttk]=N[i].fa;</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(ttk)Down(stk[ttk--]);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(!Isroot(x))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> p=N[x].fa,pp=N[p].fa;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Isroot(p))&#123;Rotate(x);<span class=\"keyword\">continue</span>;&#125;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> f=N[p][<span class=\"number\">1</span>]==x,ff=N[pp][<span class=\"number\">1</span>]==p;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(f==ff)&#123;</span><br><span class=\"line\">                Rotate(p),Rotate(x);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                Rotate(x),Rotate(x);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Access</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;x;i=x,x=N[x].fa)&#123;</span><br><span class=\"line\">            Splay(x);N[x][<span class=\"number\">1</span>]=i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Mkroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);N[x].fl^=<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Link</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);N[x].fa=y;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">void</span> <span class=\"title\">Cut</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">        Mkroot(x);Access(y);Splay(y);</span><br><span class=\"line\">        N[x].fa=N[y][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">inline</span> <span class=\"keyword\">int</span> <span class=\"title\">Fdroot</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">        Access(x);Splay(x);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(N[x][<span class=\"number\">0</span>])x=N[x][<span class=\"number\">0</span>];</span><br><span class=\"line\">        Splay(x);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> x;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,x,y;i&lt;=m;++i)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">char</span> cc[<span class=\"number\">11</span>];</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s%d%d\"</span>,cc,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'Q'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Mkroot(x);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(Tohsaka::Fdroot(y)!=x)<span class=\"built_in\">puts</span>(<span class=\"string\">\"No\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"built_in\">puts</span>(<span class=\"string\">\"Yes\"</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'C'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Link(x,y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(cc[<span class=\"number\">0</span>]==<span class=\"string\">'D'</span>)&#123;</span><br><span class=\"line\">            Tohsaka::Cut(x,y);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Min_25筛","top":1,"mathjax":true,"date":"2018-07-27T12:35:50.000Z","_content":"这个东西续了我好长时间，并且让我意识到状态真的不太对\n\nMin_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧\n\n###大致思路是这样的：\n\n首先，处理的内容大致就是积性函数~~或者什么类似积性函数的奇怪东西~~前缀和，复杂度大概是什么$$O(n^{0.69})$$(这个的证明真的不会)\n\n我们假设如此一个问题：\n\n$$\nf(n) = \\begin{cases}\n1& if\\;n = 1\\\\\ng(p,e)& if\\;n = y^e,\\;e > 0,\\;p\\;is\\;a\\;prime \\\\\nf(x)*f(y) & if\\;x*y=n,\\;x\\perp y \\\\\n\\end{cases}\n$$\n\n然后求$$S(N)=\\displaystyle\\sum_{1 \\leqslant j \\leqslant N} f(j)$$\n\n考虑到一个数除以其最大质因数后一定不剩大于$$\\sqrt{N}$$的质因数，这是我们解决这个问题的关键。\n\n考虑枚举因数$$M$$:\n$$\\begin{aligned}\n& M' = M/P^{e}\\;,e>0\\\\\n& P\\;is\\;the\\;max\\;prime\\;factor\\;of\\;M\n\\end{aligned}$$\n\n根据这是个积性函数，可知：\n$$\n\\begin{aligned}& f(N)=\\sum_{M'} f(M')*(1+\\sum_{F < p \\leqslant N/M'} f(p))\\\\& F\\;is\\;the\\;largrst\\;prime\\;factor\\;of\\;M'\\;and\\;p\\;is\\;a\\;prime\n\\end{aligned}$$\n\n(这只是个大致的式子，不完全对，细节可能有问题，可能需要调整)\n\n那么$$f(M')$$可以递归解决，问题在于求$$\\sum_{F < p \\leqslant N/M'} f(p)$$(自此以下$$p$$都为质数)\n\n首先，设$$h(x)=\\sum_{p \\leqslant x} f(p)$$，将其转化为$$h(N/M')-h(F-1)$$\n\n那么解决了$$h(x)$$的求解就能解决问题了\n\n对此如何处理呢？\n\n首先，如果$$p$$不止是质数的话(将合数看做质数处理)，大部分的前缀和都能$$O(1)$$求出\n\n例如$$\\sigma(n^k)$$(n的k次的因子数)\n\n然后考虑筛的实现\n\n我们回想有什么筛是大家熟知的\n\n埃拉托色尼筛？\n\n考虑像埃拉托色尼筛一样搞\n\n埃拉托色尼筛怎么搞的？\n\n每个数$$p$$用来筛大于$$p^2$$的所有数\n\n所以这里也是这样：从小到大枚举每个质数，用其对大于其平方的数的前缀和进行处理\n\n(这里注意，要处理$$h(x)$$的数仅有$$O(\\sqrt{N})$$个，为$$1,2,3,...,N/3,N/2,N/1$$)\n\n这样就能完美筛出$$h(x)$$了\n\n有这么几道具体题目：\n\n---\n\n### [spoj-DIVCNTK](https://www.spoj.com/problems/DIVCNTK/)\n\n这题就是求$$f(n)=\\displaystyle\\sum_{1 \\leqslant i \\leqslant n}\\sigma(i^k)$$\n\n这里首先去掉1这个因数，就成了积性函数。\n\n而$$f(p)=k$$的前缀和可以轻松求出。\n\n直接上就好\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 4000005\n#define lg unsigned long long\n\nint pri[MN],totp=0,S;\nbool vd[MN];\nlg ns[MN],tns=0,h[MN];\n\nlg n,k;\n\nint D(lg X){\n\treturn X<=S?X:tns-n/X+1;\n}\n\nlg f(lg n,int g){//递归求解f,f(n,g)☞n以内不包括大于pri[g]的质因数的数\n\tif(n<1||pri[g+1]>n)return 0;\n\tlg res=h[D(n)]-g*(k+1);\n\twhile(1ll*pri[g+1]*pri[g+1]<=n){\n\t\tint p=pri[g+1];\n\t\tlg t=n/p,e=k+1;\n\t\twhile(t>=p)res+=f(t,g+1)*e+e+k,e+=k,t/=p;\n\t\t++g;\n\t}return res;\n}\n\nlg slv(lg n){\n\tS=sqrt(n);//处理h(x)\n\ttns=0;\n\tfor(int i=1;i<=S;++i){\n\t\tns[++tns]=i;\n\t}\n\tfor(int i=S;i;--i){\n\t\tif(n/i>S)ns[++tns]=n/i;\n\t}\n\tfor(int i=1;i<=tns;++i){\n\t\th[i]=(ns[i]-1)*(k+1);\n\t}\n\tint H=1;lg up=0;\n\tfor(int P=1;pri[P]<=S;++P){\n\t\tint p=pri[P];\n\t\twhile(ns[H]<1ll*p*p)++H;\n\t\tfor(int i=tns;i>=H;--i){\n\t\t\th[i]-=h[D(ns[i]/p)]-up;\n\t\t}up+=k+1;\n\t}\n\treturn f(n,0)+1;\n}\n\nvoid init(){\n\tfor(int i=2;i<MN;++i){\n\t\tif(vd[i])continue;\n\t\tpri[++totp]=i;\n\t\tfor(int j=i+i;j<MN;j+=i)vd[j]=1;\n\t}\n}\n\nint main(){\n\tinit();int Cas;\n\tfor(scanf(\"%d\",&Cas);Cas;--Cas){\n\t\tscanf(\"%llu%llu\",&n,&k);\n\t\tprintf(\"%llu\\n\",slv(n));\n\t}\n\treturn 0;\n}\n```\n\n### [APS2](https://www.spoj.com/problems/APS2/)\n\n这题求的是最小质因数前缀和\n\n考虑枚举最小质因数，要乘的就是最小质因数大于等于与$$n$$的数的个数\n\n这个就可以用Min_25筛搞了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 4000005\n#define ulg unsigned long long\n\nint pri[MN],totp=0,S;\nulg tp[MN];\nbool vd[MN];\nulg ns[MN],tns=0,h[MN],d[MN];\n\nulg n;\n\nint D(ulg X){\n\treturn X<=S?X:tns-n/X+1;\n}\n\nulg c(ulg n,int g){\n\tif(n<1||pri[g]>n){\n\t\treturn 0;\n\t}\n\tulg res=d[D(n)]-d[D(pri[g]-1)];\n\twhile(1ll*pri[g]*pri[g]<=n){\n\t\tulg t=n/pri[g];\n\t\twhile(t>=pri[g]){\n\t\t\tres+=c(t,g+1);\n\t\t\t++res;\n\t\t\tt/=pri[g];\n\t\t}++g;\n\t}\n\treturn res;\n}\n\nulg f(ulg n,int g){\n\tif(n<1||pri[g]>n)return 0;\n\tulg res=h[D(n)];\n\twhile(1ll*pri[g]*pri[g]<=n){\n\t\tulg t=n/pri[g];\n\t\tres+=c(t,g)*pri[g];\n\t\t++g;\n\t}return res;\n}\n\nulg slv(ulg n){\n\tS=sqrt(n);tns=0;\n\tfor(int i=1;i<=S;++i){\n\t\tns[++tns]=i;\n\t}\n\tfor(int i=S;i;--i){\n\t\tif(n/i>S)ns[++tns]=n/i;\n\t}\n\tfor(int i=1;i<=tns;++i){\n\t\tif(!(ns[i]&1))h[i]=(ns[i]+2)/2*(ns[i]-1);\n\t\telse h[i]=(ns[i]-1)/2*(ns[i]+2);\n\t\td[i]=ns[i]-1;\n\t}\n\tint H=1;\n\tfor(int p=2;p<=S;++p)if(!vd[p]){\n\t\twhile(ns[H]<1ll*p*p)++H;\n\t\tfor(int i=tns;i>=H;--i){\n\t\t\th[i]-=(h[D(ns[i]/p)]-h[p-1])*p;\n\t\t\td[i]-=(d[D(ns[i]/p)]-d[p-1]);\n\t\t}\n\t}\n\treturn f(n,1);\n}\n\nvoid init(){\n\tfor(int i=2;i<MN;++i){\n\t\tif(vd[i])continue;\n\t\tpri[++totp]=i;\n\t\tfor(int j=i+i;j<MN;j+=i)vd[j]=1;\n\t}\n\tfor(int i=2;i<MN;++i)tp[i]=pri[i]+tp[i-1];\n}\n\nint main(){\n\tinit();int Cas;\n\tfor(scanf(\"%d\",&Cas);Cas;--Cas){\n\t\tscanf(\"%lld\",&n);\n\t\tprintf(\"%llu\\n\",slv(n));\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/min25s.md","raw":"---\ntitle: Min_25筛\ntop: 1\nmathjax: true\ndate: 2018-07-27 20:35:50\ntags:\n\t- 数论\n\t- 数论筛\n---\n这个东西续了我好长时间，并且让我意识到状态真的不太对\n\nMin_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧\n\n###大致思路是这样的：\n\n首先，处理的内容大致就是积性函数~~或者什么类似积性函数的奇怪东西~~前缀和，复杂度大概是什么$$O(n^{0.69})$$(这个的证明真的不会)\n\n我们假设如此一个问题：\n\n$$\nf(n) = \\begin{cases}\n1& if\\;n = 1\\\\\ng(p,e)& if\\;n = y^e,\\;e > 0,\\;p\\;is\\;a\\;prime \\\\\nf(x)*f(y) & if\\;x*y=n,\\;x\\perp y \\\\\n\\end{cases}\n$$\n\n然后求$$S(N)=\\displaystyle\\sum_{1 \\leqslant j \\leqslant N} f(j)$$\n\n考虑到一个数除以其最大质因数后一定不剩大于$$\\sqrt{N}$$的质因数，这是我们解决这个问题的关键。\n\n考虑枚举因数$$M$$:\n$$\\begin{aligned}\n& M' = M/P^{e}\\;,e>0\\\\\n& P\\;is\\;the\\;max\\;prime\\;factor\\;of\\;M\n\\end{aligned}$$\n\n根据这是个积性函数，可知：\n$$\n\\begin{aligned}& f(N)=\\sum_{M'} f(M')*(1+\\sum_{F < p \\leqslant N/M'} f(p))\\\\& F\\;is\\;the\\;largrst\\;prime\\;factor\\;of\\;M'\\;and\\;p\\;is\\;a\\;prime\n\\end{aligned}$$\n\n(这只是个大致的式子，不完全对，细节可能有问题，可能需要调整)\n\n那么$$f(M')$$可以递归解决，问题在于求$$\\sum_{F < p \\leqslant N/M'} f(p)$$(自此以下$$p$$都为质数)\n\n首先，设$$h(x)=\\sum_{p \\leqslant x} f(p)$$，将其转化为$$h(N/M')-h(F-1)$$\n\n那么解决了$$h(x)$$的求解就能解决问题了\n\n对此如何处理呢？\n\n首先，如果$$p$$不止是质数的话(将合数看做质数处理)，大部分的前缀和都能$$O(1)$$求出\n\n例如$$\\sigma(n^k)$$(n的k次的因子数)\n\n然后考虑筛的实现\n\n我们回想有什么筛是大家熟知的\n\n埃拉托色尼筛？\n\n考虑像埃拉托色尼筛一样搞\n\n埃拉托色尼筛怎么搞的？\n\n每个数$$p$$用来筛大于$$p^2$$的所有数\n\n所以这里也是这样：从小到大枚举每个质数，用其对大于其平方的数的前缀和进行处理\n\n(这里注意，要处理$$h(x)$$的数仅有$$O(\\sqrt{N})$$个，为$$1,2,3,...,N/3,N/2,N/1$$)\n\n这样就能完美筛出$$h(x)$$了\n\n有这么几道具体题目：\n\n---\n\n### [spoj-DIVCNTK](https://www.spoj.com/problems/DIVCNTK/)\n\n这题就是求$$f(n)=\\displaystyle\\sum_{1 \\leqslant i \\leqslant n}\\sigma(i^k)$$\n\n这里首先去掉1这个因数，就成了积性函数。\n\n而$$f(p)=k$$的前缀和可以轻松求出。\n\n直接上就好\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 4000005\n#define lg unsigned long long\n\nint pri[MN],totp=0,S;\nbool vd[MN];\nlg ns[MN],tns=0,h[MN];\n\nlg n,k;\n\nint D(lg X){\n\treturn X<=S?X:tns-n/X+1;\n}\n\nlg f(lg n,int g){//递归求解f,f(n,g)☞n以内不包括大于pri[g]的质因数的数\n\tif(n<1||pri[g+1]>n)return 0;\n\tlg res=h[D(n)]-g*(k+1);\n\twhile(1ll*pri[g+1]*pri[g+1]<=n){\n\t\tint p=pri[g+1];\n\t\tlg t=n/p,e=k+1;\n\t\twhile(t>=p)res+=f(t,g+1)*e+e+k,e+=k,t/=p;\n\t\t++g;\n\t}return res;\n}\n\nlg slv(lg n){\n\tS=sqrt(n);//处理h(x)\n\ttns=0;\n\tfor(int i=1;i<=S;++i){\n\t\tns[++tns]=i;\n\t}\n\tfor(int i=S;i;--i){\n\t\tif(n/i>S)ns[++tns]=n/i;\n\t}\n\tfor(int i=1;i<=tns;++i){\n\t\th[i]=(ns[i]-1)*(k+1);\n\t}\n\tint H=1;lg up=0;\n\tfor(int P=1;pri[P]<=S;++P){\n\t\tint p=pri[P];\n\t\twhile(ns[H]<1ll*p*p)++H;\n\t\tfor(int i=tns;i>=H;--i){\n\t\t\th[i]-=h[D(ns[i]/p)]-up;\n\t\t}up+=k+1;\n\t}\n\treturn f(n,0)+1;\n}\n\nvoid init(){\n\tfor(int i=2;i<MN;++i){\n\t\tif(vd[i])continue;\n\t\tpri[++totp]=i;\n\t\tfor(int j=i+i;j<MN;j+=i)vd[j]=1;\n\t}\n}\n\nint main(){\n\tinit();int Cas;\n\tfor(scanf(\"%d\",&Cas);Cas;--Cas){\n\t\tscanf(\"%llu%llu\",&n,&k);\n\t\tprintf(\"%llu\\n\",slv(n));\n\t}\n\treturn 0;\n}\n```\n\n### [APS2](https://www.spoj.com/problems/APS2/)\n\n这题求的是最小质因数前缀和\n\n考虑枚举最小质因数，要乘的就是最小质因数大于等于与$$n$$的数的个数\n\n这个就可以用Min_25筛搞了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define MN 4000005\n#define ulg unsigned long long\n\nint pri[MN],totp=0,S;\nulg tp[MN];\nbool vd[MN];\nulg ns[MN],tns=0,h[MN],d[MN];\n\nulg n;\n\nint D(ulg X){\n\treturn X<=S?X:tns-n/X+1;\n}\n\nulg c(ulg n,int g){\n\tif(n<1||pri[g]>n){\n\t\treturn 0;\n\t}\n\tulg res=d[D(n)]-d[D(pri[g]-1)];\n\twhile(1ll*pri[g]*pri[g]<=n){\n\t\tulg t=n/pri[g];\n\t\twhile(t>=pri[g]){\n\t\t\tres+=c(t,g+1);\n\t\t\t++res;\n\t\t\tt/=pri[g];\n\t\t}++g;\n\t}\n\treturn res;\n}\n\nulg f(ulg n,int g){\n\tif(n<1||pri[g]>n)return 0;\n\tulg res=h[D(n)];\n\twhile(1ll*pri[g]*pri[g]<=n){\n\t\tulg t=n/pri[g];\n\t\tres+=c(t,g)*pri[g];\n\t\t++g;\n\t}return res;\n}\n\nulg slv(ulg n){\n\tS=sqrt(n);tns=0;\n\tfor(int i=1;i<=S;++i){\n\t\tns[++tns]=i;\n\t}\n\tfor(int i=S;i;--i){\n\t\tif(n/i>S)ns[++tns]=n/i;\n\t}\n\tfor(int i=1;i<=tns;++i){\n\t\tif(!(ns[i]&1))h[i]=(ns[i]+2)/2*(ns[i]-1);\n\t\telse h[i]=(ns[i]-1)/2*(ns[i]+2);\n\t\td[i]=ns[i]-1;\n\t}\n\tint H=1;\n\tfor(int p=2;p<=S;++p)if(!vd[p]){\n\t\twhile(ns[H]<1ll*p*p)++H;\n\t\tfor(int i=tns;i>=H;--i){\n\t\t\th[i]-=(h[D(ns[i]/p)]-h[p-1])*p;\n\t\t\td[i]-=(d[D(ns[i]/p)]-d[p-1]);\n\t\t}\n\t}\n\treturn f(n,1);\n}\n\nvoid init(){\n\tfor(int i=2;i<MN;++i){\n\t\tif(vd[i])continue;\n\t\tpri[++totp]=i;\n\t\tfor(int j=i+i;j<MN;j+=i)vd[j]=1;\n\t}\n\tfor(int i=2;i<MN;++i)tp[i]=pri[i]+tp[i-1];\n}\n\nint main(){\n\tinit();int Cas;\n\tfor(scanf(\"%d\",&Cas);Cas;--Cas){\n\t\tscanf(\"%lld\",&n);\n\t\tprintf(\"%llu\\n\",slv(n));\n\t}\n\treturn 0;\n}\n```\n","slug":"min25s","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwk1000finjxfdw6tpr7","content":"<p>这个东西续了我好长时间，并且让我意识到状态真的不太对</p>\n<p>Min_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧</p>\n<h3 id=\"大致思路是这样的：\"><a href=\"#大致思路是这样的：\" class=\"headerlink\" title=\"大致思路是这样的：\"></a>大致思路是这样的：</h3><p>首先，处理的内容大致就是积性函数<del>或者什么类似积性函数的奇怪东西</del>前缀和，复杂度大概是什么<script type=\"math/tex\">O(n^{0.69})</script>(这个的证明真的不会)</p>\n<p>我们假设如此一个问题：</p>\n<script type=\"math/tex; mode=display\">\nf(n) = \\begin{cases}\n1& if\\;n = 1\\\\\ng(p,e)& if\\;n = y^e,\\;e > 0,\\;p\\;is\\;a\\;prime \\\\\nf(x)*f(y) & if\\;x*y=n,\\;x\\perp y \\\\\n\\end{cases}</script><p>然后求<script type=\"math/tex\">S(N)=\\displaystyle\\sum_{1 \\leqslant j \\leqslant N} f(j)</script></p>\n<p>考虑到一个数除以其最大质因数后一定不剩大于<script type=\"math/tex\">\\sqrt{N}</script>的质因数，这是我们解决这个问题的关键。</p>\n<p>考虑枚举因数<script type=\"math/tex\">M</script>:</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n& M' = M/P^{e}\\;,e>0\\\\\n& P\\;is\\;the\\;max\\;prime\\;factor\\;of\\;M\n\\end{aligned}</script><p>根据这是个积性函数，可知：</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}& f(N)=\\sum_{M'} f(M')*(1+\\sum_{F < p \\leqslant N/M'} f(p))\\\\& F\\;is\\;the\\;largrst\\;prime\\;factor\\;of\\;M'\\;and\\;p\\;is\\;a\\;prime\n\\end{aligned}</script><p>(这只是个大致的式子，不完全对，细节可能有问题，可能需要调整)</p>\n<p>那么<script type=\"math/tex\">f(M')</script>可以递归解决，问题在于求<script type=\"math/tex\">\\sum_{F < p \\leqslant N/M'} f(p)</script>(自此以下<script type=\"math/tex\">p</script>都为质数)</p>\n<p>首先，设<script type=\"math/tex\">h(x)=\\sum_{p \\leqslant x} f(p)</script>，将其转化为<script type=\"math/tex\">h(N/M')-h(F-1)</script></p>\n<p>那么解决了<script type=\"math/tex\">h(x)</script>的求解就能解决问题了</p>\n<p>对此如何处理呢？</p>\n<p>首先，如果<script type=\"math/tex\">p</script>不止是质数的话(将合数看做质数处理)，大部分的前缀和都能<script type=\"math/tex\">O(1)</script>求出</p>\n<p>例如<script type=\"math/tex\">\\sigma(n^k)</script>(n的k次的因子数)</p>\n<p>然后考虑筛的实现</p>\n<p>我们回想有什么筛是大家熟知的</p>\n<p>埃拉托色尼筛？</p>\n<p>考虑像埃拉托色尼筛一样搞</p>\n<p>埃拉托色尼筛怎么搞的？</p>\n<p>每个数<script type=\"math/tex\">p</script>用来筛大于<script type=\"math/tex\">p^2</script>的所有数</p>\n<p>所以这里也是这样：从小到大枚举每个质数，用其对大于其平方的数的前缀和进行处理</p>\n<p>(这里注意，要处理<script type=\"math/tex\">h(x)</script>的数仅有<script type=\"math/tex\">O(\\sqrt{N})</script>个，为<script type=\"math/tex\">1,2,3,...,N/3,N/2,N/1</script>)</p>\n<p>这样就能完美筛出<script type=\"math/tex\">h(x)</script>了</p>\n<p>有这么几道具体题目：</p>\n<hr>\n<h3 id=\"spoj-DIVCNTK\"><a href=\"#spoj-DIVCNTK\" class=\"headerlink\" title=\"spoj-DIVCNTK\"></a><a href=\"https://www.spoj.com/problems/DIVCNTK/\" target=\"_blank\" rel=\"noopener\">spoj-DIVCNTK</a></h3><p>这题就是求<script type=\"math/tex\">f(n)=\\displaystyle\\sum_{1 \\leqslant i \\leqslant n}\\sigma(i^k)</script></p>\n<p>这里首先去掉1这个因数，就成了积性函数。</p>\n<p>而<script type=\"math/tex\">f(p)=k</script>的前缀和可以轻松求出。</p>\n<p>直接上就好</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 4000005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg unsigned long long</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[MN],totp=<span class=\"number\">0</span>,S;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vd[MN];</span><br><span class=\"line\">lg ns[MN],tns=<span class=\"number\">0</span>,h[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">lg n,k;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(lg X)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> X&lt;=S?X:tns-n/X+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">f</span><span class=\"params\">(lg n,<span class=\"keyword\">int</span> g)</span></span>&#123;<span class=\"comment\">//递归求解f,f(n,g)☞n以内不包括大于pri[g]的质因数的数</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g+<span class=\"number\">1</span>]&gt;n)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\tlg res=h[D(n)]-g*(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g+<span class=\"number\">1</span>]*pri[g+<span class=\"number\">1</span>]&lt;=n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> p=pri[g+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tlg t=n/p,e=k+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(t&gt;=p)res+=f(t,g+<span class=\"number\">1</span>)*e+e+k,e+=k,t/=p;</span><br><span class=\"line\">\t\t++g;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">slv</span><span class=\"params\">(lg n)</span></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"built_in\">sqrt</span>(n);<span class=\"comment\">//处理h(x)</span></span><br><span class=\"line\">\ttns=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=S;++i)&#123;</span><br><span class=\"line\">\t\tns[++tns]=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=S;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=tns;++i)&#123;</span><br><span class=\"line\">\t\th[i]=(ns[i]<span class=\"number\">-1</span>)*(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> H=<span class=\"number\">1</span>;lg up=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> P=<span class=\"number\">1</span>;pri[P]&lt;=S;++P)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> p=pri[P];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(ns[H]&lt;<span class=\"number\">1l</span>l*p*p)++H;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class=\"line\">\t\t\th[i]-=h[D(ns[i]/p)]-up;</span><br><span class=\"line\">\t\t&#125;up+=k+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> f(n,<span class=\"number\">0</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vd[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tpri[++totp]=i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();<span class=\"keyword\">int</span> Cas;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%llu%llu\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%llu\\n\"</span>,slv(n));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"APS2\"><a href=\"#APS2\" class=\"headerlink\" title=\"APS2\"></a><a href=\"https://www.spoj.com/problems/APS2/\" target=\"_blank\" rel=\"noopener\">APS2</a></h3><p>这题求的是最小质因数前缀和</p>\n<p>考虑枚举最小质因数，要乘的就是最小质因数大于等于与<script type=\"math/tex\">n</script>的数的个数</p>\n<p>这个就可以用Min_25筛搞了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 4000005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ulg unsigned long long</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[MN],totp=<span class=\"number\">0</span>,S;</span><br><span class=\"line\">ulg tp[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vd[MN];</span><br><span class=\"line\">ulg ns[MN],tns=<span class=\"number\">0</span>,h[MN],d[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">ulg n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(ulg X)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> X&lt;=S?X:tns-n/X+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">c</span><span class=\"params\">(ulg n,<span class=\"keyword\">int</span> g)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g]&gt;n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tulg res=d[D(n)]-d[D(pri[g]<span class=\"number\">-1</span>)];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class=\"line\">\t\tulg t=n/pri[g];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(t&gt;=pri[g])&#123;</span><br><span class=\"line\">\t\t\tres+=c(t,g+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t++res;</span><br><span class=\"line\">\t\t\tt/=pri[g];</span><br><span class=\"line\">\t\t&#125;++g;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">f</span><span class=\"params\">(ulg n,<span class=\"keyword\">int</span> g)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g]&gt;n)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\tulg res=h[D(n)];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class=\"line\">\t\tulg t=n/pri[g];</span><br><span class=\"line\">\t\tres+=c(t,g)*pri[g];</span><br><span class=\"line\">\t\t++g;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">slv</span><span class=\"params\">(ulg n)</span></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"built_in\">sqrt</span>(n);tns=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=S;++i)&#123;</span><br><span class=\"line\">\t\tns[++tns]=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=S;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=tns;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!(ns[i]&amp;<span class=\"number\">1</span>))h[i]=(ns[i]+<span class=\"number\">2</span>)/<span class=\"number\">2</span>*(ns[i]<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> h[i]=(ns[i]<span class=\"number\">-1</span>)/<span class=\"number\">2</span>*(ns[i]+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\td[i]=ns[i]<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> H=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">2</span>;p&lt;=S;++p)<span class=\"keyword\">if</span>(!vd[p])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(ns[H]&lt;<span class=\"number\">1l</span>l*p*p)++H;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class=\"line\">\t\t\th[i]-=(h[D(ns[i]/p)]-h[p<span class=\"number\">-1</span>])*p;</span><br><span class=\"line\">\t\t\td[i]-=(d[D(ns[i]/p)]-d[p<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> f(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vd[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tpri[++totp]=i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)tp[i]=pri[i]+tp[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();<span class=\"keyword\">int</span> Cas;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;n);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%llu\\n\"</span>,slv(n));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>这个东西续了我好长时间，并且让我意识到状态真的不太对</p>\n<p>Min_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧</p>\n<h3 id=\"大致思路是这样的：\"><a href=\"#大致思路是这样的：\" class=\"headerlink\" title=\"大致思路是这样的：\"></a>大致思路是这样的：</h3><p>首先，处理的内容大致就是积性函数<del>或者什么类似积性函数的奇怪东西</del>前缀和，复杂度大概是什么<script type=\"math/tex\">O(n^{0.69})</script>(这个的证明真的不会)</p>\n<p>我们假设如此一个问题：</p>\n<script type=\"math/tex; mode=display\">\nf(n) = \\begin{cases}\n1& if\\;n = 1\\\\\ng(p,e)& if\\;n = y^e,\\;e > 0,\\;p\\;is\\;a\\;prime \\\\\nf(x)*f(y) & if\\;x*y=n,\\;x\\perp y \\\\\n\\end{cases}</script><p>然后求<script type=\"math/tex\">S(N)=\\displaystyle\\sum_{1 \\leqslant j \\leqslant N} f(j)</script></p>\n<p>考虑到一个数除以其最大质因数后一定不剩大于<script type=\"math/tex\">\\sqrt{N}</script>的质因数，这是我们解决这个问题的关键。</p>\n<p>考虑枚举因数<script type=\"math/tex\">M</script>:</p>\n<script type=\"math/tex; mode=display\">\\begin{aligned}\n& M' = M/P^{e}\\;,e>0\\\\\n& P\\;is\\;the\\;max\\;prime\\;factor\\;of\\;M\n\\end{aligned}</script><p>根据这是个积性函数，可知：</p>\n<script type=\"math/tex; mode=display\">\n\\begin{aligned}& f(N)=\\sum_{M'} f(M')*(1+\\sum_{F < p \\leqslant N/M'} f(p))\\\\& F\\;is\\;the\\;largrst\\;prime\\;factor\\;of\\;M'\\;and\\;p\\;is\\;a\\;prime\n\\end{aligned}</script><p>(这只是个大致的式子，不完全对，细节可能有问题，可能需要调整)</p>\n<p>那么<script type=\"math/tex\">f(M')</script>可以递归解决，问题在于求<script type=\"math/tex\">\\sum_{F < p \\leqslant N/M'} f(p)</script>(自此以下<script type=\"math/tex\">p</script>都为质数)</p>\n<p>首先，设<script type=\"math/tex\">h(x)=\\sum_{p \\leqslant x} f(p)</script>，将其转化为<script type=\"math/tex\">h(N/M')-h(F-1)</script></p>\n<p>那么解决了<script type=\"math/tex\">h(x)</script>的求解就能解决问题了</p>\n<p>对此如何处理呢？</p>\n<p>首先，如果<script type=\"math/tex\">p</script>不止是质数的话(将合数看做质数处理)，大部分的前缀和都能<script type=\"math/tex\">O(1)</script>求出</p>\n<p>例如<script type=\"math/tex\">\\sigma(n^k)</script>(n的k次的因子数)</p>\n<p>然后考虑筛的实现</p>\n<p>我们回想有什么筛是大家熟知的</p>\n<p>埃拉托色尼筛？</p>\n<p>考虑像埃拉托色尼筛一样搞</p>\n<p>埃拉托色尼筛怎么搞的？</p>\n<p>每个数<script type=\"math/tex\">p</script>用来筛大于<script type=\"math/tex\">p^2</script>的所有数</p>\n<p>所以这里也是这样：从小到大枚举每个质数，用其对大于其平方的数的前缀和进行处理</p>\n<p>(这里注意，要处理<script type=\"math/tex\">h(x)</script>的数仅有<script type=\"math/tex\">O(\\sqrt{N})</script>个，为<script type=\"math/tex\">1,2,3,...,N/3,N/2,N/1</script>)</p>\n<p>这样就能完美筛出<script type=\"math/tex\">h(x)</script>了</p>\n<p>有这么几道具体题目：</p>\n<hr>\n<h3 id=\"spoj-DIVCNTK\"><a href=\"#spoj-DIVCNTK\" class=\"headerlink\" title=\"spoj-DIVCNTK\"></a><a href=\"https://www.spoj.com/problems/DIVCNTK/\" target=\"_blank\" rel=\"noopener\">spoj-DIVCNTK</a></h3><p>这题就是求<script type=\"math/tex\">f(n)=\\displaystyle\\sum_{1 \\leqslant i \\leqslant n}\\sigma(i^k)</script></p>\n<p>这里首先去掉1这个因数，就成了积性函数。</p>\n<p>而<script type=\"math/tex\">f(p)=k</script>的前缀和可以轻松求出。</p>\n<p>直接上就好</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 4000005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg unsigned long long</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[MN],totp=<span class=\"number\">0</span>,S;</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vd[MN];</span><br><span class=\"line\">lg ns[MN],tns=<span class=\"number\">0</span>,h[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">lg n,k;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(lg X)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> X&lt;=S?X:tns-n/X+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">f</span><span class=\"params\">(lg n,<span class=\"keyword\">int</span> g)</span></span>&#123;<span class=\"comment\">//递归求解f,f(n,g)☞n以内不包括大于pri[g]的质因数的数</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g+<span class=\"number\">1</span>]&gt;n)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\tlg res=h[D(n)]-g*(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g+<span class=\"number\">1</span>]*pri[g+<span class=\"number\">1</span>]&lt;=n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> p=pri[g+<span class=\"number\">1</span>];</span><br><span class=\"line\">\t\tlg t=n/p,e=k+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(t&gt;=p)res+=f(t,g+<span class=\"number\">1</span>)*e+e+k,e+=k,t/=p;</span><br><span class=\"line\">\t\t++g;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">slv</span><span class=\"params\">(lg n)</span></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"built_in\">sqrt</span>(n);<span class=\"comment\">//处理h(x)</span></span><br><span class=\"line\">\ttns=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=S;++i)&#123;</span><br><span class=\"line\">\t\tns[++tns]=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=S;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=tns;++i)&#123;</span><br><span class=\"line\">\t\th[i]=(ns[i]<span class=\"number\">-1</span>)*(k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> H=<span class=\"number\">1</span>;lg up=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> P=<span class=\"number\">1</span>;pri[P]&lt;=S;++P)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> p=pri[P];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(ns[H]&lt;<span class=\"number\">1l</span>l*p*p)++H;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class=\"line\">\t\t\th[i]-=h[D(ns[i]/p)]-up;</span><br><span class=\"line\">\t\t&#125;up+=k+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> f(n,<span class=\"number\">0</span>)+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vd[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tpri[++totp]=i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();<span class=\"keyword\">int</span> Cas;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%llu%llu\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%llu\\n\"</span>,slv(n));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"APS2\"><a href=\"#APS2\" class=\"headerlink\" title=\"APS2\"></a><a href=\"https://www.spoj.com/problems/APS2/\" target=\"_blank\" rel=\"noopener\">APS2</a></h3><p>这题求的是最小质因数前缀和</p>\n<p>考虑枚举最小质因数，要乘的就是最小质因数大于等于与<script type=\"math/tex\">n</script>的数的个数</p>\n<p>这个就可以用Min_25筛搞了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 4000005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ulg unsigned long long</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> pri[MN],totp=<span class=\"number\">0</span>,S;</span><br><span class=\"line\">ulg tp[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> vd[MN];</span><br><span class=\"line\">ulg ns[MN],tns=<span class=\"number\">0</span>,h[MN],d[MN];</span><br><span class=\"line\"></span><br><span class=\"line\">ulg n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">D</span><span class=\"params\">(ulg X)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> X&lt;=S?X:tns-n/X+<span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">c</span><span class=\"params\">(ulg n,<span class=\"keyword\">int</span> g)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g]&gt;n)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tulg res=d[D(n)]-d[D(pri[g]<span class=\"number\">-1</span>)];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class=\"line\">\t\tulg t=n/pri[g];</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(t&gt;=pri[g])&#123;</span><br><span class=\"line\">\t\t\tres+=c(t,g+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t++res;</span><br><span class=\"line\">\t\t\tt/=pri[g];</span><br><span class=\"line\">\t\t&#125;++g;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">f</span><span class=\"params\">(ulg n,<span class=\"keyword\">int</span> g)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(n&lt;<span class=\"number\">1</span>||pri[g]&gt;n)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\tulg res=h[D(n)];</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class=\"line\">\t\tulg t=n/pri[g];</span><br><span class=\"line\">\t\tres+=c(t,g)*pri[g];</span><br><span class=\"line\">\t\t++g;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">ulg <span class=\"title\">slv</span><span class=\"params\">(ulg n)</span></span>&#123;</span><br><span class=\"line\">\tS=<span class=\"built_in\">sqrt</span>(n);tns=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=S;++i)&#123;</span><br><span class=\"line\">\t\tns[++tns]=i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=S;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=tns;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!(ns[i]&amp;<span class=\"number\">1</span>))h[i]=(ns[i]+<span class=\"number\">2</span>)/<span class=\"number\">2</span>*(ns[i]<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span> h[i]=(ns[i]<span class=\"number\">-1</span>)/<span class=\"number\">2</span>*(ns[i]+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\td[i]=ns[i]<span class=\"number\">-1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> H=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> p=<span class=\"number\">2</span>;p&lt;=S;++p)<span class=\"keyword\">if</span>(!vd[p])&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(ns[H]&lt;<span class=\"number\">1l</span>l*p*p)++H;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class=\"line\">\t\t\th[i]-=(h[D(ns[i]/p)]-h[p<span class=\"number\">-1</span>])*p;</span><br><span class=\"line\">\t\t\td[i]-=(d[D(ns[i]/p)]-d[p<span class=\"number\">-1</span>]);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> f(n,<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vd[i])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\tpri[++totp]=i;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;MN;++i)tp[i]=pri[i]+tp[i<span class=\"number\">-1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tinit();<span class=\"keyword\">int</span> Cas;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,&amp;n);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%llu\\n\"</span>,slv(n));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"NOI2018归程(return)","top":1,"date":"2018-07-18T23:30:38.000Z","_content":"[~~题面~~](https://judge-duck.online:10086/problem/noi18a)\n\n在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……\n\n不过话说回来，写log^2的可持久化并查集的都过了……\n\n不过，标算是个神奇的东西，叫：\n\n## 克鲁斯卡尔重构树\n\n## ～～其实这是个很蠢的东西～～\n\n大家都会克鲁斯卡尔最小生成树吧\n\n只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子\n\n这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\n#define MN 800005\n#define lg long long\n#define pli pair<lg,int>\n#define mp make_pair\n#define ft first\n#define sd second\n\nint n,m;\n\nint read(){\n\tint d=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-f;c=getchar();}\n\twhile(c>='0'&&c<='9'){d=d*10+c-'0';c=getchar();}\n\treturn d*f;\n}\n\nint nex[MN],tot=0,vi[MN],fr[MN],ai[MN];\nlg wi[MN];\nvoid add(int x,int y,lg z,int a){\n\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;\n}\n\nstruct Ege{\n\tint x,y,a;lg c;\n}E[MN];\nbool operator<(Ege A,Ege B){\n\treturn A.a<B.a;\n}\n\nstruct Qry{\n\tint v,p,id;\n}Q[MN];\nbool operator<(Qry A,Qry B){\n\treturn A.p<B.p;\n}\n\npriority_queue<pli,vector<pli >,greater<pli > > pQ;\nlg ds[MN];int vis[MN],F[MN];lg V[MN];int L[MN];\nvoid djk(){\n\tmemset(ds,0x3f,sizeof ds);\n\tmemset(vis,0,sizeof vis);\n\tds[1]=0;\n\twhile(!pQ.empty())pQ.pop();\n\tpQ.push(mp(0,1));\n\twhile(!pQ.empty()){\n\t\tint x=pQ.top().sd;pQ.pop();\n\t\tif(vis[x])continue;vis[x]=1;\n\t\tfor(int i=fr[x];i;i=nex[i]){\n\t\t\tif(ds[x]+wi[i]<ds[vi[i]]){\n\t\t\t\tds[vi[i]]=ds[x]+wi[i];\n\t\t\t\tpQ.push(mp(ds[vi[i]],vi[i]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)F[i]=i,V[i]=ds[i],L[i]=0x7f7f7f7f;\n}\n\nint gf(int x){\n\treturn F[x]==x?x:F[x]=gf(F[x]);\n}\n\nlg res[MN];\nint f[20][MN];\nlg Lasans,Ans=0;\n\nvoid clean(){\n\ttot=0;memset(fr,0,sizeof fr);Lasans=0;\n}\n\nvoid un(int x,int y,int v){\n\tf[0][x]=++n;\n\tf[0][y]=n;\n\tV[n]=min(V[x],V[y]);\n\tL[n]=v;\n\tF[x]=F[y]=n;F[n]=n;\n}\n\nvoid bt(){\n\tsort(E+1,E+m+1);\n\tfor(int i=m;i;--i){\n\t\tint fx=gf(E[i].x),fy=gf(E[i].y);\n\t\tif(fx!=fy)un(fx,fy,E[i].a);\n\t}\n\tfor(int i=1;i<=19;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tf[i][j]=f[i-1][f[i-1][j]];\n\t\t}\n\t}\n}\n\nint main(){\n\tint T=read();\n\twhile(T--){\n\t\tclean();\n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tint a=read(),b=read();lg c=read(),d=read();\n\t\t\tadd(a,b,c,d);add(b,a,c,d);E[i]=(Ege){a,b,d,c};\n\t\t}int nn=n;\n\t\tdjk();Lasans=0;bt();\n\t\tint q=read(),K=read(),S=read();\n\t\tfor(int i=1;i<=q;++i){\n\t\t\tint v=(read()+K*Lasans-1)%nn+1,\n\t\t\t\tp=(read()+K*Lasans)%(S+1);\n\t\t\tfor(int j=19;~j;--j)if(L[f[j][v]]>p)v=f[j][v];\n\t\t\tLasans=V[v];\n\t\t\tprintf(\"%lld\\n\",Lasans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/noi18a.md","raw":"---\ntitle: NOI2018归程(return)\ntop: 1\ndate: 2018-07-19 07:30:38\ntags:\n\t- NOI\n\t- 图论\n\t- 生成树\n---\n[~~题面~~](https://judge-duck.online:10086/problem/noi18a)\n\n在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……\n\n不过话说回来，写log^2的可持久化并查集的都过了……\n\n不过，标算是个神奇的东西，叫：\n\n## 克鲁斯卡尔重构树\n\n## ～～其实这是个很蠢的东西～～\n\n大家都会克鲁斯卡尔最小生成树吧\n\n只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子\n\n这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了\n\n```cpp\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<queue>\nusing namespace std;\n\n#define MN 800005\n#define lg long long\n#define pli pair<lg,int>\n#define mp make_pair\n#define ft first\n#define sd second\n\nint n,m;\n\nint read(){\n\tint d=0,f=1;char c=getchar();\n\twhile(c>'9'||c<'0'){if(c=='-')f=-f;c=getchar();}\n\twhile(c>='0'&&c<='9'){d=d*10+c-'0';c=getchar();}\n\treturn d*f;\n}\n\nint nex[MN],tot=0,vi[MN],fr[MN],ai[MN];\nlg wi[MN];\nvoid add(int x,int y,lg z,int a){\n\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;\n}\n\nstruct Ege{\n\tint x,y,a;lg c;\n}E[MN];\nbool operator<(Ege A,Ege B){\n\treturn A.a<B.a;\n}\n\nstruct Qry{\n\tint v,p,id;\n}Q[MN];\nbool operator<(Qry A,Qry B){\n\treturn A.p<B.p;\n}\n\npriority_queue<pli,vector<pli >,greater<pli > > pQ;\nlg ds[MN];int vis[MN],F[MN];lg V[MN];int L[MN];\nvoid djk(){\n\tmemset(ds,0x3f,sizeof ds);\n\tmemset(vis,0,sizeof vis);\n\tds[1]=0;\n\twhile(!pQ.empty())pQ.pop();\n\tpQ.push(mp(0,1));\n\twhile(!pQ.empty()){\n\t\tint x=pQ.top().sd;pQ.pop();\n\t\tif(vis[x])continue;vis[x]=1;\n\t\tfor(int i=fr[x];i;i=nex[i]){\n\t\t\tif(ds[x]+wi[i]<ds[vi[i]]){\n\t\t\t\tds[vi[i]]=ds[x]+wi[i];\n\t\t\t\tpQ.push(mp(ds[vi[i]],vi[i]));\n\t\t\t}\n\t\t}\n\t}\n\tfor(int i=1;i<=n;++i)F[i]=i,V[i]=ds[i],L[i]=0x7f7f7f7f;\n}\n\nint gf(int x){\n\treturn F[x]==x?x:F[x]=gf(F[x]);\n}\n\nlg res[MN];\nint f[20][MN];\nlg Lasans,Ans=0;\n\nvoid clean(){\n\ttot=0;memset(fr,0,sizeof fr);Lasans=0;\n}\n\nvoid un(int x,int y,int v){\n\tf[0][x]=++n;\n\tf[0][y]=n;\n\tV[n]=min(V[x],V[y]);\n\tL[n]=v;\n\tF[x]=F[y]=n;F[n]=n;\n}\n\nvoid bt(){\n\tsort(E+1,E+m+1);\n\tfor(int i=m;i;--i){\n\t\tint fx=gf(E[i].x),fy=gf(E[i].y);\n\t\tif(fx!=fy)un(fx,fy,E[i].a);\n\t}\n\tfor(int i=1;i<=19;++i){\n\t\tfor(int j=1;j<=n;++j){\n\t\t\tf[i][j]=f[i-1][f[i-1][j]];\n\t\t}\n\t}\n}\n\nint main(){\n\tint T=read();\n\twhile(T--){\n\t\tclean();\n\t\tn=read();m=read();\n\t\tfor(int i=1;i<=m;++i){\n\t\t\tint a=read(),b=read();lg c=read(),d=read();\n\t\t\tadd(a,b,c,d);add(b,a,c,d);E[i]=(Ege){a,b,d,c};\n\t\t}int nn=n;\n\t\tdjk();Lasans=0;bt();\n\t\tint q=read(),K=read(),S=read();\n\t\tfor(int i=1;i<=q;++i){\n\t\t\tint v=(read()+K*Lasans-1)%nn+1,\n\t\t\t\tp=(read()+K*Lasans)%(S+1);\n\t\t\tfor(int j=19;~j;--j)if(L[f[j][v]]>p)v=f[j][v];\n\t\t\tLasans=V[v];\n\t\t\tprintf(\"%lld\\n\",Lasans);\n\t\t}\n\t}\n\treturn 0;\n}\n```\n","slug":"noi18a","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwk6000ginjxwoytb5ju","content":"<p><a href=\"https://judge-duck.online:10086/problem/noi18a\" target=\"_blank\" rel=\"noopener\"><del>题面</del></a></p>\n<p>在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……</p>\n<p>不过话说回来，写log^2的可持久化并查集的都过了……</p>\n<p>不过，标算是个神奇的东西，叫：</p>\n<h2 id=\"克鲁斯卡尔重构树\"><a href=\"#克鲁斯卡尔重构树\" class=\"headerlink\" title=\"克鲁斯卡尔重构树\"></a>克鲁斯卡尔重构树</h2><h2 id=\"～～其实这是个很蠢的东西～～\"><a href=\"#～～其实这是个很蠢的东西～～\" class=\"headerlink\" title=\"～～其实这是个很蠢的东西～～\"></a>～～其实这是个很蠢的东西～～</h2><p>大家都会克鲁斯卡尔最小生成树吧</p>\n<p>只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子</p>\n<p>这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 800005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pli pair<span class=\"meta-string\">&lt;lg,int&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> d=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;<span class=\"keyword\">char</span> c=getchar();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(c&gt;<span class=\"string\">'9'</span>||c&lt;<span class=\"string\">'0'</span>)&#123;<span class=\"keyword\">if</span>(c==<span class=\"string\">'-'</span>)f=-f;c=getchar();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>)&#123;d=d*<span class=\"number\">10</span>+c-<span class=\"string\">'0'</span>;c=getchar();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d*f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> nex[MN],tot=<span class=\"number\">0</span>,vi[MN],fr[MN],ai[MN];</span><br><span class=\"line\">lg wi[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z,<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Ege</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y,a;lg c;</span><br><span class=\"line\">&#125;E[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Ege A,Ege B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.a&lt;B.a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Qry</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,p,id;</span><br><span class=\"line\">&#125;Q[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Qry A,Qry B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.p&lt;B.p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">priority_queue&lt;pli,<span class=\"built_in\">vector</span>&lt;pli &gt;,greater&lt;pli &gt; &gt; pQ;</span><br><span class=\"line\">lg ds[MN];<span class=\"keyword\">int</span> vis[MN],F[MN];lg V[MN];<span class=\"keyword\">int</span> L[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">djk</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ds,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span> ds);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vis);</span><br><span class=\"line\">\tds[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!pQ.empty())pQ.pop();</span><br><span class=\"line\">\tpQ.push(mp(<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!pQ.empty())&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=pQ.top().sd;pQ.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vis[x])<span class=\"keyword\">continue</span>;vis[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ds[x]+wi[i]&lt;ds[vi[i]])&#123;</span><br><span class=\"line\">\t\t\t\tds[vi[i]]=ds[x]+wi[i];</span><br><span class=\"line\">\t\t\t\tpQ.push(mp(ds[vi[i]],vi[i]));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)F[i]=i,V[i]=ds[i],L[i]=<span class=\"number\">0x7f7f7f7f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gf</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> F[x]==x?x:F[x]=gf(F[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">lg res[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">20</span>][MN];</span><br><span class=\"line\">lg Lasans,Ans=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clean</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\ttot=<span class=\"number\">0</span>;<span class=\"built_in\">memset</span>(fr,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> fr);Lasans=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">un</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][x]=++n;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][y]=n;</span><br><span class=\"line\">\tV[n]=min(V[x],V[y]);</span><br><span class=\"line\">\tL[n]=v;</span><br><span class=\"line\">\tF[x]=F[y]=n;F[n]=n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tsort(E+<span class=\"number\">1</span>,E+m+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=m;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=gf(E[i].x),fy=gf(E[i].y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx!=fy)un(fx,fy,E[i].a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;++j)&#123;</span><br><span class=\"line\">\t\t\tf[i][j]=f[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][j]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T=read();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\tclean();</span><br><span class=\"line\">\t\tn=read();m=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> a=read(),b=read();lg c=read(),d=read();</span><br><span class=\"line\">\t\t\tadd(a,b,c,d);add(b,a,c,d);E[i]=(Ege)&#123;a,b,d,c&#125;;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">int</span> nn=n;</span><br><span class=\"line\">\t\tdjk();Lasans=<span class=\"number\">0</span>;bt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> q=read(),K=read(),S=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=q;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> v=(read()+K*Lasans<span class=\"number\">-1</span>)%nn+<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\tp=(read()+K*Lasans)%(S+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">19</span>;~j;--j)<span class=\"keyword\">if</span>(L[f[j][v]]&gt;p)v=f[j][v];</span><br><span class=\"line\">\t\t\tLasans=V[v];</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Lasans);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://judge-duck.online:10086/problem/noi18a\" target=\"_blank\" rel=\"noopener\"><del>题面</del></a></p>\n<p>在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……</p>\n<p>不过话说回来，写log^2的可持久化并查集的都过了……</p>\n<p>不过，标算是个神奇的东西，叫：</p>\n<h2 id=\"克鲁斯卡尔重构树\"><a href=\"#克鲁斯卡尔重构树\" class=\"headerlink\" title=\"克鲁斯卡尔重构树\"></a>克鲁斯卡尔重构树</h2><h2 id=\"～～其实这是个很蠢的东西～～\"><a href=\"#～～其实这是个很蠢的东西～～\" class=\"headerlink\" title=\"～～其实这是个很蠢的东西～～\"></a>～～其实这是个很蠢的东西～～</h2><p>大家都会克鲁斯卡尔最小生成树吧</p>\n<p>只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子</p>\n<p>这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;queue&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 800005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pli pair<span class=\"meta-string\">&lt;lg,int&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> d=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;<span class=\"keyword\">char</span> c=getchar();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(c&gt;<span class=\"string\">'9'</span>||c&lt;<span class=\"string\">'0'</span>)&#123;<span class=\"keyword\">if</span>(c==<span class=\"string\">'-'</span>)f=-f;c=getchar();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>)&#123;d=d*<span class=\"number\">10</span>+c-<span class=\"string\">'0'</span>;c=getchar();&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d*f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> nex[MN],tot=<span class=\"number\">0</span>,vi[MN],fr[MN],ai[MN];</span><br><span class=\"line\">lg wi[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z,<span class=\"keyword\">int</span> a)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Ege</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> x,y,a;lg c;</span><br><span class=\"line\">&#125;E[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Ege A,Ege B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.a&lt;B.a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Qry</span>&#123;</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> v,p,id;</span><br><span class=\"line\">&#125;Q[MN];</span><br><span class=\"line\"><span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span>&lt;(Qry A,Qry B)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> A.p&lt;B.p;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">priority_queue&lt;pli,<span class=\"built_in\">vector</span>&lt;pli &gt;,greater&lt;pli &gt; &gt; pQ;</span><br><span class=\"line\">lg ds[MN];<span class=\"keyword\">int</span> vis[MN],F[MN];lg V[MN];<span class=\"keyword\">int</span> L[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">djk</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(ds,<span class=\"number\">0x3f</span>,<span class=\"keyword\">sizeof</span> ds);</span><br><span class=\"line\">\t<span class=\"built_in\">memset</span>(vis,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> vis);</span><br><span class=\"line\">\tds[<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!pQ.empty())pQ.pop();</span><br><span class=\"line\">\tpQ.push(mp(<span class=\"number\">0</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!pQ.empty())&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> x=pQ.top().sd;pQ.pop();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(vis[x])<span class=\"keyword\">continue</span>;vis[x]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(ds[x]+wi[i]&lt;ds[vi[i]])&#123;</span><br><span class=\"line\">\t\t\t\tds[vi[i]]=ds[x]+wi[i];</span><br><span class=\"line\">\t\t\t\tpQ.push(mp(ds[vi[i]],vi[i]));</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)F[i]=i,V[i]=ds[i],L[i]=<span class=\"number\">0x7f7f7f7f</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">gf</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> F[x]==x?x:F[x]=gf(F[x]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">lg res[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> f[<span class=\"number\">20</span>][MN];</span><br><span class=\"line\">lg Lasans,Ans=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">clean</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\ttot=<span class=\"number\">0</span>;<span class=\"built_in\">memset</span>(fr,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> fr);Lasans=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">un</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,<span class=\"keyword\">int</span> v)</span></span>&#123;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][x]=++n;</span><br><span class=\"line\">\tf[<span class=\"number\">0</span>][y]=n;</span><br><span class=\"line\">\tV[n]=min(V[x],V[y]);</span><br><span class=\"line\">\tL[n]=v;</span><br><span class=\"line\">\tF[x]=F[y]=n;F[n]=n;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tsort(E+<span class=\"number\">1</span>,E+m+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=m;i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> fx=gf(E[i].x),fy=gf(E[i].y);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(fx!=fy)un(fx,fy,E[i].a);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">1</span>;j&lt;=n;++j)&#123;</span><br><span class=\"line\">\t\t\tf[i][j]=f[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][j]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T=read();</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\tclean();</span><br><span class=\"line\">\t\tn=read();m=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> a=read(),b=read();lg c=read(),d=read();</span><br><span class=\"line\">\t\t\tadd(a,b,c,d);add(b,a,c,d);E[i]=(Ege)&#123;a,b,d,c&#125;;</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">int</span> nn=n;</span><br><span class=\"line\">\t\tdjk();Lasans=<span class=\"number\">0</span>;bt();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> q=read(),K=read(),S=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=q;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> v=(read()+K*Lasans<span class=\"number\">-1</span>)%nn+<span class=\"number\">1</span>,</span><br><span class=\"line\">\t\t\t\tp=(read()+K*Lasans)%(S+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">19</span>;~j;--j)<span class=\"keyword\">if</span>(L[f[j][v]]&gt;p)v=f[j][v];</span><br><span class=\"line\">\t\t\tLasans=V[v];</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,Lasans);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"NOI2018冒泡排序(inverse)","date":"2018-07-19T12:22:44.000Z","top":1,"mathjax":true,"_content":"\n[这道题](https://judge-duck.online:10086/problem/noi18b)的冒泡排序好像是假的\n\n首先，根据那个啥的定义，首先必须得到坏序列的充要条件是 \n\n$$\\exists\\;{i<j<k},a_{i} > a_{j} > a_{k}$$\n\n证明就感性理解一下，对于中间那个数，无论它目标位置是在左边还是右边，都有至少一步向反方向移动，所以一定是坏序列了\n\n###80\n---\n然后80分就很简单了，设计这么一个函数，$$F_{i,j}$$表示目前有i个数需要排列，但是由于前面的数的限制，最小的$j$个数的相对顺序必须递增。\n\n容易得到递推式： \n\n$$ F_{i,j} = \\sum^{j-1}_{k=i} F_{i-1,k}$$\n\n其实就是枚举拿的是哪个数，最小数就是$$F_{i-1,k}$$,否则对应了各个数。\n\n然后就拿这个东西像数位dp一样扫一遍过去就是O($$n^2$$)了\n\n###100\n---\n满分算法就比较神仙了\n\n曾经有这样一道[题](https://www.codechef.com/APRIL18B/problems/VAIMIN)\n\n为了解决在一条直线限制下A点走到B点的方案数，这里用到了一种高妙的方法，将起点按对称线翻转计数，这里的每一种方案刚好一一对应了一种原起点到终点的一种路线(想象将该路线第一次遇到对称轴前的路径翻折)，于是这样，就能解决上述的小问题。\n\n那么，对于这个问题，我们可以发现，在dp转移的时候，其实对应了一个长度为2n的括号序列。\n\n每次转移对应了在原串后面加上了若干左括号和一个右括号（当取的是最小数时对应0个左括号+1个右括号）\n\n然后将左括号和右括号转化成在二维坐标上的两个向右上（下）45度的向量，所以这就成了一个在二维上自由行走（但不能低于x轴）的问题，同时必须满足中途没有低于过一条线（除非已经高于过这条直线）。\n\n于是想80分一样，对于每一位统计在这位超过限制的答案数，这里可以发现，只要先多出现了一个左括号，后面的左括号都能在自由行走中补充，所以每位的统计可以O(1)，这就使总体复杂度化为O(n)了\n\n\n~~可是我为了偷懒，没有维护目前比最大值小的值数，用树状数组，多了一个log~~\n\n~~能过就行~~\n\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\n#define lg long long\n#define MN 1200005\n#define lsk 998244353\n#define lb(x) ((x)&(-(x)))\n\nint n;\nint a[MN>>1],c[MN>>1],D[MN>>1];\n\nint read(){\n\tstatic int d;static char c;\n\tfor(d=0,c=getchar();c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';d=(d<<3)+(d<<1)+c-'0',c=getchar());\n\treturn d;\n}\n\nvoid add(int x,int y){\n\tfor(;x<=n;x+=lb(x))c[x]+=y;\n}\n\nint qry(int x){\n\tint res=0;\n\tfor(;x;x-=lb(x))res+=c[x];\n\treturn res;\n}\n\nlg fac[MN],ifac[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid init(){\n\tfac[0]=ifac[0]=1;\n\tfor(int i=1;i<MN;++i){\n\t\tfac[i]=fac[i-1]*i%lsk;\n\t\tifac[i]=Pow(fac[i],lsk-2);\n\t}\n}\n\nlg C(int A,int B){\n\treturn fac[A]*ifac[B]%lsk*ifac[A-B]%lsk;\n}\n\nlg Q(int A,int B){\n\treturn C(A,(A+B)/2);\n}\n\nlg T(int A,int B){\n\tif(B<0)return 0;\n\treturn ((Q(A,B)-Q(A,B+2))%lsk+lsk)%lsk;\n}\n\nint main(){\n\tint TT;init();\n\tscanf(\"%d\",&TT);\n\twhile(TT--){\n\t\tmemset(D,0,sizeof D);\n\t\tmemset(c,0,sizeof c);\n\t\tscanf(\"%d\",&n);lg res=0;\n\t\tfor(int i=1;i<=n;++i)add(i,1);\n\t\tfor(int i=1;i<=n;++i)a[i]=read();\n\t\tint mx=0,mn=1;\n\t\tfor(int i=1;i<n;++i){\n\t\t\tint g=max(mx,a[i]);\n\t\t\tint f=qry(g)+1;\n\t\t\tint d=n*2-(i-1)*2-f;\n\t\t\tres=(res+T(d,f))%lsk;\n\t\t\tD[a[i]]=1;add(a[i],-1);\n\t\t\tif(a[i]>mx)mx=a[i];\n\t\t\telse{\n\t\t\t    if(a[i]!=mn)break;\n\t\t\t}\n\t\t\twhile(D[mn])++mn;\n\t\t}\n\t\tprintf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```\n","source":"_posts/noi18b.md","raw":"---\ntitle: NOI2018冒泡排序(inverse)\ndate: 2018-07-19 20:22:44\ntags:\n\t- NOI\n\t- 组合数学\ntop: 1\n\nmathjax: true\n---\n\n[这道题](https://judge-duck.online:10086/problem/noi18b)的冒泡排序好像是假的\n\n首先，根据那个啥的定义，首先必须得到坏序列的充要条件是 \n\n$$\\exists\\;{i<j<k},a_{i} > a_{j} > a_{k}$$\n\n证明就感性理解一下，对于中间那个数，无论它目标位置是在左边还是右边，都有至少一步向反方向移动，所以一定是坏序列了\n\n###80\n---\n然后80分就很简单了，设计这么一个函数，$$F_{i,j}$$表示目前有i个数需要排列，但是由于前面的数的限制，最小的$j$个数的相对顺序必须递增。\n\n容易得到递推式： \n\n$$ F_{i,j} = \\sum^{j-1}_{k=i} F_{i-1,k}$$\n\n其实就是枚举拿的是哪个数，最小数就是$$F_{i-1,k}$$,否则对应了各个数。\n\n然后就拿这个东西像数位dp一样扫一遍过去就是O($$n^2$$)了\n\n###100\n---\n满分算法就比较神仙了\n\n曾经有这样一道[题](https://www.codechef.com/APRIL18B/problems/VAIMIN)\n\n为了解决在一条直线限制下A点走到B点的方案数，这里用到了一种高妙的方法，将起点按对称线翻转计数，这里的每一种方案刚好一一对应了一种原起点到终点的一种路线(想象将该路线第一次遇到对称轴前的路径翻折)，于是这样，就能解决上述的小问题。\n\n那么，对于这个问题，我们可以发现，在dp转移的时候，其实对应了一个长度为2n的括号序列。\n\n每次转移对应了在原串后面加上了若干左括号和一个右括号（当取的是最小数时对应0个左括号+1个右括号）\n\n然后将左括号和右括号转化成在二维坐标上的两个向右上（下）45度的向量，所以这就成了一个在二维上自由行走（但不能低于x轴）的问题，同时必须满足中途没有低于过一条线（除非已经高于过这条直线）。\n\n于是想80分一样，对于每一位统计在这位超过限制的答案数，这里可以发现，只要先多出现了一个左括号，后面的左括号都能在自由行走中补充，所以每位的统计可以O(1)，这就使总体复杂度化为O(n)了\n\n\n~~可是我为了偷懒，没有维护目前比最大值小的值数，用树状数组，多了一个log~~\n\n~~能过就行~~\n\n\n```cpp\n#include<algorithm>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\n\n#define lg long long\n#define MN 1200005\n#define lsk 998244353\n#define lb(x) ((x)&(-(x)))\n\nint n;\nint a[MN>>1],c[MN>>1],D[MN>>1];\n\nint read(){\n\tstatic int d;static char c;\n\tfor(d=0,c=getchar();c<'0'||c>'9';c=getchar());\n\tfor(;c>='0'&&c<='9';d=(d<<3)+(d<<1)+c-'0',c=getchar());\n\treturn d;\n}\n\nvoid add(int x,int y){\n\tfor(;x<=n;x+=lb(x))c[x]+=y;\n}\n\nint qry(int x){\n\tint res=0;\n\tfor(;x;x-=lb(x))res+=c[x];\n\treturn res;\n}\n\nlg fac[MN],ifac[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid init(){\n\tfac[0]=ifac[0]=1;\n\tfor(int i=1;i<MN;++i){\n\t\tfac[i]=fac[i-1]*i%lsk;\n\t\tifac[i]=Pow(fac[i],lsk-2);\n\t}\n}\n\nlg C(int A,int B){\n\treturn fac[A]*ifac[B]%lsk*ifac[A-B]%lsk;\n}\n\nlg Q(int A,int B){\n\treturn C(A,(A+B)/2);\n}\n\nlg T(int A,int B){\n\tif(B<0)return 0;\n\treturn ((Q(A,B)-Q(A,B+2))%lsk+lsk)%lsk;\n}\n\nint main(){\n\tint TT;init();\n\tscanf(\"%d\",&TT);\n\twhile(TT--){\n\t\tmemset(D,0,sizeof D);\n\t\tmemset(c,0,sizeof c);\n\t\tscanf(\"%d\",&n);lg res=0;\n\t\tfor(int i=1;i<=n;++i)add(i,1);\n\t\tfor(int i=1;i<=n;++i)a[i]=read();\n\t\tint mx=0,mn=1;\n\t\tfor(int i=1;i<n;++i){\n\t\t\tint g=max(mx,a[i]);\n\t\t\tint f=qry(g)+1;\n\t\t\tint d=n*2-(i-1)*2-f;\n\t\t\tres=(res+T(d,f))%lsk;\n\t\t\tD[a[i]]=1;add(a[i],-1);\n\t\t\tif(a[i]>mx)mx=a[i];\n\t\t\telse{\n\t\t\t    if(a[i]!=mn)break;\n\t\t\t}\n\t\t\twhile(D[mn])++mn;\n\t\t}\n\t\tprintf(\"%lld\\n\",res);\n\t}\n\treturn 0;\n}\n```\n","slug":"noi18b","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwk8000iinjxvucrp990","content":"<p><a href=\"https://judge-duck.online:10086/problem/noi18b\" target=\"_blank\" rel=\"noopener\">这道题</a>的冒泡排序好像是假的</p>\n<p>首先，根据那个啥的定义，首先必须得到坏序列的充要条件是 </p>\n<script type=\"math/tex; mode=display\">\\exists\\;{i<j<k},a_{i} > a_{j} > a_{k}</script><p>证明就感性理解一下，对于中间那个数，无论它目标位置是在左边还是右边，都有至少一步向反方向移动，所以一定是坏序列了</p>\n<h3 id=\"80\"><a href=\"#80\" class=\"headerlink\" title=\"80\"></a>80</h3><hr>\n<p>然后80分就很简单了，设计这么一个函数，<script type=\"math/tex\">F_{i,j}</script>表示目前有i个数需要排列，但是由于前面的数的限制，最小的$j$个数的相对顺序必须递增。</p>\n<p>容易得到递推式： </p>\n<script type=\"math/tex; mode=display\">F_{i,j} = \\sum^{j-1}_{k=i} F_{i-1,k}</script><p>其实就是枚举拿的是哪个数，最小数就是<script type=\"math/tex\">F_{i-1,k}</script>,否则对应了各个数。</p>\n<p>然后就拿这个东西像数位dp一样扫一遍过去就是O(<script type=\"math/tex\">n^2</script>)了</p>\n<h3 id=\"100\"><a href=\"#100\" class=\"headerlink\" title=\"100\"></a>100</h3><hr>\n<p>满分算法就比较神仙了</p>\n<p>曾经有这样一道<a href=\"https://www.codechef.com/APRIL18B/problems/VAIMIN\" target=\"_blank\" rel=\"noopener\">题</a></p>\n<p>为了解决在一条直线限制下A点走到B点的方案数，这里用到了一种高妙的方法，将起点按对称线翻转计数，这里的每一种方案刚好一一对应了一种原起点到终点的一种路线(想象将该路线第一次遇到对称轴前的路径翻折)，于是这样，就能解决上述的小问题。</p>\n<p>那么，对于这个问题，我们可以发现，在dp转移的时候，其实对应了一个长度为2n的括号序列。</p>\n<p>每次转移对应了在原串后面加上了若干左括号和一个右括号（当取的是最小数时对应0个左括号+1个右括号）</p>\n<p>然后将左括号和右括号转化成在二维坐标上的两个向右上（下）45度的向量，所以这就成了一个在二维上自由行走（但不能低于x轴）的问题，同时必须满足中途没有低于过一条线（除非已经高于过这条直线）。</p>\n<p>于是想80分一样，对于每一位统计在这位超过限制的答案数，这里可以发现，只要先多出现了一个左括号，后面的左括号都能在自由行走中补充，所以每位的统计可以O(1)，这就使总体复杂度化为O(n)了</p>\n<p><del>可是我为了偷懒，没有维护目前比最大值小的值数，用树状数组，多了一个log</del></p>\n<p><del>能过就行</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;(-(x)))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[MN&gt;&gt;<span class=\"number\">1</span>],c[MN&gt;&gt;<span class=\"number\">1</span>],D[MN&gt;&gt;<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">int</span> d;<span class=\"keyword\">static</span> <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(d=<span class=\"number\">0</span>,c=getchar();c&lt;<span class=\"string\">'0'</span>||c&gt;<span class=\"string\">'9'</span>;c=getchar());</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>;d=(d&lt;&lt;<span class=\"number\">3</span>)+(d&lt;&lt;<span class=\"number\">1</span>)+c-<span class=\"string\">'0'</span>,c=getchar());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">lg fac[MN],ifac[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tfac[<span class=\"number\">0</span>]=ifac[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\tfac[i]=fac[i<span class=\"number\">-1</span>]*i%lsk;</span><br><span class=\"line\">\t\tifac[i]=Pow(fac[i],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">C</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fac[A]*ifac[B]%lsk*ifac[A-B]%lsk;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Q</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> C(A,(A+B)/<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">T</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(B&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ((Q(A,B)-Q(A,B+<span class=\"number\">2</span>))%lsk+lsk)%lsk;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> TT;init();</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;TT);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(TT--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(D,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> D);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);lg res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)add(i,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)a[i]=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mx=<span class=\"number\">0</span>,mn=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> g=max(mx,a[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> f=qry(g)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> d=n*<span class=\"number\">2</span>-(i<span class=\"number\">-1</span>)*<span class=\"number\">2</span>-f;</span><br><span class=\"line\">\t\t\tres=(res+T(d,f))%lsk;</span><br><span class=\"line\">\t\t\tD[a[i]]=<span class=\"number\">1</span>;add(a[i],<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[i]&gt;mx)mx=a[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">if</span>(a[i]!=mn)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(D[mn])++mn;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://judge-duck.online:10086/problem/noi18b\" target=\"_blank\" rel=\"noopener\">这道题</a>的冒泡排序好像是假的</p>\n<p>首先，根据那个啥的定义，首先必须得到坏序列的充要条件是 </p>\n<script type=\"math/tex; mode=display\">\\exists\\;{i<j<k},a_{i} > a_{j} > a_{k}</script><p>证明就感性理解一下，对于中间那个数，无论它目标位置是在左边还是右边，都有至少一步向反方向移动，所以一定是坏序列了</p>\n<h3 id=\"80\"><a href=\"#80\" class=\"headerlink\" title=\"80\"></a>80</h3><hr>\n<p>然后80分就很简单了，设计这么一个函数，<script type=\"math/tex\">F_{i,j}</script>表示目前有i个数需要排列，但是由于前面的数的限制，最小的$j$个数的相对顺序必须递增。</p>\n<p>容易得到递推式： </p>\n<script type=\"math/tex; mode=display\">F_{i,j} = \\sum^{j-1}_{k=i} F_{i-1,k}</script><p>其实就是枚举拿的是哪个数，最小数就是<script type=\"math/tex\">F_{i-1,k}</script>,否则对应了各个数。</p>\n<p>然后就拿这个东西像数位dp一样扫一遍过去就是O(<script type=\"math/tex\">n^2</script>)了</p>\n<h3 id=\"100\"><a href=\"#100\" class=\"headerlink\" title=\"100\"></a>100</h3><hr>\n<p>满分算法就比较神仙了</p>\n<p>曾经有这样一道<a href=\"https://www.codechef.com/APRIL18B/problems/VAIMIN\" target=\"_blank\" rel=\"noopener\">题</a></p>\n<p>为了解决在一条直线限制下A点走到B点的方案数，这里用到了一种高妙的方法，将起点按对称线翻转计数，这里的每一种方案刚好一一对应了一种原起点到终点的一种路线(想象将该路线第一次遇到对称轴前的路径翻折)，于是这样，就能解决上述的小问题。</p>\n<p>那么，对于这个问题，我们可以发现，在dp转移的时候，其实对应了一个长度为2n的括号序列。</p>\n<p>每次转移对应了在原串后面加上了若干左括号和一个右括号（当取的是最小数时对应0个左括号+1个右括号）</p>\n<p>然后将左括号和右括号转化成在二维坐标上的两个向右上（下）45度的向量，所以这就成了一个在二维上自由行走（但不能低于x轴）的问题，同时必须满足中途没有低于过一条线（除非已经高于过这条直线）。</p>\n<p>于是想80分一样，对于每一位统计在这位超过限制的答案数，这里可以发现，只要先多出现了一个左括号，后面的左括号都能在自由行走中补充，所以每位的统计可以O(1)，这就使总体复杂度化为O(n)了</p>\n<p><del>可是我为了偷懒，没有维护目前比最大值小的值数，用树状数组，多了一个log</del></p>\n<p><del>能过就行</del></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;cstring&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lb(x) ((x)&amp;(-(x)))</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n;</span><br><span class=\"line\"><span class=\"keyword\">int</span> a[MN&gt;&gt;<span class=\"number\">1</span>],c[MN&gt;&gt;<span class=\"number\">1</span>],D[MN&gt;&gt;<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">read</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> <span class=\"keyword\">int</span> d;<span class=\"keyword\">static</span> <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(d=<span class=\"number\">0</span>,c=getchar();c&lt;<span class=\"string\">'0'</span>||c&gt;<span class=\"string\">'9'</span>;c=getchar());</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;c&gt;=<span class=\"string\">'0'</span>&amp;&amp;c&lt;=<span class=\"string\">'9'</span>;d=(d&lt;&lt;<span class=\"number\">3</span>)+(d&lt;&lt;<span class=\"number\">1</span>)+c-<span class=\"string\">'0'</span>,c=getchar());</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> d;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">qry</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">lg fac[MN],ifac[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tfac[<span class=\"number\">0</span>]=ifac[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;MN;++i)&#123;</span><br><span class=\"line\">\t\tfac[i]=fac[i<span class=\"number\">-1</span>]*i%lsk;</span><br><span class=\"line\">\t\tifac[i]=Pow(fac[i],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">C</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> fac[A]*ifac[B]%lsk*ifac[A-B]%lsk;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Q</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> C(A,(A+B)/<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">T</span><span class=\"params\">(<span class=\"keyword\">int</span> A,<span class=\"keyword\">int</span> B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(B&lt;<span class=\"number\">0</span>)<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ((Q(A,B)-Q(A,B+<span class=\"number\">2</span>))%lsk+lsk)%lsk;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> TT;init();</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;TT);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(TT--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(D,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> D);</span><br><span class=\"line\">\t\t<span class=\"built_in\">memset</span>(c,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span> c);</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);lg res=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)add(i,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)a[i]=read();</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> mx=<span class=\"number\">0</span>,mn=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> g=max(mx,a[i]);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> f=qry(g)+<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">int</span> d=n*<span class=\"number\">2</span>-(i<span class=\"number\">-1</span>)*<span class=\"number\">2</span>-f;</span><br><span class=\"line\">\t\t\tres=(res+T(d,f))%lsk;</span><br><span class=\"line\">\t\t\tD[a[i]]=<span class=\"number\">1</span>;add(a[i],<span class=\"number\">-1</span>);</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(a[i]&gt;mx)mx=a[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t    <span class=\"keyword\">if</span>(a[i]!=mn)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">while</span>(D[mn])++mn;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,res);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"NOI2018屠龙勇士(dragon)","top":1,"mathjax":true,"date":"2018-07-22T11:51:21.000Z","_content":"好吧[这道题](https://judge-duck.online:10086/problem/noi18d)其实是道CRT裸题……\n\n首先哪条龙选哪把剑是固定的。拿个set(multiset)/map扫一遍即可。~~当然也可以自己写平衡树啊2333~~\n\n然后就是若干 $$ k_{i}x \\equiv a_i (mod\\;p_i) $$\n\n可以讲整个柿子中的$$ k_i,a_i,p_i $$同除$$gcd(k_i,p_i)$$(如果$$a_i$$无法整除就无解了)，这肯定对答案是无影响的。\n然后，江柿子两边同除$$k_i$$(已经有逆元了)，变为$$n$$个形为$$x \\equiv a_i/k_i(mod\\;p_i)$$的柿子\n这就成了裸的CRT了。\n对于一个CRT，\n\n$$ \\begin{equation}\n\\begin{cases}\nx \\equiv a_1(mod\\;p_1) \\\\\nx \\equiv a_2(mod\\;p_2) \\\\\ngcd(p_1,p_2) = d\n\\end{cases}\n\\end{equation} $$\n\n可得 \n\n$$x \\equiv p_1*(a_2-a_1)*(p_1/d)^{-1}/d+a_1(mod\\;n_1n_2/d) $$\n\n于是扫一遍就能A了。\n注意爆long long，要写慢速乘\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 200005\n#define ft first\n#define sd second\n\nlg a[MN],p[MN],k[MN],ne[MN];\n\nint n,m;lg Ep1,Ep2,G,Q;\n\nmap<lg,int> M;\nmap<lg,int>::iterator it;\n\nlg gcd(lg A,lg B){\n\treturn B==0?A:gcd(B,A%B);\n}\n\nvoid exgcd(lg x,lg y,lg& a,lg& b){\n\tif(y==0)a=1,b=0;\n\telse exgcd(y,x%y,b,a),b-=x/y*a;\n}\nlg inv(lg x,lg y){\n\tlg A,B;\n\texgcd(x,y,A,B);\n\treturn (A%y+y)%y;\n}\n\nlg Qx(lg x,lg y,lg md){\n\tlg res=0,f=1;\n\tif(x<0)x=-x,f=-f;\n\tif(y<0)y=-y,f=-f;\n\tfor(;y;y>>=1,x=(x+x)%md)if(y&1)res=(res+x)%md;\n\tres*=f;res%=md;res+=md;res%=md;\n\treturn res;\n}\n\nlg work(){\n\tlg F=1;\n\tfor(int i=1;i<=n;++i){\n\t\tint H=gcd(k[i],p[i]);\n\t\tif(a[i]%H)return -1;\n\t\tk[i]/=H,p[i]/=H,a[i]/=H;\n\t}\n\t//for(int i=1;i<=n;++i)cout<<k[i]<<endl;\n\tfor(int i=1;i<=n;++i){\n\t\tF=max(F,(a[i]-1)/k[i]+1);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]-=F*k[i];\n\t\ta[i]%=p[i];\n\t\ta[i]+=p[i];\n\t\ta[i]%=p[i];\n\t}\n\tif(G==1){\n\t\treturn F;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tlg H=gcd(k[i],p[i]);\n\t\ta[i]=Qx(a[i],inv(k[i],p[i]),p[i]);\n\t}\n\tlg np=p[1],na=a[1];\n\tfor(int i=2;i<=n;++i){\n\t\tlg E=gcd(np,p[i]),HH=p[i]/E,QQ=HH*np;\n\t\t//assert(QQ>=0);\n\t\tif((a[i]-na)%E)return -2;\n\t\texgcd(np,p[i],Ep1,Ep2);\n\t\tEp1=Qx(Ep1,(a[i]-na)/E,HH);\n\t\tna+=Qx(np,Ep1,QQ);\n\t\tna%=QQ;\t\n\t\tnp=QQ;\n\t}\n\treturn F+na;\n}\n\nint main(){\n    freopen(\"dragon.in\",\"r\",stdin);\n\tfreopen(\"dragon.out\",\"w\",stdout);\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d\",&n,&m);M.clear();G=1;\n\t\tfor(int i=1;i<=n;++i)scanf(\"%lld\",a+i);\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%lld\",p+i);\n\t\t\tG*=(p[i]==1);\n\t\t}\n\t\tfor(int i=1;i<=n;++i)scanf(\"%lld\",ne+i);\n\t\tfor(int i=1,b;i<=m;++i){\n\t\t\tscanf(\"%d\",&b);\n\t\t\t++M[b];\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif((M.begin()->ft)>a[i]){\n\t\t\t\tk[i]=M.begin()->ft;\n\t\t\t\t--M[M.begin()->ft];\n\t\t\t\tif((M.begin()->sd)==0)M.erase(M.begin());\n\t\t\t}else{\n\t\t\t\t++M[a[i]];\n\t\t\t\tit=M.find(a[i]);\n\t\t\t\tif((it->sd)>1){\n\t\t\t\t\tM[a[i]]-=2;\n\t\t\t\t\tk[i]=a[i];\n\t\t\t\t\tit=M.find(a[i]);\n\t\t\t\t\tif(it->sd==0)M.erase(it);\n\t\t\t\t\t++M[ne[i]];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif((it->sd)==1)--it;\n\t\t\t\t--M[a[i]];\n\t\t\t\tk[i]=it->ft;\n\t\t\t\t--M[it->ft];\n\t\t\t\tif((it->sd)==0)M.erase(it);\n\t\t\t\tit=M.find(a[i]);\n\t\t\t\tif(it->sd==0)M.erase(it);\n\t\t\t}\n\t\t\t++M[ne[i]];\n\t\t}\n\t\tprintf(\"%lld\\n\",work());\n\t}\n\treturn 0;\n}\n\n```","source":"_posts/noi18d.md","raw":"---\ntitle: NOI2018屠龙勇士(dragon)\ntop: 1\nmathjax: true\ndate: 2018-07-22 19:51:21\ntags:\n\t- 数论\n\t- CRT\n---\n好吧[这道题](https://judge-duck.online:10086/problem/noi18d)其实是道CRT裸题……\n\n首先哪条龙选哪把剑是固定的。拿个set(multiset)/map扫一遍即可。~~当然也可以自己写平衡树啊2333~~\n\n然后就是若干 $$ k_{i}x \\equiv a_i (mod\\;p_i) $$\n\n可以讲整个柿子中的$$ k_i,a_i,p_i $$同除$$gcd(k_i,p_i)$$(如果$$a_i$$无法整除就无解了)，这肯定对答案是无影响的。\n然后，江柿子两边同除$$k_i$$(已经有逆元了)，变为$$n$$个形为$$x \\equiv a_i/k_i(mod\\;p_i)$$的柿子\n这就成了裸的CRT了。\n对于一个CRT，\n\n$$ \\begin{equation}\n\\begin{cases}\nx \\equiv a_1(mod\\;p_1) \\\\\nx \\equiv a_2(mod\\;p_2) \\\\\ngcd(p_1,p_2) = d\n\\end{cases}\n\\end{equation} $$\n\n可得 \n\n$$x \\equiv p_1*(a_2-a_1)*(p_1/d)^{-1}/d+a_1(mod\\;n_1n_2/d) $$\n\n于是扫一遍就能A了。\n注意爆long long，要写慢速乘\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 200005\n#define ft first\n#define sd second\n\nlg a[MN],p[MN],k[MN],ne[MN];\n\nint n,m;lg Ep1,Ep2,G,Q;\n\nmap<lg,int> M;\nmap<lg,int>::iterator it;\n\nlg gcd(lg A,lg B){\n\treturn B==0?A:gcd(B,A%B);\n}\n\nvoid exgcd(lg x,lg y,lg& a,lg& b){\n\tif(y==0)a=1,b=0;\n\telse exgcd(y,x%y,b,a),b-=x/y*a;\n}\nlg inv(lg x,lg y){\n\tlg A,B;\n\texgcd(x,y,A,B);\n\treturn (A%y+y)%y;\n}\n\nlg Qx(lg x,lg y,lg md){\n\tlg res=0,f=1;\n\tif(x<0)x=-x,f=-f;\n\tif(y<0)y=-y,f=-f;\n\tfor(;y;y>>=1,x=(x+x)%md)if(y&1)res=(res+x)%md;\n\tres*=f;res%=md;res+=md;res%=md;\n\treturn res;\n}\n\nlg work(){\n\tlg F=1;\n\tfor(int i=1;i<=n;++i){\n\t\tint H=gcd(k[i],p[i]);\n\t\tif(a[i]%H)return -1;\n\t\tk[i]/=H,p[i]/=H,a[i]/=H;\n\t}\n\t//for(int i=1;i<=n;++i)cout<<k[i]<<endl;\n\tfor(int i=1;i<=n;++i){\n\t\tF=max(F,(a[i]-1)/k[i]+1);\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\ta[i]-=F*k[i];\n\t\ta[i]%=p[i];\n\t\ta[i]+=p[i];\n\t\ta[i]%=p[i];\n\t}\n\tif(G==1){\n\t\treturn F;\n\t}\n\tfor(int i=1;i<=n;++i){\n\t\tlg H=gcd(k[i],p[i]);\n\t\ta[i]=Qx(a[i],inv(k[i],p[i]),p[i]);\n\t}\n\tlg np=p[1],na=a[1];\n\tfor(int i=2;i<=n;++i){\n\t\tlg E=gcd(np,p[i]),HH=p[i]/E,QQ=HH*np;\n\t\t//assert(QQ>=0);\n\t\tif((a[i]-na)%E)return -2;\n\t\texgcd(np,p[i],Ep1,Ep2);\n\t\tEp1=Qx(Ep1,(a[i]-na)/E,HH);\n\t\tna+=Qx(np,Ep1,QQ);\n\t\tna%=QQ;\t\n\t\tnp=QQ;\n\t}\n\treturn F+na;\n}\n\nint main(){\n    freopen(\"dragon.in\",\"r\",stdin);\n\tfreopen(\"dragon.out\",\"w\",stdout);\n\tint T;\n\tscanf(\"%d\",&T);\n\twhile(T--){\n\t\tscanf(\"%d%d\",&n,&m);M.clear();G=1;\n\t\tfor(int i=1;i<=n;++i)scanf(\"%lld\",a+i);\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tscanf(\"%lld\",p+i);\n\t\t\tG*=(p[i]==1);\n\t\t}\n\t\tfor(int i=1;i<=n;++i)scanf(\"%lld\",ne+i);\n\t\tfor(int i=1,b;i<=m;++i){\n\t\t\tscanf(\"%d\",&b);\n\t\t\t++M[b];\n\t\t}\n\t\tfor(int i=1;i<=n;++i){\n\t\t\tif((M.begin()->ft)>a[i]){\n\t\t\t\tk[i]=M.begin()->ft;\n\t\t\t\t--M[M.begin()->ft];\n\t\t\t\tif((M.begin()->sd)==0)M.erase(M.begin());\n\t\t\t}else{\n\t\t\t\t++M[a[i]];\n\t\t\t\tit=M.find(a[i]);\n\t\t\t\tif((it->sd)>1){\n\t\t\t\t\tM[a[i]]-=2;\n\t\t\t\t\tk[i]=a[i];\n\t\t\t\t\tit=M.find(a[i]);\n\t\t\t\t\tif(it->sd==0)M.erase(it);\n\t\t\t\t\t++M[ne[i]];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif((it->sd)==1)--it;\n\t\t\t\t--M[a[i]];\n\t\t\t\tk[i]=it->ft;\n\t\t\t\t--M[it->ft];\n\t\t\t\tif((it->sd)==0)M.erase(it);\n\t\t\t\tit=M.find(a[i]);\n\t\t\t\tif(it->sd==0)M.erase(it);\n\t\t\t}\n\t\t\t++M[ne[i]];\n\t\t}\n\t\tprintf(\"%lld\\n\",work());\n\t}\n\treturn 0;\n}\n\n```","slug":"noi18d","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwka000kinjxqduezji1","content":"<p>好吧<a href=\"https://judge-duck.online:10086/problem/noi18d\" target=\"_blank\" rel=\"noopener\">这道题</a>其实是道CRT裸题……</p>\n<p>首先哪条龙选哪把剑是固定的。拿个set(multiset)/map扫一遍即可。<del>当然也可以自己写平衡树啊2333</del></p>\n<p>然后就是若干 <script type=\"math/tex\">k_{i}x \\equiv a_i (mod\\;p_i)</script></p>\n<p>可以讲整个柿子中的<script type=\"math/tex\">k_i,a_i,p_i</script>同除<script type=\"math/tex\">gcd(k_i,p_i)</script>(如果<script type=\"math/tex\">a_i</script>无法整除就无解了)，这肯定对答案是无影响的。<br>然后，江柿子两边同除<script type=\"math/tex\">k_i</script>(已经有逆元了)，变为<script type=\"math/tex\">n</script>个形为<script type=\"math/tex\">x \\equiv a_i/k_i(mod\\;p_i)</script>的柿子<br>这就成了裸的CRT了。<br>对于一个CRT，</p>\n<script type=\"math/tex; mode=display\">\\begin{equation}\n\\begin{cases}\nx \\equiv a_1(mod\\;p_1) \\\\\nx \\equiv a_2(mod\\;p_2) \\\\\ngcd(p_1,p_2) = d\n\\end{cases}\n\\end{equation}</script><p>可得 </p>\n<script type=\"math/tex; mode=display\">x \\equiv p_1*(a_2-a_1)*(p_1/d)^{-1}/d+a_1(mod\\;n_1n_2/d)</script><p>于是扫一遍就能A了。<br>注意爆long long，要写慢速乘<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\">lg a[MN],p[MN],k[MN],ne[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;lg Ep1,Ep2,G,Q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;lg,<span class=\"keyword\">int</span>&gt; M;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;lg,<span class=\"keyword\">int</span>&gt;::iterator it;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">gcd</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> B==<span class=\"number\">0</span>?A:gcd(B,A%B);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exgcd</span><span class=\"params\">(lg x,lg y,lg&amp; a,lg&amp; b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(y==<span class=\"number\">0</span>)a=<span class=\"number\">1</span>,b=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> exgcd(y,x%y,b,a),b-=x/y*a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">inv</span><span class=\"params\">(lg x,lg y)</span></span>&#123;</span><br><span class=\"line\">\tlg A,B;</span><br><span class=\"line\">\texgcd(x,y,A,B);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (A%y+y)%y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Qx</span><span class=\"params\">(lg x,lg y,lg md)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)x=-x,f=-f;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(y&lt;<span class=\"number\">0</span>)y=-y,f=-f;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;y;y&gt;&gt;=<span class=\"number\">1</span>,x=(x+x)%md)<span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)res=(res+x)%md;</span><br><span class=\"line\">\tres*=f;res%=md;res+=md;res%=md;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">work</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tlg F=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> H=gcd(k[i],p[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]%H)<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tk[i]/=H,p[i]/=H,a[i]/=H;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//for(int i=1;i&lt;=n;++i)cout&lt;&lt;k[i]&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tF=max(F,(a[i]<span class=\"number\">-1</span>)/k[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\ta[i]-=F*k[i];</span><br><span class=\"line\">\t\ta[i]%=p[i];</span><br><span class=\"line\">\t\ta[i]+=p[i];</span><br><span class=\"line\">\t\ta[i]%=p[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(G==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> F;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg H=gcd(k[i],p[i]);</span><br><span class=\"line\">\t\ta[i]=Qx(a[i],inv(k[i],p[i]),p[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlg np=p[<span class=\"number\">1</span>],na=a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg E=gcd(np,p[i]),HH=p[i]/E,QQ=HH*np;</span><br><span class=\"line\">\t\t<span class=\"comment\">//assert(QQ&gt;=0);</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((a[i]-na)%E)<span class=\"keyword\">return</span> <span class=\"number\">-2</span>;</span><br><span class=\"line\">\t\texgcd(np,p[i],Ep1,Ep2);</span><br><span class=\"line\">\t\tEp1=Qx(Ep1,(a[i]-na)/E,HH);</span><br><span class=\"line\">\t\tna+=Qx(np,Ep1,QQ);</span><br><span class=\"line\">\t\tna%=QQ;\t</span><br><span class=\"line\">\t\tnp=QQ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> F+na;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    freopen(<span class=\"string\">\"dragon.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"dragon.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);M.clear();G=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,a+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,p+i);</span><br><span class=\"line\">\t\t\tG*=(p[i]==<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,ne+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,b;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b);</span><br><span class=\"line\">\t\t\t++M[b];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((M.begin()-&gt;ft)&gt;a[i])&#123;</span><br><span class=\"line\">\t\t\t\tk[i]=M.begin()-&gt;ft;</span><br><span class=\"line\">\t\t\t\t--M[M.begin()-&gt;ft];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((M.begin()-&gt;sd)==<span class=\"number\">0</span>)M.erase(M.begin());</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t++M[a[i]];</span><br><span class=\"line\">\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tM[a[i]]-=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\t\tk[i]=a[i];</span><br><span class=\"line\">\t\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(it-&gt;sd==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t\t\t++M[ne[i]];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)==<span class=\"number\">1</span>)--it;</span><br><span class=\"line\">\t\t\t\t--M[a[i]];</span><br><span class=\"line\">\t\t\t\tk[i]=it-&gt;ft;</span><br><span class=\"line\">\t\t\t\t--M[it-&gt;ft];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(it-&gt;sd==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t++M[ne[i]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,work());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>好吧<a href=\"https://judge-duck.online:10086/problem/noi18d\" target=\"_blank\" rel=\"noopener\">这道题</a>其实是道CRT裸题……</p>\n<p>首先哪条龙选哪把剑是固定的。拿个set(multiset)/map扫一遍即可。<del>当然也可以自己写平衡树啊2333</del></p>\n<p>然后就是若干 <script type=\"math/tex\">k_{i}x \\equiv a_i (mod\\;p_i)</script></p>\n<p>可以讲整个柿子中的<script type=\"math/tex\">k_i,a_i,p_i</script>同除<script type=\"math/tex\">gcd(k_i,p_i)</script>(如果<script type=\"math/tex\">a_i</script>无法整除就无解了)，这肯定对答案是无影响的。<br>然后，江柿子两边同除<script type=\"math/tex\">k_i</script>(已经有逆元了)，变为<script type=\"math/tex\">n</script>个形为<script type=\"math/tex\">x \\equiv a_i/k_i(mod\\;p_i)</script>的柿子<br>这就成了裸的CRT了。<br>对于一个CRT，</p>\n<script type=\"math/tex; mode=display\">\\begin{equation}\n\\begin{cases}\nx \\equiv a_1(mod\\;p_1) \\\\\nx \\equiv a_2(mod\\;p_2) \\\\\ngcd(p_1,p_2) = d\n\\end{cases}\n\\end{equation}</script><p>可得 </p>\n<script type=\"math/tex; mode=display\">x \\equiv p_1*(a_2-a_1)*(p_1/d)^{-1}/d+a_1(mod\\;n_1n_2/d)</script><p>于是扫一遍就能A了。<br>注意爆long long，要写慢速乘<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 200005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"></span><br><span class=\"line\">lg a[MN],p[MN],k[MN],ne[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m;lg Ep1,Ep2,G,Q;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;lg,<span class=\"keyword\">int</span>&gt; M;</span><br><span class=\"line\"><span class=\"built_in\">map</span>&lt;lg,<span class=\"keyword\">int</span>&gt;::iterator it;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">gcd</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> B==<span class=\"number\">0</span>?A:gcd(B,A%B);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exgcd</span><span class=\"params\">(lg x,lg y,lg&amp; a,lg&amp; b)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(y==<span class=\"number\">0</span>)a=<span class=\"number\">1</span>,b=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> exgcd(y,x%y,b,a),b-=x/y*a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">inv</span><span class=\"params\">(lg x,lg y)</span></span>&#123;</span><br><span class=\"line\">\tlg A,B;</span><br><span class=\"line\">\texgcd(x,y,A,B);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (A%y+y)%y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Qx</span><span class=\"params\">(lg x,lg y,lg md)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">0</span>,f=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x&lt;<span class=\"number\">0</span>)x=-x,f=-f;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(y&lt;<span class=\"number\">0</span>)y=-y,f=-f;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;y;y&gt;&gt;=<span class=\"number\">1</span>,x=(x+x)%md)<span class=\"keyword\">if</span>(y&amp;<span class=\"number\">1</span>)res=(res+x)%md;</span><br><span class=\"line\">\tres*=f;res%=md;res+=md;res%=md;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">work</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tlg F=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> H=gcd(k[i],p[i]);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(a[i]%H)<span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">\t\tk[i]/=H,p[i]/=H,a[i]/=H;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//for(int i=1;i&lt;=n;++i)cout&lt;&lt;k[i]&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tF=max(F,(a[i]<span class=\"number\">-1</span>)/k[i]+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\ta[i]-=F*k[i];</span><br><span class=\"line\">\t\ta[i]%=p[i];</span><br><span class=\"line\">\t\ta[i]+=p[i];</span><br><span class=\"line\">\t\ta[i]%=p[i];</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(G==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> F;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg H=gcd(k[i],p[i]);</span><br><span class=\"line\">\t\ta[i]=Qx(a[i],inv(k[i],p[i]),p[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlg np=p[<span class=\"number\">1</span>],na=a[<span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg E=gcd(np,p[i]),HH=p[i]/E,QQ=HH*np;</span><br><span class=\"line\">\t\t<span class=\"comment\">//assert(QQ&gt;=0);</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>((a[i]-na)%E)<span class=\"keyword\">return</span> <span class=\"number\">-2</span>;</span><br><span class=\"line\">\t\texgcd(np,p[i],Ep1,Ep2);</span><br><span class=\"line\">\t\tEp1=Qx(Ep1,(a[i]-na)/E,HH);</span><br><span class=\"line\">\t\tna+=Qx(np,Ep1,QQ);</span><br><span class=\"line\">\t\tna%=QQ;\t</span><br><span class=\"line\">\t\tnp=QQ;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> F+na;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    freopen(<span class=\"string\">\"dragon.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"dragon.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> T;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;T);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(T--)&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d\"</span>,&amp;n,&amp;m);M.clear();G=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,a+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,p+i);</span><br><span class=\"line\">\t\t\tG*=(p[i]==<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,ne+i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,b;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;b);</span><br><span class=\"line\">\t\t\t++M[b];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>((M.begin()-&gt;ft)&gt;a[i])&#123;</span><br><span class=\"line\">\t\t\t\tk[i]=M.begin()-&gt;ft;</span><br><span class=\"line\">\t\t\t\t--M[M.begin()-&gt;ft];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((M.begin()-&gt;sd)==<span class=\"number\">0</span>)M.erase(M.begin());</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t\t++M[a[i]];</span><br><span class=\"line\">\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t\t\tM[a[i]]-=<span class=\"number\">2</span>;</span><br><span class=\"line\">\t\t\t\t\tk[i]=a[i];</span><br><span class=\"line\">\t\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span>(it-&gt;sd==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t\t\t++M[ne[i]];</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)==<span class=\"number\">1</span>)--it;</span><br><span class=\"line\">\t\t\t\t--M[a[i]];</span><br><span class=\"line\">\t\t\t\tk[i]=it-&gt;ft;</span><br><span class=\"line\">\t\t\t\t--M[it-&gt;ft];</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>((it-&gt;sd)==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t\tit=M.find(a[i]);</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(it-&gt;sd==<span class=\"number\">0</span>)M.erase(it);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t++M[ne[i]];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,work());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"多项式(1)","date":"2018-07-16T04:46:48.000Z","top":1,"mathjax":true,"_content":"\n学习了一发多项式，感觉码风得到改善\n\n包括了：\n\n### 1. 求逆\n\n$$\\large B(x)=2B_0(x)-A(x)B_0^2(x)$$\n\n### 2. 求导\n\nxjb推即可\n\n### 3. 积分\n\nxjb推即可\n\n### 4. ln\n\n$$\\large \\begin{aligned}由：\n& H(x)=G(B(x))=B'(x)*G(B(x))\\\\\n& H'(x)=G'(B(x))*B'(x)\\\\\n可得：\n& ln(B(x))=\\dfrac{1}{B(x)}*B'(x)\\end{aligned}$$\n\n### 5. exp\n\n$$\\large B(x)=B_0(x)*(1-ln(B_0(x))+A(x))$$\n\n### 6. pow\n\n$$\\large B(x)^k=e^{ln(B(x))\\times k}$$\n\n[水果沙拉(CodeChef)](https://www.codechef.com/JULY18A/problems/PFRUIT)\n\n基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 1<<19|1\n#define lsk 998244353\n\nint n,k,l;\nlg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];\nlg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];\nlg F[MN],G[MN],Res[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid FFtinit(int l){\n\tfor(int i=1;i<l;++i){\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)*(l>>1));\n\t}\n}\n\nvoid dft(lg *y,int l){\n\tfor(int i=1;i<l;++i){\n\t\tif(i<rev[i])swap(y[i],y[rev[i]]);\n\t}\n\tfor(int i=1;i<l;i<<=1){\n\t\tlg wn=pw[i];\n\t\tfor(int j=0;j<l;j+=i*2){\n\t\t\tlg w=1;\n\t\t\tfor(int k=j;k<i+j;++k){\n\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];\n\t\t\t\ty[k]=(F+T)%lsk;\n\t\t\t\ty[k+i]=(T-F)%lsk;\n\t\t\t\tif(y[k+i]<0)y[k+i]+=lsk;\n\t\t\t\tw=w*wn%lsk;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid idft(lg *y,int l){\n\treverse(y+1,y+l);\n\tdft(y,l);lg INv=Pow(l,lsk-2);\n\tfor(int i=0;i<l;++i){\n\t\ty[i]=y[i]*INv%lsk;\n\t}\n}\n\nvoid Inv(lg *y,lg *res,int d){\n\tif(d==1){\n\t\tres[0]=Pow(y[0],lsk-2);\n\t\treturn;\n\t}else{\n\t\tInv(y,res,(d+1)>>1);\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tcopy(y,y+d,Tmpinv);\n\t\tfill(Tmpinv+d,Tmpinv+l,0);\n\t\tFFtinit(l);\n\t\tdft(Tmpinv,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=((2-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}\n}\n\nvoid Der(lg *y,int d){\n\tfor(int i=0;i<d-1;++i){\n\t\ty[i]=y[i+1]*(i+1)%lsk;\n\t}\n\ty[d-1]=0;\n}\n\nvoid Int(lg *y,int d){\n\tfor(int i=d-1;i;--i){\n\t\ty[i]=y[i-1]*inv[i]%lsk;\n\t}y[0]=0;\n}\n\nvoid Ln(lg *y,lg *res,int d){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tcopy(y,y+d,res);\n\tfill(res+d,res+l,0);\n\tDer(res,d);\n\tfill(Tmpln,Tmpln+l,0);\n\tInv(y,Tmpln,d);FFtinit(l);\n\tdft(Tmpln,l);dft(res,l);\n\tfor(int i=0;i<l;++i){\n\t\tres[i]=res[i]*Tmpln[i]%lsk;\n\t}\n\tidft(res,l);\n\tInt(res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Exp(lg *y,lg *res,int d){\n\tif(d==1){\n\t\tres[0]=1;\n\t\treturn;\n\t}else{\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tExp(y,res,(d+1)>>1);\n\t\tfill(Tmpexp,Tmpexp+l,0);\n\t\tLn(res,Tmpexp,d);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tTmpexp[i]=y[i]-Tmpexp[i];\n\t\t\tif(Tmpexp[i]<0)Tmpexp[i]+=lsk;\n\t\t}\n\t\t++Tmpexp[0];\n\t\tif(Tmpexp[0]>=lsk)Tmpexp[0]-=lsk;\n\t\tFFtinit(l);\n\t\tdft(res,l);dft(Tmpexp,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}\n}\n\nvoid Pow(lg *y,lg *res,int d,lg k){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tfill(Tmppow,Tmppow+d,0);\n\tLn(y,Tmppow,d);k%=lsk;\n\tfor(int i=0;i<l;++i)Tmppow[i]=Tmppow[i]*k%lsk;\n\tExp(Tmppow,res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Func(lg u,lg *res){\n\tTmpfuc[1]=u+1;\n\tTmpfuc[0]=0;\n\tint l=1<<((int)ceil(log2((k+1)<<1)));\n\tfill(res,res+l,0);\n\tExp(Tmpfuc,res,k+2);\n\tfor(int i=0;i<=k;++i)res[i]=res[i+1];\n\tres[k+1]=0;\n\tfill(res+k+1,res+l,0);\n\tFFtinit(l);\n\tdft(res,l);\n\tfor(int i=0;i<=l;++i){\n\t\tres[i]=res[i]*Iex[i]%lsk;\n\t}\n\tidft(res,l);\n\tfill(res+k+1,res+l,0);\n\tfill(Tmpfuc,Tmpfuc+l,0);\n}\n\nvoid init(){\n\tl=1<<((int)ceil(log2((k+1)<<1)));\n\tpw[0]=1;inv[0]=inv[1]=1;\n\tfor(int i=2;i<=1<<19;++i){\n\t\tpw[i]=Pow(3,(lsk-1)/i/2);\n\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;\n\t\tassert(inv[i]);\n\t}\n\tEx[0]=1;\n\tfor(int i=1;i<=k;++i){\n\t\tEx[i]=Ex[i-1]*inv[i+1]%lsk;\n\t}\n\tInv(Ex,Iex,k+1);\n\tFFtinit(l);\n\tdft(Iex,l);\n}\n\nint main(){\n\tscanf(\"%d%*d%d\",&k,&n);\n\tinit();\n\tfill(Res,Res+l,0);Res[0]=1;\n\tfor(int i=1;i<=n;++i){\n\t\tlg a,b;int c;\n\t\tscanf(\"%lld%lld%d\",&a,&b,&c);\n\t\tfill(G,G+k+1,0);\n\t\tfill(F,F+k+1,0);\n\t\tFunc(b,G);Func(a-1,F);\n\t\tfor(int j=0;j<=k;++j){\n\t\t\tG[j]-=F[j];\n\t\t\tif(G[j]<0)G[j]+=lsk;\n\t\t}\n\t\tfill(F,F+k+1,0);\n\t\tPow(G,F,k+1,c);\n\t\tFFtinit(l);\n\t\tdft(Res,l);dft(F,l);\n\t\tfor(int j=0;j<l;++j){\n\t\t\tRes[j]=Res[j]*F[j]%lsk;\n\t\t}\n\t\tidft(Res,l);\n\t\tfill(Res+k+1,Res+l,0);\n\t}\n\tlg res=1;\n\tfor(int i=2;i<=k;++i)res=res*i%lsk;\n\tprintf(\"%lld\",res*Res[k]%lsk);\n\treturn 0;\n}\n```\n\n","source":"_posts/poly.md","raw":"---\ntitle: 多项式(1)\ndate: 2018-07-16 12:46:48\ntags:\n\t- 多项式\ntop: 1\nmathjax: true\n---\n\n学习了一发多项式，感觉码风得到改善\n\n包括了：\n\n### 1. 求逆\n\n$$\\large B(x)=2B_0(x)-A(x)B_0^2(x)$$\n\n### 2. 求导\n\nxjb推即可\n\n### 3. 积分\n\nxjb推即可\n\n### 4. ln\n\n$$\\large \\begin{aligned}由：\n& H(x)=G(B(x))=B'(x)*G(B(x))\\\\\n& H'(x)=G'(B(x))*B'(x)\\\\\n可得：\n& ln(B(x))=\\dfrac{1}{B(x)}*B'(x)\\end{aligned}$$\n\n### 5. exp\n\n$$\\large B(x)=B_0(x)*(1-ln(B_0(x))+A(x))$$\n\n### 6. pow\n\n$$\\large B(x)^k=e^{ln(B(x))\\times k}$$\n\n[水果沙拉(CodeChef)](https://www.codechef.com/JULY18A/problems/PFRUIT)\n\n基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 1<<19|1\n#define lsk 998244353\n\nint n,k,l;\nlg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];\nlg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];\nlg F[MN],G[MN],Res[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid FFtinit(int l){\n\tfor(int i=1;i<l;++i){\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)*(l>>1));\n\t}\n}\n\nvoid dft(lg *y,int l){\n\tfor(int i=1;i<l;++i){\n\t\tif(i<rev[i])swap(y[i],y[rev[i]]);\n\t}\n\tfor(int i=1;i<l;i<<=1){\n\t\tlg wn=pw[i];\n\t\tfor(int j=0;j<l;j+=i*2){\n\t\t\tlg w=1;\n\t\t\tfor(int k=j;k<i+j;++k){\n\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];\n\t\t\t\ty[k]=(F+T)%lsk;\n\t\t\t\ty[k+i]=(T-F)%lsk;\n\t\t\t\tif(y[k+i]<0)y[k+i]+=lsk;\n\t\t\t\tw=w*wn%lsk;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid idft(lg *y,int l){\n\treverse(y+1,y+l);\n\tdft(y,l);lg INv=Pow(l,lsk-2);\n\tfor(int i=0;i<l;++i){\n\t\ty[i]=y[i]*INv%lsk;\n\t}\n}\n\nvoid Inv(lg *y,lg *res,int d){\n\tif(d==1){\n\t\tres[0]=Pow(y[0],lsk-2);\n\t\treturn;\n\t}else{\n\t\tInv(y,res,(d+1)>>1);\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tcopy(y,y+d,Tmpinv);\n\t\tfill(Tmpinv+d,Tmpinv+l,0);\n\t\tFFtinit(l);\n\t\tdft(Tmpinv,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=((2-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}\n}\n\nvoid Der(lg *y,int d){\n\tfor(int i=0;i<d-1;++i){\n\t\ty[i]=y[i+1]*(i+1)%lsk;\n\t}\n\ty[d-1]=0;\n}\n\nvoid Int(lg *y,int d){\n\tfor(int i=d-1;i;--i){\n\t\ty[i]=y[i-1]*inv[i]%lsk;\n\t}y[0]=0;\n}\n\nvoid Ln(lg *y,lg *res,int d){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tcopy(y,y+d,res);\n\tfill(res+d,res+l,0);\n\tDer(res,d);\n\tfill(Tmpln,Tmpln+l,0);\n\tInv(y,Tmpln,d);FFtinit(l);\n\tdft(Tmpln,l);dft(res,l);\n\tfor(int i=0;i<l;++i){\n\t\tres[i]=res[i]*Tmpln[i]%lsk;\n\t}\n\tidft(res,l);\n\tInt(res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Exp(lg *y,lg *res,int d){\n\tif(d==1){\n\t\tres[0]=1;\n\t\treturn;\n\t}else{\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tExp(y,res,(d+1)>>1);\n\t\tfill(Tmpexp,Tmpexp+l,0);\n\t\tLn(res,Tmpexp,d);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tTmpexp[i]=y[i]-Tmpexp[i];\n\t\t\tif(Tmpexp[i]<0)Tmpexp[i]+=lsk;\n\t\t}\n\t\t++Tmpexp[0];\n\t\tif(Tmpexp[0]>=lsk)Tmpexp[0]-=lsk;\n\t\tFFtinit(l);\n\t\tdft(res,l);dft(Tmpexp,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}\n}\n\nvoid Pow(lg *y,lg *res,int d,lg k){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tfill(Tmppow,Tmppow+d,0);\n\tLn(y,Tmppow,d);k%=lsk;\n\tfor(int i=0;i<l;++i)Tmppow[i]=Tmppow[i]*k%lsk;\n\tExp(Tmppow,res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Func(lg u,lg *res){\n\tTmpfuc[1]=u+1;\n\tTmpfuc[0]=0;\n\tint l=1<<((int)ceil(log2((k+1)<<1)));\n\tfill(res,res+l,0);\n\tExp(Tmpfuc,res,k+2);\n\tfor(int i=0;i<=k;++i)res[i]=res[i+1];\n\tres[k+1]=0;\n\tfill(res+k+1,res+l,0);\n\tFFtinit(l);\n\tdft(res,l);\n\tfor(int i=0;i<=l;++i){\n\t\tres[i]=res[i]*Iex[i]%lsk;\n\t}\n\tidft(res,l);\n\tfill(res+k+1,res+l,0);\n\tfill(Tmpfuc,Tmpfuc+l,0);\n}\n\nvoid init(){\n\tl=1<<((int)ceil(log2((k+1)<<1)));\n\tpw[0]=1;inv[0]=inv[1]=1;\n\tfor(int i=2;i<=1<<19;++i){\n\t\tpw[i]=Pow(3,(lsk-1)/i/2);\n\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;\n\t\tassert(inv[i]);\n\t}\n\tEx[0]=1;\n\tfor(int i=1;i<=k;++i){\n\t\tEx[i]=Ex[i-1]*inv[i+1]%lsk;\n\t}\n\tInv(Ex,Iex,k+1);\n\tFFtinit(l);\n\tdft(Iex,l);\n}\n\nint main(){\n\tscanf(\"%d%*d%d\",&k,&n);\n\tinit();\n\tfill(Res,Res+l,0);Res[0]=1;\n\tfor(int i=1;i<=n;++i){\n\t\tlg a,b;int c;\n\t\tscanf(\"%lld%lld%d\",&a,&b,&c);\n\t\tfill(G,G+k+1,0);\n\t\tfill(F,F+k+1,0);\n\t\tFunc(b,G);Func(a-1,F);\n\t\tfor(int j=0;j<=k;++j){\n\t\t\tG[j]-=F[j];\n\t\t\tif(G[j]<0)G[j]+=lsk;\n\t\t}\n\t\tfill(F,F+k+1,0);\n\t\tPow(G,F,k+1,c);\n\t\tFFtinit(l);\n\t\tdft(Res,l);dft(F,l);\n\t\tfor(int j=0;j<l;++j){\n\t\t\tRes[j]=Res[j]*F[j]%lsk;\n\t\t}\n\t\tidft(Res,l);\n\t\tfill(Res+k+1,Res+l,0);\n\t}\n\tlg res=1;\n\tfor(int i=2;i<=k;++i)res=res*i%lsk;\n\tprintf(\"%lld\",res*Res[k]%lsk);\n\treturn 0;\n}\n```\n\n","slug":"poly","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwkc000minjx2bbiyb0m","content":"<p>学习了一发多项式，感觉码风得到改善</p>\n<p>包括了：</p>\n<h3 id=\"1-求逆\"><a href=\"#1-求逆\" class=\"headerlink\" title=\"1. 求逆\"></a>1. 求逆</h3><script type=\"math/tex; mode=display\">\\large B(x)=2B_0(x)-A(x)B_0^2(x)</script><h3 id=\"2-求导\"><a href=\"#2-求导\" class=\"headerlink\" title=\"2. 求导\"></a>2. 求导</h3><p>xjb推即可</p>\n<h3 id=\"3-积分\"><a href=\"#3-积分\" class=\"headerlink\" title=\"3. 积分\"></a>3. 积分</h3><p>xjb推即可</p>\n<h3 id=\"4-ln\"><a href=\"#4-ln\" class=\"headerlink\" title=\"4. ln\"></a>4. ln</h3><script type=\"math/tex; mode=display\">\\large \\begin{aligned}由：\n& H(x)=G(B(x))=B'(x)*G(B(x))\\\\\n& H'(x)=G'(B(x))*B'(x)\\\\\n可得：\n& ln(B(x))=\\dfrac{1}{B(x)}*B'(x)\\end{aligned}</script><h3 id=\"5-exp\"><a href=\"#5-exp\" class=\"headerlink\" title=\"5. exp\"></a>5. exp</h3><script type=\"math/tex; mode=display\">\\large B(x)=B_0(x)*(1-ln(B_0(x))+A(x))</script><h3 id=\"6-pow\"><a href=\"#6-pow\" class=\"headerlink\" title=\"6. pow\"></a>6. pow</h3><script type=\"math/tex; mode=display\">\\large B(x)^k=e^{ln(B(x))\\times k}</script><p><a href=\"https://www.codechef.com/JULY18A/problems/PFRUIT\" target=\"_blank\" rel=\"noopener\">水果沙拉(CodeChef)</a></p>\n<p>基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1&lt;&lt;19|1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,l;</span><br><span class=\"line\">lg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];</span><br><span class=\"line\">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];</span><br><span class=\"line\">lg F[MN],G[MN],Res[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FFtinit</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\trev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)*(l&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;i&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tlg wn=pw[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;j+=i*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\tlg w=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];</span><br><span class=\"line\">\t\t\t\ty[k]=(F+T)%lsk;</span><br><span class=\"line\">\t\t\t\ty[k+i]=(T-F)%lsk;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(y[k+i]&lt;<span class=\"number\">0</span>)y[k+i]+=lsk;</span><br><span class=\"line\">\t\t\t\tw=w*wn%lsk;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">idft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\treverse(y+<span class=\"number\">1</span>,y+l);</span><br><span class=\"line\">\tdft(y,l);lg INv=Pow(l,lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i]*INv%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=Pow(y[<span class=\"number\">0</span>],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tInv(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpinv);</span><br><span class=\"line\">\t\tfill(Tmpinv+d,Tmpinv+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(Tmpinv,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=((<span class=\"number\">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Der</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d<span class=\"number\">-1</span>;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i+<span class=\"number\">1</span>]*(i+<span class=\"number\">1</span>)%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ty[d<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Int</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=d<span class=\"number\">-1</span>;i;--i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i<span class=\"number\">-1</span>]*inv[i]%lsk;</span><br><span class=\"line\">\t&#125;y[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tcopy(y,y+d,res);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tDer(res,d);</span><br><span class=\"line\">\tfill(Tmpln,Tmpln+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(y,Tmpln,d);FFtinit(l);</span><br><span class=\"line\">\tdft(Tmpln,l);dft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Tmpln[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tInt(res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tExp(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpexp,Tmpexp+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tLn(res,Tmpexp,d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tTmpexp[i]=y[i]-Tmpexp[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Tmpexp[i]&lt;<span class=\"number\">0</span>)Tmpexp[i]+=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t++Tmpexp[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Tmpexp[<span class=\"number\">0</span>]&gt;=lsk)Tmpexp[<span class=\"number\">0</span>]-=lsk;</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(res,l);dft(Tmpexp,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pow</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d,lg k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(Tmppow,Tmppow+d,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(y,Tmppow,d);k%=lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class=\"line\">\tExp(Tmppow,res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Func</span><span class=\"params\">(lg u,lg *res)</span></span>&#123;</span><br><span class=\"line\">\tTmpfuc[<span class=\"number\">1</span>]=u+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tTmpfuc[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2((k+<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(res,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tExp(Tmpfuc,res,k+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=k;++i)res[i]=res[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\tres[k+<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tfill(res+k+<span class=\"number\">1</span>,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tFFtinit(l);</span><br><span class=\"line\">\tdft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Iex[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tfill(res+k+<span class=\"number\">1</span>,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tfill(Tmpfuc,Tmpfuc+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tl=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2((k+<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tpw[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;inv[<span class=\"number\">0</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\tpw[i]=Pow(<span class=\"number\">3</span>,(lsk<span class=\"number\">-1</span>)/i/<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class=\"line\">\t\tassert(inv[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tEx[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)&#123;</span><br><span class=\"line\">\t\tEx[i]=Ex[i<span class=\"number\">-1</span>]*inv[i+<span class=\"number\">1</span>]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tInv(Ex,Iex,k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\tFFtinit(l);</span><br><span class=\"line\">\tdft(Iex,l);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%*d%d\"</span>,&amp;k,&amp;n);</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tfill(Res,Res+l,<span class=\"number\">0</span>);Res[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg a,b;<span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld%d\"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class=\"line\">\t\tfill(G,G+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tfill(F,F+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFunc(b,G);Func(a<span class=\"number\">-1</span>,F);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=k;++j)&#123;</span><br><span class=\"line\">\t\t\tG[j]-=F[j];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(G[j]&lt;<span class=\"number\">0</span>)G[j]+=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfill(F,F+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tPow(G,F,k+<span class=\"number\">1</span>,c);</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(Res,l);dft(F,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;++j)&#123;</span><br><span class=\"line\">\t\t\tRes[j]=Res[j]*F[j]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(Res,l);</span><br><span class=\"line\">\t\tfill(Res+k+<span class=\"number\">1</span>,Res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=k;++i)res=res*i%lsk;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\"</span>,res*Res[k]%lsk);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>学习了一发多项式，感觉码风得到改善</p>\n<p>包括了：</p>\n<h3 id=\"1-求逆\"><a href=\"#1-求逆\" class=\"headerlink\" title=\"1. 求逆\"></a>1. 求逆</h3><script type=\"math/tex; mode=display\">\\large B(x)=2B_0(x)-A(x)B_0^2(x)</script><h3 id=\"2-求导\"><a href=\"#2-求导\" class=\"headerlink\" title=\"2. 求导\"></a>2. 求导</h3><p>xjb推即可</p>\n<h3 id=\"3-积分\"><a href=\"#3-积分\" class=\"headerlink\" title=\"3. 积分\"></a>3. 积分</h3><p>xjb推即可</p>\n<h3 id=\"4-ln\"><a href=\"#4-ln\" class=\"headerlink\" title=\"4. ln\"></a>4. ln</h3><script type=\"math/tex; mode=display\">\\large \\begin{aligned}由：\n& H(x)=G(B(x))=B'(x)*G(B(x))\\\\\n& H'(x)=G'(B(x))*B'(x)\\\\\n可得：\n& ln(B(x))=\\dfrac{1}{B(x)}*B'(x)\\end{aligned}</script><h3 id=\"5-exp\"><a href=\"#5-exp\" class=\"headerlink\" title=\"5. exp\"></a>5. exp</h3><script type=\"math/tex; mode=display\">\\large B(x)=B_0(x)*(1-ln(B_0(x))+A(x))</script><h3 id=\"6-pow\"><a href=\"#6-pow\" class=\"headerlink\" title=\"6. pow\"></a>6. pow</h3><script type=\"math/tex; mode=display\">\\large B(x)^k=e^{ln(B(x))\\times k}</script><p><a href=\"https://www.codechef.com/JULY18A/problems/PFRUIT\" target=\"_blank\" rel=\"noopener\">水果沙拉(CodeChef)</a></p>\n<p>基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1&lt;&lt;19|1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,l;</span><br><span class=\"line\">lg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];</span><br><span class=\"line\">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];</span><br><span class=\"line\">lg F[MN],G[MN],Res[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FFtinit</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\trev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)*(l&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;i&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tlg wn=pw[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;j+=i*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\tlg w=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];</span><br><span class=\"line\">\t\t\t\ty[k]=(F+T)%lsk;</span><br><span class=\"line\">\t\t\t\ty[k+i]=(T-F)%lsk;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(y[k+i]&lt;<span class=\"number\">0</span>)y[k+i]+=lsk;</span><br><span class=\"line\">\t\t\t\tw=w*wn%lsk;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">idft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\treverse(y+<span class=\"number\">1</span>,y+l);</span><br><span class=\"line\">\tdft(y,l);lg INv=Pow(l,lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i]*INv%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=Pow(y[<span class=\"number\">0</span>],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tInv(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpinv);</span><br><span class=\"line\">\t\tfill(Tmpinv+d,Tmpinv+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(Tmpinv,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=((<span class=\"number\">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Der</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d<span class=\"number\">-1</span>;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i+<span class=\"number\">1</span>]*(i+<span class=\"number\">1</span>)%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\ty[d<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Int</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=d<span class=\"number\">-1</span>;i;--i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i<span class=\"number\">-1</span>]*inv[i]%lsk;</span><br><span class=\"line\">\t&#125;y[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tcopy(y,y+d,res);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tDer(res,d);</span><br><span class=\"line\">\tfill(Tmpln,Tmpln+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(y,Tmpln,d);FFtinit(l);</span><br><span class=\"line\">\tdft(Tmpln,l);dft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Tmpln[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tInt(res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tExp(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpexp,Tmpexp+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tLn(res,Tmpexp,d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tTmpexp[i]=y[i]-Tmpexp[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Tmpexp[i]&lt;<span class=\"number\">0</span>)Tmpexp[i]+=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t++Tmpexp[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Tmpexp[<span class=\"number\">0</span>]&gt;=lsk)Tmpexp[<span class=\"number\">0</span>]-=lsk;</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(res,l);dft(Tmpexp,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pow</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d,lg k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(Tmppow,Tmppow+d,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(y,Tmppow,d);k%=lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class=\"line\">\tExp(Tmppow,res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Func</span><span class=\"params\">(lg u,lg *res)</span></span>&#123;</span><br><span class=\"line\">\tTmpfuc[<span class=\"number\">1</span>]=u+<span class=\"number\">1</span>;</span><br><span class=\"line\">\tTmpfuc[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2((k+<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(res,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tExp(Tmpfuc,res,k+<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=k;++i)res[i]=res[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">\tres[k+<span class=\"number\">1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\tfill(res+k+<span class=\"number\">1</span>,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tFFtinit(l);</span><br><span class=\"line\">\tdft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Iex[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tfill(res+k+<span class=\"number\">1</span>,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tfill(Tmpfuc,Tmpfuc+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tl=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2((k+<span class=\"number\">1</span>)&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tpw[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;inv[<span class=\"number\">0</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\tpw[i]=Pow(<span class=\"number\">3</span>,(lsk<span class=\"number\">-1</span>)/i/<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class=\"line\">\t\tassert(inv[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tEx[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=k;++i)&#123;</span><br><span class=\"line\">\t\tEx[i]=Ex[i<span class=\"number\">-1</span>]*inv[i+<span class=\"number\">1</span>]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tInv(Ex,Iex,k+<span class=\"number\">1</span>);</span><br><span class=\"line\">\tFFtinit(l);</span><br><span class=\"line\">\tdft(Iex,l);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%*d%d\"</span>,&amp;k,&amp;n);</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\tfill(Res,Res+l,<span class=\"number\">0</span>);Res[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=n;++i)&#123;</span><br><span class=\"line\">\t\tlg a,b;<span class=\"keyword\">int</span> c;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld%lld%d\"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class=\"line\">\t\tfill(G,G+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tfill(F,F+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFunc(b,G);Func(a<span class=\"number\">-1</span>,F);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;=k;++j)&#123;</span><br><span class=\"line\">\t\t\tG[j]-=F[j];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(G[j]&lt;<span class=\"number\">0</span>)G[j]+=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfill(F,F+k+<span class=\"number\">1</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tPow(G,F,k+<span class=\"number\">1</span>,c);</span><br><span class=\"line\">\t\tFFtinit(l);</span><br><span class=\"line\">\t\tdft(Res,l);dft(F,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;++j)&#123;</span><br><span class=\"line\">\t\t\tRes[j]=Res[j]*F[j]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(Res,l);</span><br><span class=\"line\">\t\tfill(Res+k+<span class=\"number\">1</span>,Res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=k;++i)res=res*i%lsk;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\"</span>,res*Res[k]%lsk);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"多项式(2)","top":1,"date":"2018-07-17T10:15:28.000Z","_content":"\n船新版本的多项式！加入了\n\n### 开根\n\n$$\\large B(x)=\\cfrac{A(x)+B_0^2(x)}{2B_0(x)}$$\n\n---\n\n只有开根……\n\n不过这样一道6合一模板题([帕秋莉的超级多项式](http://cogs.pro:8080/cogs/problem/problem.php?pid=2189))还是少见的\n\n卡常卡常卡常卡常\n\n突然开了几个register就过了\n\n\n代码：\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 1<<19|1\n#define lsk 998244353\n\nint n,k,l;\nlg pw[MN],inv[MN],rev[MN];\nlg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN],Tmpsqrt[MN],Tmpsqrt2[MN];\nlg F[MN],G[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid FFTinit(int l){\n\tfor(int i=1;i<l;++i){\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)*(l>>1));\n\t}\n}\n\nvoid dft(lg *y,int l){\n\tfor(int i=1;i<l;++i){\n\t\tif(i<rev[i])swap(y[i],y[rev[i]]);\n\t}\n\tfor(int i=1;i<l;i<<=1){\n\t\tlg wn=pw[i];\n\t\tfor(int j=0;j<l;j+=i*2){\n\t\t\tlg w=1;\n\t\t\tfor(int k=j;k<i+j;++k){\n\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];\n\t\t\t\ty[k]=(F+T)%lsk;\n\t\t\t\ty[k+i]=(T-F)%lsk;\n\t\t\t\tif(y[k+i]<0)y[k+i]+=lsk;\n\t\t\t\tw=wn*w%lsk;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid idft(lg *y,int l){\n\treverse(y+1,y+l);\n\tdft(y,l);lg INv=Pow(l,lsk-2);\n\tfor(int i=0;i<l;++i){\n\t\ty[i]=y[i]*INv%lsk;\n\t}\n}\n\nvoid Inv(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tInv(y,res,d+1>>1);\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tcopy(y,y+d,Tmpinv);\n\t\tfill(Tmpinv+d,Tmpinv+l,0);\n\t\tFFTinit(l);\n\t\tdft(Tmpinv,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=((2-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=Pow(y[0],lsk-2);\n\t\treturn;\n\t}\n}\n\nvoid Der(lg *y,int d){\n\tfor(int i=0;i<d-1;++i){\n\t\ty[i]=y[i+1]*(i+1)%lsk;\n\t}y[d-1]=0;\n}\n\nvoid Int(lg *y,int d){\n\tfor(int i=d-1;i;--i){\n\t\ty[i]=y[i-1]*inv[i]%lsk;\n\t}y[0]=0;\n}\n\nvoid Ln(lg *y,lg *res,int d){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tcopy(y,y+d,res);\n\tfill(res+d,res+l,0);\n\tDer(res,d);\n\tfill(Tmpln,Tmpln+l,0);\n\tInv(y,Tmpln,d);FFTinit(l);\n\tdft(Tmpln,l);dft(res,l);\n\tfor(int i=0;i<l;++i){\n\t\tres[i]=res[i]*Tmpln[i]%lsk;\n\t}\n\tidft(res,l);\n\tInt(res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Exp(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tExp(y,res,d+1>>1);\n\t\tfill(Tmpexp,Tmpexp+l,0);\n\t\tLn(res,Tmpexp,d);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tTmpexp[i]=y[i]-Tmpexp[i];\n\t\t\tif(Tmpexp[i]<0)Tmpexp[i]+=lsk;\n\t\t}++Tmpexp[0];\n\t\tif(Tmpexp[0]>=lsk)Tmpexp[0]-=lsk;\n\t\tFFTinit(l);\n\t\tdft(res,l);dft(Tmpexp,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=1;\n\t\treturn;\n\t}\n}\n\nvoid Pow(lg *y,lg *res,int d,lg k){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tfill(Tmppow,Tmppow+d,0);\n\tLn(y,Tmppow,d);k%=lsk;\n\tfor(int i=0;i<l;++i)Tmppow[i]=Tmppow[i]*k%lsk;\n\tExp(Tmppow,res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Sqrt(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tint l=1<<((int)ceil(log2(1<<d)));\n\t\tSqrt(y,res,(d+1)>>1);\n\t\tfill(Tmpsqrt,Tmpsqrt+l,0);\n\t\tInv(res,Tmpsqrt,d);\n\t\tfill(Tmpsqrt+d,Tmpsqrt+l,0);\n\t\tcopy(y,y+d,Tmpsqrt2);\n\t\tfill(Tmpsqrt2+d,Tmpsqrt2+l,0);\n\t\tFFTinit(l);\n\t\tdft(Tmpsqrt,l);dft(Tmpsqrt2,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]+Tmpsqrt[i]*Tmpsqrt2[i]%lsk;\n\t\t\tif(res[i]>=lsk)res[i]-=lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tres[i]=res[i]*inv[2]%lsk;\n\t\t}\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=(lg)(sqrt(y[0]));\n\t}\n}\n\nvoid init(){\n\tpw[0]=inv[0]=inv[1]=1;\n\tfor(int i=2;i<=1<<19;++i){\n\t\tpw[i]=Pow(3,(lsk-1)/i/2);\n\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;\n\t}\n}\n\nint main(){\n\tfreopen(\"polynomial.in\",\"r\",stdin);\n\tfreopen(\"polynomial.out\",\"w\",stdout);\n\tlg k;\n\tscanf(\"%d%lld\",&n,&k);\n\tinit();\n\tfor(int i=0;i<n;++i)scanf(\"%lld\",F+i);\n\tint l=1<<((int)ceil(log2(1<<n)));\n\tSqrt(F,G,n);\n\t//for(int i=0;i<n;++i)printf(\"%lld \",G[i]);\n\tfill(F,F+l,0);\n\tInv(G,F,n);\n\tfill(G,G+l,0);\n\tInt(F,n);\n\tExp(F,G,n);\n\tfill(F,F+l,0);\n\tInv(G,F,n);++F[0];\n\tfill(G,G+l,0);\n\tLn(F,G,n);++G[0];\n\tfill(F,F+l,0);\n\tPow(G,F,n,k);\n\tDer(F,n);\n\tfor(int i=0;i<n;++i)printf(\"%lld \",F[i]);\n\treturn 0;\n}\n```\n","source":"_posts/poly2.md","raw":"---\ntitle: 多项式(2)\ntop: 1\ndate: 2018-07-17 18:15:28\ntags:\n\t- 多项式\n---\n\n船新版本的多项式！加入了\n\n### 开根\n\n$$\\large B(x)=\\cfrac{A(x)+B_0^2(x)}{2B_0(x)}$$\n\n---\n\n只有开根……\n\n不过这样一道6合一模板题([帕秋莉的超级多项式](http://cogs.pro:8080/cogs/problem/problem.php?pid=2189))还是少见的\n\n卡常卡常卡常卡常\n\n突然开了几个register就过了\n\n\n代码：\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define lg long long\n#define MN 1<<19|1\n#define lsk 998244353\n\nint n,k,l;\nlg pw[MN],inv[MN],rev[MN];\nlg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN],Tmpsqrt[MN],Tmpsqrt2[MN];\nlg F[MN],G[MN];\n\nlg Pow(lg A,lg B){\n\tlg res=1;\n\tfor(;B;B>>=1,A=A*A%lsk)if(B&1)res=res*A%lsk;\n\treturn res;\n}\n\nvoid FFTinit(int l){\n\tfor(int i=1;i<l;++i){\n\t\trev[i]=(rev[i>>1]>>1)|((i&1)*(l>>1));\n\t}\n}\n\nvoid dft(lg *y,int l){\n\tfor(int i=1;i<l;++i){\n\t\tif(i<rev[i])swap(y[i],y[rev[i]]);\n\t}\n\tfor(int i=1;i<l;i<<=1){\n\t\tlg wn=pw[i];\n\t\tfor(int j=0;j<l;j+=i*2){\n\t\t\tlg w=1;\n\t\t\tfor(int k=j;k<i+j;++k){\n\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];\n\t\t\t\ty[k]=(F+T)%lsk;\n\t\t\t\ty[k+i]=(T-F)%lsk;\n\t\t\t\tif(y[k+i]<0)y[k+i]+=lsk;\n\t\t\t\tw=wn*w%lsk;\n\t\t\t}\n\t\t}\n\t}\n}\n\nvoid idft(lg *y,int l){\n\treverse(y+1,y+l);\n\tdft(y,l);lg INv=Pow(l,lsk-2);\n\tfor(int i=0;i<l;++i){\n\t\ty[i]=y[i]*INv%lsk;\n\t}\n}\n\nvoid Inv(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tInv(y,res,d+1>>1);\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tcopy(y,y+d,Tmpinv);\n\t\tfill(Tmpinv+d,Tmpinv+l,0);\n\t\tFFTinit(l);\n\t\tdft(Tmpinv,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=((2-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=Pow(y[0],lsk-2);\n\t\treturn;\n\t}\n}\n\nvoid Der(lg *y,int d){\n\tfor(int i=0;i<d-1;++i){\n\t\ty[i]=y[i+1]*(i+1)%lsk;\n\t}y[d-1]=0;\n}\n\nvoid Int(lg *y,int d){\n\tfor(int i=d-1;i;--i){\n\t\ty[i]=y[i-1]*inv[i]%lsk;\n\t}y[0]=0;\n}\n\nvoid Ln(lg *y,lg *res,int d){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tcopy(y,y+d,res);\n\tfill(res+d,res+l,0);\n\tDer(res,d);\n\tfill(Tmpln,Tmpln+l,0);\n\tInv(y,Tmpln,d);FFTinit(l);\n\tdft(Tmpln,l);dft(res,l);\n\tfor(int i=0;i<l;++i){\n\t\tres[i]=res[i]*Tmpln[i]%lsk;\n\t}\n\tidft(res,l);\n\tInt(res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Exp(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tint l=1<<((int)ceil(log2(d<<1)));\n\t\tExp(y,res,d+1>>1);\n\t\tfill(Tmpexp,Tmpexp+l,0);\n\t\tLn(res,Tmpexp,d);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tTmpexp[i]=y[i]-Tmpexp[i];\n\t\t\tif(Tmpexp[i]<0)Tmpexp[i]+=lsk;\n\t\t}++Tmpexp[0];\n\t\tif(Tmpexp[0]>=lsk)Tmpexp[0]-=lsk;\n\t\tFFTinit(l);\n\t\tdft(res,l);dft(Tmpexp,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=1;\n\t\treturn;\n\t}\n}\n\nvoid Pow(lg *y,lg *res,int d,lg k){\n\tint l=1<<((int)ceil(log2(d<<1)));\n\tfill(Tmppow,Tmppow+d,0);\n\tLn(y,Tmppow,d);k%=lsk;\n\tfor(int i=0;i<l;++i)Tmppow[i]=Tmppow[i]*k%lsk;\n\tExp(Tmppow,res,d);\n\tfill(res+d,res+l,0);\n}\n\nvoid Sqrt(lg *y,lg *res,int d){\n\tif(d!=1){\n\t\tint l=1<<((int)ceil(log2(1<<d)));\n\t\tSqrt(y,res,(d+1)>>1);\n\t\tfill(Tmpsqrt,Tmpsqrt+l,0);\n\t\tInv(res,Tmpsqrt,d);\n\t\tfill(Tmpsqrt+d,Tmpsqrt+l,0);\n\t\tcopy(y,y+d,Tmpsqrt2);\n\t\tfill(Tmpsqrt2+d,Tmpsqrt2+l,0);\n\t\tFFTinit(l);\n\t\tdft(Tmpsqrt,l);dft(Tmpsqrt2,l);dft(res,l);\n\t\tfor(int i=0;i<l;++i){\n\t\t\tres[i]=res[i]+Tmpsqrt[i]*Tmpsqrt2[i]%lsk;\n\t\t\tif(res[i]>=lsk)res[i]-=lsk;\n\t\t}\n\t\tidft(res,l);\n\t\tfor(int i=0;i<d;++i){\n\t\t\tres[i]=res[i]*inv[2]%lsk;\n\t\t}\n\t\tfill(res+d,res+l,0);\n\t}else{\n\t\tres[0]=(lg)(sqrt(y[0]));\n\t}\n}\n\nvoid init(){\n\tpw[0]=inv[0]=inv[1]=1;\n\tfor(int i=2;i<=1<<19;++i){\n\t\tpw[i]=Pow(3,(lsk-1)/i/2);\n\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;\n\t}\n}\n\nint main(){\n\tfreopen(\"polynomial.in\",\"r\",stdin);\n\tfreopen(\"polynomial.out\",\"w\",stdout);\n\tlg k;\n\tscanf(\"%d%lld\",&n,&k);\n\tinit();\n\tfor(int i=0;i<n;++i)scanf(\"%lld\",F+i);\n\tint l=1<<((int)ceil(log2(1<<n)));\n\tSqrt(F,G,n);\n\t//for(int i=0;i<n;++i)printf(\"%lld \",G[i]);\n\tfill(F,F+l,0);\n\tInv(G,F,n);\n\tfill(G,G+l,0);\n\tInt(F,n);\n\tExp(F,G,n);\n\tfill(F,F+l,0);\n\tInv(G,F,n);++F[0];\n\tfill(G,G+l,0);\n\tLn(F,G,n);++G[0];\n\tfill(F,F+l,0);\n\tPow(G,F,n,k);\n\tDer(F,n);\n\tfor(int i=0;i<n;++i)printf(\"%lld \",F[i]);\n\treturn 0;\n}\n```\n","slug":"poly2","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwkf000oinjx8c8cfhyi","content":"<p>船新版本的多项式！加入了</p>\n<h3 id=\"开根\"><a href=\"#开根\" class=\"headerlink\" title=\"开根\"></a>开根</h3><script type=\"math/tex; mode=display\">\\large B(x)=\\cfrac{A(x)+B_0^2(x)}{2B_0(x)}</script><hr>\n<p>只有开根……</p>\n<p>不过这样一道6合一模板题(<a href=\"http://cogs.pro:8080/cogs/problem/problem.php?pid=2189\" target=\"_blank\" rel=\"noopener\">帕秋莉的超级多项式</a>)还是少见的</p>\n<p>卡常卡常卡常卡常</p>\n<p>突然开了几个register就过了</p>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1&lt;&lt;19|1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,l;</span><br><span class=\"line\">lg pw[MN],inv[MN],rev[MN];</span><br><span class=\"line\">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN],Tmpsqrt[MN],Tmpsqrt2[MN];</span><br><span class=\"line\">lg F[MN],G[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FFTinit</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\trev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)*(l&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;i&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tlg wn=pw[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;j+=i*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\tlg w=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];</span><br><span class=\"line\">\t\t\t\ty[k]=(F+T)%lsk;</span><br><span class=\"line\">\t\t\t\ty[k+i]=(T-F)%lsk;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(y[k+i]&lt;<span class=\"number\">0</span>)y[k+i]+=lsk;</span><br><span class=\"line\">\t\t\t\tw=wn*w%lsk;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">idft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\treverse(y+<span class=\"number\">1</span>,y+l);</span><br><span class=\"line\">\tdft(y,l);lg INv=Pow(l,lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i]*INv%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tInv(y,res,d+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpinv);</span><br><span class=\"line\">\t\tfill(Tmpinv+d,Tmpinv+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(Tmpinv,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=((<span class=\"number\">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=Pow(y[<span class=\"number\">0</span>],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Der</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d<span class=\"number\">-1</span>;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i+<span class=\"number\">1</span>]*(i+<span class=\"number\">1</span>)%lsk;</span><br><span class=\"line\">\t&#125;y[d<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Int</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=d<span class=\"number\">-1</span>;i;--i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i<span class=\"number\">-1</span>]*inv[i]%lsk;</span><br><span class=\"line\">\t&#125;y[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tcopy(y,y+d,res);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tDer(res,d);</span><br><span class=\"line\">\tfill(Tmpln,Tmpln+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(y,Tmpln,d);FFTinit(l);</span><br><span class=\"line\">\tdft(Tmpln,l);dft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Tmpln[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tInt(res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tExp(y,res,d+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpexp,Tmpexp+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tLn(res,Tmpexp,d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tTmpexp[i]=y[i]-Tmpexp[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Tmpexp[i]&lt;<span class=\"number\">0</span>)Tmpexp[i]+=lsk;</span><br><span class=\"line\">\t\t&#125;++Tmpexp[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Tmpexp[<span class=\"number\">0</span>]&gt;=lsk)Tmpexp[<span class=\"number\">0</span>]-=lsk;</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(res,l);dft(Tmpexp,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pow</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d,lg k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(Tmppow,Tmppow+d,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(y,Tmppow,d);k%=lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class=\"line\">\tExp(Tmppow,res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Sqrt</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(<span class=\"number\">1</span>&lt;&lt;d)));</span><br><span class=\"line\">\t\tSqrt(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpsqrt,Tmpsqrt+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tInv(res,Tmpsqrt,d);</span><br><span class=\"line\">\t\tfill(Tmpsqrt+d,Tmpsqrt+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpsqrt2);</span><br><span class=\"line\">\t\tfill(Tmpsqrt2+d,Tmpsqrt2+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(Tmpsqrt,l);dft(Tmpsqrt2,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]+Tmpsqrt[i]*Tmpsqrt2[i]%lsk;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(res[i]&gt;=lsk)res[i]-=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*inv[<span class=\"number\">2</span>]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=(lg)(<span class=\"built_in\">sqrt</span>(y[<span class=\"number\">0</span>]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpw[<span class=\"number\">0</span>]=inv[<span class=\"number\">0</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\tpw[i]=Pow(<span class=\"number\">3</span>,(lsk<span class=\"number\">-1</span>)/i/<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"polynomial.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"polynomial.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\tlg k;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%lld\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,F+i);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(<span class=\"number\">1</span>&lt;&lt;n)));</span><br><span class=\"line\">\tSqrt(F,G,n);</span><br><span class=\"line\">\t<span class=\"comment\">//for(int i=0;i&lt;n;++i)printf(\"%lld \",G[i]);</span></span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(G,F,n);</span><br><span class=\"line\">\tfill(G,G+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInt(F,n);</span><br><span class=\"line\">\tExp(F,G,n);</span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(G,F,n);++F[<span class=\"number\">0</span>];</span><br><span class=\"line\">\tfill(G,G+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(F,G,n);++G[<span class=\"number\">0</span>];</span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tPow(G,F,n,k);</span><br><span class=\"line\">\tDer(F,n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld \"</span>,F[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>船新版本的多项式！加入了</p>\n<h3 id=\"开根\"><a href=\"#开根\" class=\"headerlink\" title=\"开根\"></a>开根</h3><script type=\"math/tex; mode=display\">\\large B(x)=\\cfrac{A(x)+B_0^2(x)}{2B_0(x)}</script><hr>\n<p>只有开根……</p>\n<p>不过这样一道6合一模板题(<a href=\"http://cogs.pro:8080/cogs/problem/problem.php?pid=2189\" target=\"_blank\" rel=\"noopener\">帕秋莉的超级多项式</a>)还是少见的</p>\n<p>卡常卡常卡常卡常</p>\n<p>突然开了几个register就过了</p>\n<p>代码：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 1&lt;&lt;19|1</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lsk 998244353</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,k,l;</span><br><span class=\"line\">lg pw[MN],inv[MN],rev[MN];</span><br><span class=\"line\">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN],Tmpsqrt[MN],Tmpsqrt2[MN];</span><br><span class=\"line\">lg F[MN],G[MN];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">Pow</span><span class=\"params\">(lg A,lg B)</span></span>&#123;</span><br><span class=\"line\">\tlg res=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;B;B&gt;&gt;=<span class=\"number\">1</span>,A=A*A%lsk)<span class=\"keyword\">if</span>(B&amp;<span class=\"number\">1</span>)res=res*A%lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">FFTinit</span><span class=\"params\">(<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\trev[i]=(rev[i&gt;&gt;<span class=\"number\">1</span>]&gt;&gt;<span class=\"number\">1</span>)|((i&amp;<span class=\"number\">1</span>)*(l&gt;&gt;<span class=\"number\">1</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;l;i&lt;&lt;=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tlg wn=pw[i];</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j=<span class=\"number\">0</span>;j&lt;l;j+=i*<span class=\"number\">2</span>)&#123;</span><br><span class=\"line\">\t\t\tlg w=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class=\"line\">\t\t\t\tlg F=y[k+i]*w%lsk,T=y[k];</span><br><span class=\"line\">\t\t\t\ty[k]=(F+T)%lsk;</span><br><span class=\"line\">\t\t\t\ty[k+i]=(T-F)%lsk;</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span>(y[k+i]&lt;<span class=\"number\">0</span>)y[k+i]+=lsk;</span><br><span class=\"line\">\t\t\t\tw=wn*w%lsk;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">idft</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> l)</span></span>&#123;</span><br><span class=\"line\">\treverse(y+<span class=\"number\">1</span>,y+l);</span><br><span class=\"line\">\tdft(y,l);lg INv=Pow(l,lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i]*INv%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Inv</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tInv(y,res,d+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpinv);</span><br><span class=\"line\">\t\tfill(Tmpinv+d,Tmpinv+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(Tmpinv,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=((<span class=\"number\">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=Pow(y[<span class=\"number\">0</span>],lsk<span class=\"number\">-2</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Der</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d<span class=\"number\">-1</span>;++i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i+<span class=\"number\">1</span>]*(i+<span class=\"number\">1</span>)%lsk;</span><br><span class=\"line\">\t&#125;y[d<span class=\"number\">-1</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Int</span><span class=\"params\">(lg *y,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=d<span class=\"number\">-1</span>;i;--i)&#123;</span><br><span class=\"line\">\t\ty[i]=y[i<span class=\"number\">-1</span>]*inv[i]%lsk;</span><br><span class=\"line\">\t&#125;y[<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Ln</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tcopy(y,y+d,res);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tDer(res,d);</span><br><span class=\"line\">\tfill(Tmpln,Tmpln+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(y,Tmpln,d);FFTinit(l);</span><br><span class=\"line\">\tdft(Tmpln,l);dft(res,l);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\tres[i]=res[i]*Tmpln[i]%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tidft(res,l);</span><br><span class=\"line\">\tInt(res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Exp</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\t\tExp(y,res,d+<span class=\"number\">1</span>&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpexp,Tmpexp+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tLn(res,Tmpexp,d);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tTmpexp[i]=y[i]-Tmpexp[i];</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(Tmpexp[i]&lt;<span class=\"number\">0</span>)Tmpexp[i]+=lsk;</span><br><span class=\"line\">\t\t&#125;++Tmpexp[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(Tmpexp[<span class=\"number\">0</span>]&gt;=lsk)Tmpexp[<span class=\"number\">0</span>]-=lsk;</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(res,l);dft(Tmpexp,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Pow</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d,lg k)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(d&lt;&lt;<span class=\"number\">1</span>)));</span><br><span class=\"line\">\tfill(Tmppow,Tmppow+d,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(y,Tmppow,d);k%=lsk;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class=\"line\">\tExp(Tmppow,res,d);</span><br><span class=\"line\">\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Sqrt</span><span class=\"params\">(lg *y,lg *res,<span class=\"keyword\">int</span> d)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(d!=<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(<span class=\"number\">1</span>&lt;&lt;d)));</span><br><span class=\"line\">\t\tSqrt(y,res,(d+<span class=\"number\">1</span>)&gt;&gt;<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tfill(Tmpsqrt,Tmpsqrt+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tInv(res,Tmpsqrt,d);</span><br><span class=\"line\">\t\tfill(Tmpsqrt+d,Tmpsqrt+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tcopy(y,y+d,Tmpsqrt2);</span><br><span class=\"line\">\t\tfill(Tmpsqrt2+d,Tmpsqrt2+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t\tFFTinit(l);</span><br><span class=\"line\">\t\tdft(Tmpsqrt,l);dft(Tmpsqrt2,l);dft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;l;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]+Tmpsqrt[i]*Tmpsqrt2[i]%lsk;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(res[i]&gt;=lsk)res[i]-=lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tidft(res,l);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;d;++i)&#123;</span><br><span class=\"line\">\t\t\tres[i]=res[i]*inv[<span class=\"number\">2</span>]%lsk;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tfill(res+d,res+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\tres[<span class=\"number\">0</span>]=(lg)(<span class=\"built_in\">sqrt</span>(y[<span class=\"number\">0</span>]));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tpw[<span class=\"number\">0</span>]=inv[<span class=\"number\">0</span>]=inv[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">2</span>;i&lt;=<span class=\"number\">1</span>&lt;&lt;<span class=\"number\">19</span>;++i)&#123;</span><br><span class=\"line\">\t\tpw[i]=Pow(<span class=\"number\">3</span>,(lsk<span class=\"number\">-1</span>)/i/<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tinv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"polynomial.in\"</span>,<span class=\"string\">\"r\"</span>,<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">\tfreopen(<span class=\"string\">\"polynomial.out\"</span>,<span class=\"string\">\"w\"</span>,<span class=\"built_in\">stdout</span>);</span><br><span class=\"line\">\tlg k;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%lld\"</span>,&amp;n,&amp;k);</span><br><span class=\"line\">\tinit();</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%lld\"</span>,F+i);</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> l=<span class=\"number\">1</span>&lt;&lt;((<span class=\"keyword\">int</span>)<span class=\"built_in\">ceil</span>(log2(<span class=\"number\">1</span>&lt;&lt;n)));</span><br><span class=\"line\">\tSqrt(F,G,n);</span><br><span class=\"line\">\t<span class=\"comment\">//for(int i=0;i&lt;n;++i)printf(\"%lld \",G[i]);</span></span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(G,F,n);</span><br><span class=\"line\">\tfill(G,G+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInt(F,n);</span><br><span class=\"line\">\tExp(F,G,n);</span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tInv(G,F,n);++F[<span class=\"number\">0</span>];</span><br><span class=\"line\">\tfill(G,G+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tLn(F,G,n);++G[<span class=\"number\">0</span>];</span><br><span class=\"line\">\tfill(F,F+l,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tPow(G,F,n,k);</span><br><span class=\"line\">\tDer(F,n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;n;++i)<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld \"</span>,F[i]);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"My Todolist和重要网站","top":2,"date":"2018-07-16T05:09:41.000Z","mathjax":true,"_content":"\n由于现实问题，todolist已被删除～～～～\n\n网站：\n[谷歌代码规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/)\n","source":"_posts/todolist.md","raw":"---\ntitle: my todolist和重要网站\ntop: 2\ndate: 2018-07-16 13:09:41\ntags:\n\t- 规划\n\t\nmathjax: true\n---\n\n由于现实问题，todolist已被删除～～～～\n\n网站：\n[谷歌代码规范](http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/)\n","slug":"todolist","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwkh000pinjx28opnnbl","content":"<p>由于现实问题，todolist已被删除～～～～</p>\n<p>网站：<br><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/\" target=\"_blank\" rel=\"noopener\">谷歌代码规范</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>由于现实问题，todolist已被删除～～～～</p>\n<p>网站：<br><a href=\"http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/\" target=\"_blank\" rel=\"noopener\">谷歌代码规范</a></p>\n"},{"title":"虚树","date":"2018-07-15T18:21:10.000Z","top":1,"_content":"\n##转移重要代码\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MN 600005\n#define pil pair<int,long long>\n#define mp make_pair\n#define ft first\n#define sd second\n#define lg long long\nint n,m,K,q;\nint nex[MN],fr[MN],vi[MN];lg wi[MN];int tote;\nint tail=0,stk[MN];\nvoid add(int x,int y,lg z){\n\tnex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;\n}\nint dfc=0,dfn[MN];int dep[MN],f[20][MN];lg g[20][MN];\nvoid dfs(int x,int fa){\n\tdfn[x]=++dfc;for(int i=1;i<=19;++i)f[i][x]=f[i-1][f[i-1][x]],g[i][x]=min(g[i-1][x],g[i-1][f[i-1][x]]);\n\tfor(int i=fr[x];i;i=nex[i])if(vi[i]!=fa){\n\t\tf[0][vi[i]]=x;g[0][vi[i]]=wi[i];dep[vi[i]]=dep[x]+1;dfs(vi[i],x);\n\t}\n}\npil Lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tif(x==y)return mp(x,0);\n\tlg res=0x3f3f3f3f3f3f3f3f;\n\tfor(int i=19;~i;--i){\n\t\tif(dep[f[i][x]]>=dep[y]){\n\t\t\tres=min(res,g[i][x]);\n\t\t\tx=f[i][x];\n\t\t}\n\t}if(x==y) return mp(x,res);\n\tfor(int i=19;~i;--i){\n\t\tif(f[i][x]!=f[i][y]){\n\t\t\tres=min(res,min(g[i][x],g[i][y]));\n\t\t\tx=f[i][x];y=f[i][y];\n\t\t}\n\t}\n\treturn mp(f[0][x],min(res,min(g[0][x],g[0][y])));\n}\nint v[MN],dd[MN];\nint Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];int Tot=0;\nqueue<int> Q;\nvoid Add(int x,int y,lg z){Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;}\nbool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n}\nlg dfs2(int x,int fa){\n\tlg ans=0;\n\t// cout<<x<<' '<<fa<<endl;\n\tfor(int i=Fr[x];i;i=Nex[i])if(Vi[i]!=fa){\n\t\t// cout<<Vi[i]<<endl;\n\t\tif(dd[Vi[i]])ans+=Wi[i];else ans+=min(Wi[i],dfs2(Vi[i],x));\n\t}return ans;\n}\nvoid bt(){\n\tsort(v+1,v+m+1,cmp);Tot=0;pil L;tail=0;\n\tfor(int i=0;i<=m;++i)dd[v[i]]=1;\n\t// cout<<\"&\"<<endl;\n\tfor(int i=0;i<=m;++i){\n\t\t// cout<<i<<endl;\n\t\tif(i&&v[i]==v[i-1])continue;\n\t\t// cout<<v[i]<<' '<<v[i-1]<<endl;\n\t\tL=Lca(stk[tail],v[i]);;\n\t\twhile(tail>1){\n\t\t\tif(dep[L.ft]>dep[stk[tail]]||L.ft==stk[tail])break;\n\t\t\t// cout<<stk[tail]<<' '<<stk[tail-1]<<' '<<Lca(stk[tail],stk[tail-1]).sd<<\"&&&\"<<endl;\n\t\t\tAdd(stk[tail],stk[tail-1],Lca(stk[tail],stk[tail-1]).sd);\n\t\t\t--tail;\n\t\t}\n\t\tif(L.ft!=stk[tail])Fr[L.ft]=0,stk[++tail]=L.ft,Q.push(L.ft);\n\t\tfor(int i=0;i<=m;++i)dd[v[i]]=0;\n\t\tFr[v[i]]=0;stk[++tail]=v[i];Q.push(v[i]);\n\t}\n\t// cout<<\"@\"<<endl;\n\twhile(tail!=1)Add(stk[tail],stk[tail-1],Lca(stk[tail],stk[tail-1]).sd),--tail;\n\tprintf(\"%lld\\n\",dfs2(1,1));\n\twhile(!Q.empty()){int x=Q.front();Q.pop();dd[x]=0;}\n\t// cout<<\"^\"<<endl;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y;i<n;++i){\n\t\tlg z;\n\t\tscanf(\"%d%d%lld\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}dep[1]=1;dfs(1,1);\n\tscanf(\"%d\",&q);v[0]=1;\n\twhile(q--){\n\t\t// cout<<\"$\"<<endl;\n\t\tscanf(\"%d\",&m);\n\t\tfor(int i=1;i<=m;++i)scanf(\"%d\",v+i);\n\t\tbt();\n\t}\n\treturn 0;\n}\n\n```\n","source":"_posts/xushu.md","raw":"---\ntitle: 虚树\ndate: 2018-07-16 02:21:10\ntags: \n\t- 图论\ntop: 1\n---\n\n##转移重要代码\n\n```cpp\n#include<bits/stdc++.h>\nusing namespace std;\n#define MN 600005\n#define pil pair<int,long long>\n#define mp make_pair\n#define ft first\n#define sd second\n#define lg long long\nint n,m,K,q;\nint nex[MN],fr[MN],vi[MN];lg wi[MN];int tote;\nint tail=0,stk[MN];\nvoid add(int x,int y,lg z){\n\tnex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;\n}\nint dfc=0,dfn[MN];int dep[MN],f[20][MN];lg g[20][MN];\nvoid dfs(int x,int fa){\n\tdfn[x]=++dfc;for(int i=1;i<=19;++i)f[i][x]=f[i-1][f[i-1][x]],g[i][x]=min(g[i-1][x],g[i-1][f[i-1][x]]);\n\tfor(int i=fr[x];i;i=nex[i])if(vi[i]!=fa){\n\t\tf[0][vi[i]]=x;g[0][vi[i]]=wi[i];dep[vi[i]]=dep[x]+1;dfs(vi[i],x);\n\t}\n}\npil Lca(int x,int y){\n\tif(dep[x]<dep[y])swap(x,y);\n\tif(x==y)return mp(x,0);\n\tlg res=0x3f3f3f3f3f3f3f3f;\n\tfor(int i=19;~i;--i){\n\t\tif(dep[f[i][x]]>=dep[y]){\n\t\t\tres=min(res,g[i][x]);\n\t\t\tx=f[i][x];\n\t\t}\n\t}if(x==y) return mp(x,res);\n\tfor(int i=19;~i;--i){\n\t\tif(f[i][x]!=f[i][y]){\n\t\t\tres=min(res,min(g[i][x],g[i][y]));\n\t\t\tx=f[i][x];y=f[i][y];\n\t\t}\n\t}\n\treturn mp(f[0][x],min(res,min(g[0][x],g[0][y])));\n}\nint v[MN],dd[MN];\nint Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];int Tot=0;\nqueue<int> Q;\nvoid Add(int x,int y,lg z){Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;}\nbool cmp(int x,int y){\n\treturn dfn[x]<dfn[y];\n}\nlg dfs2(int x,int fa){\n\tlg ans=0;\n\t// cout<<x<<' '<<fa<<endl;\n\tfor(int i=Fr[x];i;i=Nex[i])if(Vi[i]!=fa){\n\t\t// cout<<Vi[i]<<endl;\n\t\tif(dd[Vi[i]])ans+=Wi[i];else ans+=min(Wi[i],dfs2(Vi[i],x));\n\t}return ans;\n}\nvoid bt(){\n\tsort(v+1,v+m+1,cmp);Tot=0;pil L;tail=0;\n\tfor(int i=0;i<=m;++i)dd[v[i]]=1;\n\t// cout<<\"&\"<<endl;\n\tfor(int i=0;i<=m;++i){\n\t\t// cout<<i<<endl;\n\t\tif(i&&v[i]==v[i-1])continue;\n\t\t// cout<<v[i]<<' '<<v[i-1]<<endl;\n\t\tL=Lca(stk[tail],v[i]);;\n\t\twhile(tail>1){\n\t\t\tif(dep[L.ft]>dep[stk[tail]]||L.ft==stk[tail])break;\n\t\t\t// cout<<stk[tail]<<' '<<stk[tail-1]<<' '<<Lca(stk[tail],stk[tail-1]).sd<<\"&&&\"<<endl;\n\t\t\tAdd(stk[tail],stk[tail-1],Lca(stk[tail],stk[tail-1]).sd);\n\t\t\t--tail;\n\t\t}\n\t\tif(L.ft!=stk[tail])Fr[L.ft]=0,stk[++tail]=L.ft,Q.push(L.ft);\n\t\tfor(int i=0;i<=m;++i)dd[v[i]]=0;\n\t\tFr[v[i]]=0;stk[++tail]=v[i];Q.push(v[i]);\n\t}\n\t// cout<<\"@\"<<endl;\n\twhile(tail!=1)Add(stk[tail],stk[tail-1],Lca(stk[tail],stk[tail-1]).sd),--tail;\n\tprintf(\"%lld\\n\",dfs2(1,1));\n\twhile(!Q.empty()){int x=Q.front();Q.pop();dd[x]=0;}\n\t// cout<<\"^\"<<endl;\n}\nint main(){\n\tscanf(\"%d\",&n);\n\tfor(int i=1,x,y;i<n;++i){\n\t\tlg z;\n\t\tscanf(\"%d%d%lld\",&x,&y,&z);\n\t\tadd(x,y,z);add(y,x,z);\n\t}dep[1]=1;dfs(1,1);\n\tscanf(\"%d\",&q);v[0]=1;\n\twhile(q--){\n\t\t// cout<<\"$\"<<endl;\n\t\tscanf(\"%d\",&m);\n\t\tfor(int i=1;i<=m;++i)scanf(\"%d\",v+i);\n\t\tbt();\n\t}\n\treturn 0;\n}\n\n```\n","slug":"xushu","published":1,"updated":"2018-09-12T05:30:32.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjn2zxwkj000rinjxfbhp0isu","content":"<h2 id=\"转移重要代码\"><a href=\"#转移重要代码\" class=\"headerlink\" title=\"转移重要代码\"></a>转移重要代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 600005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pil pair<span class=\"meta-string\">&lt;int,long long&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,K,q;</span><br><span class=\"line\"><span class=\"keyword\">int</span> nex[MN],fr[MN],vi[MN];lg wi[MN];<span class=\"keyword\">int</span> tote;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tail=<span class=\"number\">0</span>,stk[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dfc=<span class=\"number\">0</span>,dfn[MN];<span class=\"keyword\">int</span> dep[MN],f[<span class=\"number\">20</span>][MN];lg g[<span class=\"number\">20</span>][MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> fa)</span></span>&#123;</span><br><span class=\"line\">\tdfn[x]=++dfc;<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">19</span>;++i)f[i][x]=f[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][x]],g[i][x]=min(g[i<span class=\"number\">-1</span>][x],g[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][x]]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])<span class=\"keyword\">if</span>(vi[i]!=fa)&#123;</span><br><span class=\"line\">\t\tf[<span class=\"number\">0</span>][vi[i]]=x;g[<span class=\"number\">0</span>][vi[i]]=wi[i];dep[vi[i]]=dep[x]+<span class=\"number\">1</span>;dfs(vi[i],x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">pil <span class=\"title\">Lca</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)<span class=\"keyword\">return</span> mp(x,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tlg res=<span class=\"number\">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">19</span>;~i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dep[f[i][x]]&gt;=dep[y])&#123;</span><br><span class=\"line\">\t\t\tres=min(res,g[i][x]);</span><br><span class=\"line\">\t\t\tx=f[i][x];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">if</span>(x==y) <span class=\"keyword\">return</span> mp(x,res);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">19</span>;~i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f[i][x]!=f[i][y])&#123;</span><br><span class=\"line\">\t\t\tres=min(res,min(g[i][x],g[i][y]));</span><br><span class=\"line\">\t\t\tx=f[i][x];y=f[i][y];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp(f[<span class=\"number\">0</span>][x],min(res,min(g[<span class=\"number\">0</span>][x],g[<span class=\"number\">0</span>][y])));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[MN],dd[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];<span class=\"keyword\">int</span> Tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; Q;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z)</span></span>&#123;Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dfn[x]&lt;dfn[y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> fa)</span></span>&#123;</span><br><span class=\"line\">\tlg ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;x&lt;&lt;' '&lt;&lt;fa&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=Fr[x];i;i=Nex[i])<span class=\"keyword\">if</span>(Vi[i]!=fa)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;Vi[i]&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dd[Vi[i]])ans+=Wi[i];<span class=\"keyword\">else</span> ans+=min(Wi[i],dfs2(Vi[i],x));</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tsort(v+<span class=\"number\">1</span>,v+m+<span class=\"number\">1</span>,cmp);Tot=<span class=\"number\">0</span>;pil L;tail=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)dd[v[i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"&amp;\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&amp;&amp;v[i]==v[i<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;v[i]&lt;&lt;' '&lt;&lt;v[i-1]&lt;&lt;endl;</span></span><br><span class=\"line\">\t\tL=Lca(stk[tail],v[i]);;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(tail&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dep[L.ft]&gt;dep[stk[tail]]||L.ft==stk[tail])<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// cout&lt;&lt;stk[tail]&lt;&lt;' '&lt;&lt;stk[tail-1]&lt;&lt;' '&lt;&lt;Lca(stk[tail],stk[tail-1]).sd&lt;&lt;\"&amp;&amp;&amp;\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t\tAdd(stk[tail],stk[tail<span class=\"number\">-1</span>],Lca(stk[tail],stk[tail<span class=\"number\">-1</span>]).sd);</span><br><span class=\"line\">\t\t\t--tail;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.ft!=stk[tail])Fr[L.ft]=<span class=\"number\">0</span>,stk[++tail]=L.ft,Q.push(L.ft);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)dd[v[i]]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tFr[v[i]]=<span class=\"number\">0</span>;stk[++tail]=v[i];Q.push(v[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"@\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(tail!=<span class=\"number\">1</span>)Add(stk[tail],stk[tail<span class=\"number\">-1</span>],Lca(stk[tail],stk[tail<span class=\"number\">-1</span>]).sd),--tail;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,dfs2(<span class=\"number\">1</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!Q.empty())&#123;<span class=\"keyword\">int</span> x=Q.front();Q.pop();dd[x]=<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"^\"&lt;&lt;endl;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,x,y;i&lt;n;++i)&#123;</span><br><span class=\"line\">\t\tlg z;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lld\"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class=\"line\">\t\tadd(x,y,z);add(y,x,z);</span><br><span class=\"line\">\t&#125;dep[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;dfs(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;q);v[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;\"$\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,v+i);</span><br><span class=\"line\">\t\tbt();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"转移重要代码\"><a href=\"#转移重要代码\" class=\"headerlink\" title=\"转移重要代码\"></a>转移重要代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MN 600005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> pil pair<span class=\"meta-string\">&lt;int,long long&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> mp make_pair</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> ft first</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> sd second</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> lg long long</span></span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,K,q;</span><br><span class=\"line\"><span class=\"keyword\">int</span> nex[MN],fr[MN],vi[MN];lg wi[MN];<span class=\"keyword\">int</span> tote;</span><br><span class=\"line\"><span class=\"keyword\">int</span> tail=<span class=\"number\">0</span>,stk[MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z)</span></span>&#123;</span><br><span class=\"line\">\tnex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> dfc=<span class=\"number\">0</span>,dfn[MN];<span class=\"keyword\">int</span> dep[MN],f[<span class=\"number\">20</span>][MN];lg g[<span class=\"number\">20</span>][MN];</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> fa)</span></span>&#123;</span><br><span class=\"line\">\tdfn[x]=++dfc;<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">19</span>;++i)f[i][x]=f[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][x]],g[i][x]=min(g[i<span class=\"number\">-1</span>][x],g[i<span class=\"number\">-1</span>][f[i<span class=\"number\">-1</span>][x]]);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=fr[x];i;i=nex[i])<span class=\"keyword\">if</span>(vi[i]!=fa)&#123;</span><br><span class=\"line\">\t\tf[<span class=\"number\">0</span>][vi[i]]=x;g[<span class=\"number\">0</span>][vi[i]]=wi[i];dep[vi[i]]=dep[x]+<span class=\"number\">1</span>;dfs(vi[i],x);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">pil <span class=\"title\">Lca</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(x==y)<span class=\"keyword\">return</span> mp(x,<span class=\"number\">0</span>);</span><br><span class=\"line\">\tlg res=<span class=\"number\">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">19</span>;~i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dep[f[i][x]]&gt;=dep[y])&#123;</span><br><span class=\"line\">\t\t\tres=min(res,g[i][x]);</span><br><span class=\"line\">\t\t\tx=f[i][x];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">if</span>(x==y) <span class=\"keyword\">return</span> mp(x,res);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">19</span>;~i;--i)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(f[i][x]!=f[i][y])&#123;</span><br><span class=\"line\">\t\t\tres=min(res,min(g[i][x],g[i][y]));</span><br><span class=\"line\">\t\t\tx=f[i][x];y=f[i][y];</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> mp(f[<span class=\"number\">0</span>][x],min(res,min(g[<span class=\"number\">0</span>][x],g[<span class=\"number\">0</span>][y])));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">int</span> v[MN],dd[MN];</span><br><span class=\"line\"><span class=\"keyword\">int</span> Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];<span class=\"keyword\">int</span> Tot=<span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">queue</span>&lt;<span class=\"keyword\">int</span>&gt; Q;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Add</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y,lg z)</span></span>&#123;Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> y)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dfn[x]&lt;dfn[y];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">lg <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> x,<span class=\"keyword\">int</span> fa)</span></span>&#123;</span><br><span class=\"line\">\tlg ans=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;x&lt;&lt;' '&lt;&lt;fa&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=Fr[x];i;i=Nex[i])<span class=\"keyword\">if</span>(Vi[i]!=fa)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;Vi[i]&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(dd[Vi[i]])ans+=Wi[i];<span class=\"keyword\">else</span> ans+=min(Wi[i],dfs2(Vi[i],x));</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">return</span> ans;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">bt</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\tsort(v+<span class=\"number\">1</span>,v+m+<span class=\"number\">1</span>,cmp);Tot=<span class=\"number\">0</span>;pil L;tail=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)dd[v[i]]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"&amp;\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(i&amp;&amp;v[i]==v[i<span class=\"number\">-1</span>])<span class=\"keyword\">continue</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;v[i]&lt;&lt;' '&lt;&lt;v[i-1]&lt;&lt;endl;</span></span><br><span class=\"line\">\t\tL=Lca(stk[tail],v[i]);;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>(tail&gt;<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(dep[L.ft]&gt;dep[stk[tail]]||L.ft==stk[tail])<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">// cout&lt;&lt;stk[tail]&lt;&lt;' '&lt;&lt;stk[tail-1]&lt;&lt;' '&lt;&lt;Lca(stk[tail],stk[tail-1]).sd&lt;&lt;\"&amp;&amp;&amp;\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t\tAdd(stk[tail],stk[tail<span class=\"number\">-1</span>],Lca(stk[tail],stk[tail<span class=\"number\">-1</span>]).sd);</span><br><span class=\"line\">\t\t\t--tail;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(L.ft!=stk[tail])Fr[L.ft]=<span class=\"number\">0</span>,stk[++tail]=L.ft,Q.push(L.ft);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">0</span>;i&lt;=m;++i)dd[v[i]]=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t\tFr[v[i]]=<span class=\"number\">0</span>;stk[++tail]=v[i];Q.push(v[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"@\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(tail!=<span class=\"number\">1</span>)Add(stk[tail],stk[tail<span class=\"number\">-1</span>],Lca(stk[tail],stk[tail<span class=\"number\">-1</span>]).sd),--tail;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%lld\\n\"</span>,dfs2(<span class=\"number\">1</span>,<span class=\"number\">1</span>));</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(!Q.empty())&#123;<span class=\"keyword\">int</span> x=Q.front();Q.pop();dd[x]=<span class=\"number\">0</span>;&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// cout&lt;&lt;\"^\"&lt;&lt;endl;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;n);</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>,x,y;i&lt;n;++i)&#123;</span><br><span class=\"line\">\t\tlg z;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d%d%lld\"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class=\"line\">\t\tadd(x,y,z);add(y,x,z);</span><br><span class=\"line\">\t&#125;dep[<span class=\"number\">1</span>]=<span class=\"number\">1</span>;dfs(<span class=\"number\">1</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;q);v[<span class=\"number\">0</span>]=<span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(q--)&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// cout&lt;&lt;\"$\"&lt;&lt;endl;</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,&amp;m);</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i=<span class=\"number\">1</span>;i&lt;=m;++i)<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%d\"</span>,v+i);</span><br><span class=\"line\">\t\tbt();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cjn2zxwj20000injxfzzb0pro","tag_id":"cjn2zxwjb0002injxyfdq6mdf","_id":"cjn2zxwjx000binjx0ykjchot"},{"post_id":"cjn2zxwj20000injxfzzb0pro","tag_id":"cjn2zxwjq0006injx1yabnvqz","_id":"cjn2zxwjz000dinjxenuedcj8"},{"post_id":"cjn2zxwj80001injx9kvzzj4z","tag_id":"cjn2zxwju0009injxnocjs7gd","_id":"cjn2zxwka000jinjxgb3q6yfu"},{"post_id":"cjn2zxwj80001injx9kvzzj4z","tag_id":"cjn2zxwk0000einjxitv2igea","_id":"cjn2zxwkb000linjxv7lyjbss"},{"post_id":"cjn2zxwje0003injxvb9pn24c","tag_id":"cjn2zxwk8000hinjx6p5tscs2","_id":"cjn2zxwkl000sinjxej5kuvwz"},{"post_id":"cjn2zxwje0003injxvb9pn24c","tag_id":"cjn2zxwkd000ninjxnyc68jxs","_id":"cjn2zxwkm000tinjx7tz3yerw"},{"post_id":"cjn2zxwkj000rinjxfbhp0isu","tag_id":"cjn2zxwk8000hinjx6p5tscs2","_id":"cjn2zxwkn000vinjxz0xxk6ex"},{"post_id":"cjn2zxwjg0004injx1odsecas","tag_id":"cjn2zxwkj000qinjx548c37il","_id":"cjn2zxwko000xinjx5fwxmvzv"},{"post_id":"cjn2zxwjg0004injx1odsecas","tag_id":"cjn2zxwkm000uinjxf8zgtl01","_id":"cjn2zxwko000yinjxrf5dut2v"},{"post_id":"cjn2zxwjo0005injxw16fh8xt","tag_id":"cjn2zxwkn000winjx9n50lld9","_id":"cjn2zxwko0010injxw7zpim4w"},{"post_id":"cjn2zxwjr0007injx7vfkag65","tag_id":"cjn2zxwko000zinjxo4vicz9t","_id":"cjn2zxwkp0012injx2qts6i47"},{"post_id":"cjn2zxwjt0008injxwb72g6vn","tag_id":"cjn2zxwkp0011injx0sklzhy8","_id":"cjn2zxwkq0014injx9il75xaa"},{"post_id":"cjn2zxwjv000ainjxv90cxbb2","tag_id":"cjn2zxwkp0013injxp8p4fz4v","_id":"cjn2zxwkq0016injx23p3r5b7"},{"post_id":"cjn2zxwjx000cinjxxvav47xm","tag_id":"cjn2zxwkq0015injxw80wr8z1","_id":"cjn2zxwkt001ainjxyij2aj3g"},{"post_id":"cjn2zxwjx000cinjxxvav47xm","tag_id":"cjn2zxwk8000hinjx6p5tscs2","_id":"cjn2zxwku001binjxhgw04rwl"},{"post_id":"cjn2zxwjx000cinjxxvav47xm","tag_id":"cjn2zxwks0018injxjy495tlq","_id":"cjn2zxwku001dinjx4j5yz1yn"},{"post_id":"cjn2zxwk1000finjxfdw6tpr7","tag_id":"cjn2zxwkt0019injxk3vuqqy5","_id":"cjn2zxwkv001finjxzuij5q9c"},{"post_id":"cjn2zxwk1000finjxfdw6tpr7","tag_id":"cjn2zxwku001cinjxfg9hu6yz","_id":"cjn2zxwkw001ginjxjecnu2ut"},{"post_id":"cjn2zxwk6000ginjxwoytb5ju","tag_id":"cjn2zxwkv001einjx21jv6fs1","_id":"cjn2zxwky001kinjxy362ij1h"},{"post_id":"cjn2zxwk6000ginjxwoytb5ju","tag_id":"cjn2zxwk8000hinjx6p5tscs2","_id":"cjn2zxwky001linjxdu06owpb"},{"post_id":"cjn2zxwk6000ginjxwoytb5ju","tag_id":"cjn2zxwkw001iinjxbybvgz2r","_id":"cjn2zxwl0001ninjxhy9zsamv"},{"post_id":"cjn2zxwk8000iinjxvucrp990","tag_id":"cjn2zxwkv001einjx21jv6fs1","_id":"cjn2zxwl1001pinjxh8lzy1j3"},{"post_id":"cjn2zxwk8000iinjxvucrp990","tag_id":"cjn2zxwkn000winjx9n50lld9","_id":"cjn2zxwl1001qinjx3d1mod2g"},{"post_id":"cjn2zxwka000kinjxqduezji1","tag_id":"cjn2zxwkt0019injxk3vuqqy5","_id":"cjn2zxwl2001tinjxruirdhgg"},{"post_id":"cjn2zxwka000kinjxqduezji1","tag_id":"cjn2zxwl1001rinjxdl51494x","_id":"cjn2zxwl2001uinjxnnvvyqig"},{"post_id":"cjn2zxwkc000minjx2bbiyb0m","tag_id":"cjn2zxwl2001sinjxw7v9j5yj","_id":"cjn2zxwl3001winjxqxb96i7u"},{"post_id":"cjn2zxwkf000oinjx8c8cfhyi","tag_id":"cjn2zxwl2001sinjxw7v9j5yj","_id":"cjn2zxwl4001yinjxuf2y3nvv"},{"post_id":"cjn2zxwkh000pinjx28opnnbl","tag_id":"cjn2zxwl3001xinjxy446a4py","_id":"cjn2zxwl4001zinjxw7nut64a"}],"Tag":[{"name":"数列","_id":"cjn2zxwjb0002injxyfdq6mdf"},{"name":"递推式","_id":"cjn2zxwjq0006injx1yabnvqz"},{"name":"交互题","_id":"cjn2zxwju0009injxnocjs7gd"},{"name":"乱搞","_id":"cjn2zxwk0000einjxitv2igea"},{"name":"图论","_id":"cjn2zxwk8000hinjx6p5tscs2"},{"name":"最大团","_id":"cjn2zxwkd000ninjxnyc68jxs"},{"name":"试验","_id":"cjn2zxwkj000qinjx548c37il"},{"name":"math","_id":"cjn2zxwkm000uinjxf8zgtl01"},{"name":"组合数学","_id":"cjn2zxwkn000winjx9n50lld9"},{"name":"树状数组","_id":"cjn2zxwko000zinjxo4vicz9t"},{"name":"fwt","_id":"cjn2zxwkp0011injx0sklzhy8"},{"name":"字符串","_id":"cjn2zxwkp0013injxp8p4fz4v"},{"name":"数据结构","_id":"cjn2zxwkq0015injxw80wr8z1"},{"name":"lct","_id":"cjn2zxwks0018injxjy495tlq"},{"name":"数论","_id":"cjn2zxwkt0019injxk3vuqqy5"},{"name":"数论筛","_id":"cjn2zxwku001cinjxfg9hu6yz"},{"name":"NOI","_id":"cjn2zxwkv001einjx21jv6fs1"},{"name":"生成树","_id":"cjn2zxwkw001iinjxbybvgz2r"},{"name":"CRT","_id":"cjn2zxwl1001rinjxdl51494x"},{"name":"多项式","_id":"cjn2zxwl2001sinjxw7v9j5yj"},{"name":"规划","_id":"cjn2zxwl3001xinjxy446a4py"}]}}