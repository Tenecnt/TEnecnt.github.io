<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>tenecnt&#39;s blog</title>
  
  <subtitle>2333</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tenecnt.github.io/"/>
  <updated>2018-08-09T14:00:12.485Z</updated>
  <id>http://tenecnt.github.io/</id>
  
  <author>
    <name>tenecnt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>(CC 2018AugestLong)Interactive Matrix</title>
    <link href="http://tenecnt.github.io/2018/08/09/CCAugINM/"/>
    <id>http://tenecnt.github.io/2018/08/09/CCAugINM/</id>
    <published>2018-08-09T02:51:29.000Z</published>
    <updated>2018-08-09T14:00:12.485Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.codechef.com/AUG18A/problems/INMAT" target="_blank" rel="noopener">这</a>真是一道神奇的乱搞题</p><p>首先限制说明，询问次数可以达到<script type="math/tex">4n</script><br>我们发现，每次询问四个顶点，当一边的两个值都大于<script type="math/tex">V</script>时，可以除去这一边<br>如果这样走完整个矩阵，答案刚好<script type="math/tex">4n</script><br>但是这里就出现了所不能解决的情况</p><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>大</td><td></td><td></td><td>小</td></tr><tr><td>小</td><td></td><td></td><td>大</td></tr></tbody></table></div><p>这样什么都删不掉</p><p>这可如何是好？</p><p>注意到上下左右关于<script type="math/tex">V</script>的大小关系</p><p>其一定是</p><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>大</td><td>大</td><td>小</td><td>小</td></tr><tr><td>大</td><td>大</td><td>大</td><td>小</td></tr><tr><td>小</td><td>小</td><td>大</td><td>大</td></tr></tbody></table></div><p>或</p><div class="table-container"><table><thead><tr><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td>大</td><td>大</td><td>小</td><td>小</td></tr><tr><td>大</td><td>大</td><td>小</td><td>小</td></tr><tr><td>小</td><td>小</td><td>小</td><td>大</td></tr></tbody></table></div><p>这类的情况</p><p>也就是说，“大”与“小”分别占据角上一部分，并且扩展方向是单调的</p><p>这时爆扫边界，复杂度就是两条边界的长度，但确定边界开始位置时，要爆扫一边，所以最坏情况下要<script type="math/tex">6n</script></p><p>我码完后才发现这有点假了<del>其实本来发现不了的，但交题时网炸了，菊花转不出，这时复杂度一分析好像不对</del>，但顺手还是交了一发（毕竟写完了嘛），然后。。。</p><h1 id="过了！"><a href="#过了！" class="headerlink" title="过了！"></a>过了！</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 1005</span></span><br><span class="line"><span class="keyword">int</span> V;</span><br><span class="line"><span class="keyword">int</span> a[MN][MN];</span><br><span class="line"><span class="keyword">int</span> b[MN],c[MN];</span><br><span class="line"><span class="keyword">int</span> k=<span class="number">0</span>,K;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Qry</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a[x][y])<span class="keyword">return</span> a[x][y];</span><br><span class="line">++k;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"1 %d %d\n"</span>,x,y);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="keyword">int</span> res;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;res);</span><br><span class="line"><span class="keyword">if</span>(res==V)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"2 %d %d\n"</span>,x,y);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(k==K)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"2 -1 -1"</span>);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> a[x][y]=res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Rin</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> d,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> Vul=Qry(u,l);</span><br><span class="line"><span class="keyword">int</span> Vdl=Qry(d,l);</span><br><span class="line"><span class="keyword">int</span> Vur=Qry(u,r);</span><br><span class="line"><span class="keyword">int</span> Vdr=Qry(d,r);</span><br><span class="line"><span class="keyword">if</span>(Vul&gt;V)&#123;</span><br><span class="line"><span class="keyword">int</span> x=u,y=l;</span><br><span class="line"><span class="keyword">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class="keyword">if</span>(y&gt;r)--y;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class="line">++x;</span><br><span class="line">&#125;</span><br><span class="line">x=d,y=r;</span><br><span class="line"><span class="keyword">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class="keyword">if</span>(y&lt;l)++y;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class="line">--x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> x=d,y=l;</span><br><span class="line"><span class="keyword">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)++y;<span class="keyword">if</span>(y&gt;r)--y;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)--y;</span><br><span class="line">--x;</span><br><span class="line">&#125;</span><br><span class="line">x=u,y=r;</span><br><span class="line"><span class="keyword">while</span>(x&gt;=u&amp;&amp;x&lt;=d&amp;&amp;y&gt;=l&amp;&amp;y&lt;=r)&#123;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&gt;V)--y;<span class="keyword">if</span>(y&lt;l)++y;</span><br><span class="line"><span class="keyword">while</span>(y&gt;=l&amp;&amp;y&lt;=r&amp;&amp;Qry(x,y)&lt;V)++y;</span><br><span class="line">++x;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;n,&amp;K,&amp;V);</span><br><span class="line"><span class="keyword">int</span> u=<span class="number">1</span>,l=<span class="number">1</span>,r=n,d=n;</span><br><span class="line"><span class="keyword">while</span>(u&lt;=d&amp;&amp;r&gt;=l)&#123;</span><br><span class="line"><span class="comment">//cout&lt;&lt;"ID"&lt;&lt;' '&lt;&lt;u&lt;&lt;' '&lt;&lt;d&lt;&lt;' '&lt;&lt;l&lt;&lt;' '&lt;&lt;r&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(u,r)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(u,r)&lt;V)&#123;++u;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Qry(d,l)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(d,l)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--d;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Qry(u,l)&gt;V&amp;&amp;Qry(d,l)&gt;V||Qry(u,l)&lt;V&amp;&amp;Qry(d,l)&lt;V)&#123;++l;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(Qry(u,r)&gt;V&amp;&amp;Qry(d,r)&gt;V||Qry(u,r)&lt;V&amp;&amp;Qry(d,r)&lt;V)&#123;--r;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//cout&lt;&lt;"#####"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(u&gt;d||r&lt;l)&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"2 -1 -1"</span>);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Rin(u,d,l,r);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"2 -1 -1"</span>);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.codechef.com/AUG18A/problems/INMAT&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这&lt;/a&gt;真是一道神奇的乱搞题&lt;/p&gt;
&lt;p&gt;首先限制说明，询问次数可以达到&lt;script typ
      
    
    </summary>
    
    
      <category term="交互题" scheme="http://tenecnt.github.io/tags/%E4%BA%A4%E4%BA%92%E9%A2%98/"/>
    
      <category term="乱搞" scheme="http://tenecnt.github.io/tags/%E4%B9%B1%E6%90%9E/"/>
    
  </entry>
  
  <entry>
    <title>Min_25筛</title>
    <link href="http://tenecnt.github.io/2018/07/27/min25s/"/>
    <id>http://tenecnt.github.io/2018/07/27/min25s/</id>
    <published>2018-07-27T12:35:50.000Z</published>
    <updated>2018-07-28T00:57:11.837Z</updated>
    
    <content type="html"><![CDATA[<p>这个东西续了我好长时间，并且让我意识到状态真的不太对</p><p>Min_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧</p><h3 id="大致思路是这样的："><a href="#大致思路是这样的：" class="headerlink" title="大致思路是这样的："></a>大致思路是这样的：</h3><p>首先，处理的内容大致就是积性函数<del>或者什么类似积性函数的奇怪东西</del>前缀和，复杂度大概是什么<script type="math/tex">O(n^{0.69})</script>(这个的证明真的不会)</p><p>我们假设如此一个问题：</p><script type="math/tex; mode=display">f(n) = \begin{cases}1& if\;n = 1\\g(p,e)& if\;n = y^e,\;e > 0,\;p\;is\;a\;prime \\f(x)*f(y) & if\;x*y=n,\;x\perp y \\\end{cases}</script><p>然后求<script type="math/tex">S(N)=\displaystyle\sum_{1 \leqslant j \leqslant N} f(j)</script></p><p>考虑到一个数除以其最大质因数后一定不剩大于<script type="math/tex">\sqrt{N}</script>的质因数，这是我们解决这个问题的关键。</p><p>考虑枚举因数<script type="math/tex">M</script>:</p><script type="math/tex; mode=display">\begin{aligned}& M' = M/P^{e}\;,e>0\\& P\;is\;the\;max\;prime\;factor\;of\;M\end{aligned}</script><p>根据这是个积性函数，可知：</p><script type="math/tex; mode=display">\begin{aligned}& f(N)=\sum_{M'} f(M')*(1+\sum_{F < p \leqslant N/M'} f(p))\\& F\;is\;the\;largrst\;prime\;factor\;of\;M'\;and\;p\;is\;a\;prime\end{aligned}</script><p>(这只是个大致的式子，不完全对，细节可能有问题，可能需要调整)</p><p>那么<script type="math/tex">f(M')</script>可以递归解决，问题在于求<script type="math/tex">\sum_{F < p \leqslant N/M'} f(p)</script>(自此以下<script type="math/tex">p</script>都为质数)</p><p>首先，设<script type="math/tex">h(x)=\sum_{p \leqslant x} f(p)</script>，将其转化为<script type="math/tex">h(N/M')-h(F-1)</script></p><p>那么解决了<script type="math/tex">h(x)</script>的求解就能解决问题了</p><p>对此如何处理呢？</p><p>首先，如果<script type="math/tex">p</script>不止是质数的话(将合数看做质数处理)，大部分的前缀和都能<script type="math/tex">O(1)</script>求出</p><p>例如<script type="math/tex">\sigma(n^k)</script>(n的k次的因子数)</p><p>然后考虑筛的实现</p><p>我们回想有什么筛是大家熟知的</p><p>埃拉托色尼筛？</p><p>考虑像埃拉托色尼筛一样搞</p><p>埃拉托色尼筛怎么搞的？</p><p>每个数<script type="math/tex">p</script>用来筛大于<script type="math/tex">p^2</script>的所有数</p><p>所以这里也是这样：从小到大枚举每个质数，用其对大于其平方的数的前缀和进行处理</p><p>(这里注意，要处理<script type="math/tex">h(x)</script>的数仅有<script type="math/tex">O(\sqrt{N})</script>个，为<script type="math/tex">1,2,3,...,N/3,N/2,N/1</script>)</p><p>这样就能完美筛出<script type="math/tex">h(x)</script>了</p><p>有这么几道具体题目：</p><hr><h3 id="spoj-DIVCNTK"><a href="#spoj-DIVCNTK" class="headerlink" title="spoj-DIVCNTK"></a><a href="https://www.spoj.com/problems/DIVCNTK/" target="_blank" rel="noopener">spoj-DIVCNTK</a></h3><p>这题就是求<script type="math/tex">f(n)=\displaystyle\sum_{1 \leqslant i \leqslant n}\sigma(i^k)</script></p><p>这里首先去掉1这个因数，就成了积性函数。</p><p>而<script type="math/tex">f(p)=k</script>的前缀和可以轻松求出。</p><p>直接上就好</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 4000005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg unsigned long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pri[MN],totp=<span class="number">0</span>,S;</span><br><span class="line"><span class="keyword">bool</span> vd[MN];</span><br><span class="line">lg ns[MN],tns=<span class="number">0</span>,h[MN];</span><br><span class="line"></span><br><span class="line">lg n,k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">D</span><span class="params">(lg X)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> X&lt;=S?X:tns-n/X+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">f</span><span class="params">(lg n,<span class="keyword">int</span> g)</span></span>&#123;<span class="comment">//递归求解f,f(n,g)☞n以内不包括大于pri[g]的质因数的数</span></span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">1</span>||pri[g+<span class="number">1</span>]&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">lg res=h[D(n)]-g*(k+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1l</span>l*pri[g+<span class="number">1</span>]*pri[g+<span class="number">1</span>]&lt;=n)&#123;</span><br><span class="line"><span class="keyword">int</span> p=pri[g+<span class="number">1</span>];</span><br><span class="line">lg t=n/p,e=k+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&gt;=p)res+=f(t,g+<span class="number">1</span>)*e+e+k,e+=k,t/=p;</span><br><span class="line">++g;</span><br><span class="line">&#125;<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">slv</span><span class="params">(lg n)</span></span>&#123;</span><br><span class="line">S=<span class="built_in">sqrt</span>(n);<span class="comment">//处理h(x)</span></span><br><span class="line">tns=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=S;++i)&#123;</span><br><span class="line">ns[++tns]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=S;i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tns;++i)&#123;</span><br><span class="line">h[i]=(ns[i]<span class="number">-1</span>)*(k+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> H=<span class="number">1</span>;lg up=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> P=<span class="number">1</span>;pri[P]&lt;=S;++P)&#123;</span><br><span class="line"><span class="keyword">int</span> p=pri[P];</span><br><span class="line"><span class="keyword">while</span>(ns[H]&lt;<span class="number">1l</span>l*p*p)++H;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class="line">h[i]-=h[D(ns[i]/p)]-up;</span><br><span class="line">&#125;up+=k+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f(n,<span class="number">0</span>)+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;MN;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(vd[i])<span class="keyword">continue</span>;</span><br><span class="line">pri[++totp]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();<span class="keyword">int</span> Cas;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%llu%llu"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,slv(n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="APS2"><a href="#APS2" class="headerlink" title="APS2"></a><a href="https://www.spoj.com/problems/APS2/" target="_blank" rel="noopener">APS2</a></h3><p>这题求的是最小质因数前缀和</p><p>考虑枚举最小质因数，要乘的就是最小质因数大于等于与<script type="math/tex">n</script>的数的个数</p><p>这个就可以用Min_25筛搞了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 4000005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ulg unsigned long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> pri[MN],totp=<span class="number">0</span>,S;</span><br><span class="line">ulg tp[MN];</span><br><span class="line"><span class="keyword">bool</span> vd[MN];</span><br><span class="line">ulg ns[MN],tns=<span class="number">0</span>,h[MN],d[MN];</span><br><span class="line"></span><br><span class="line">ulg n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">D</span><span class="params">(ulg X)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> X&lt;=S?X:tns-n/X+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ulg <span class="title">c</span><span class="params">(ulg n,<span class="keyword">int</span> g)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">1</span>||pri[g]&gt;n)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ulg res=d[D(n)]-d[D(pri[g]<span class="number">-1</span>)];</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class="line">ulg t=n/pri[g];</span><br><span class="line"><span class="keyword">while</span>(t&gt;=pri[g])&#123;</span><br><span class="line">res+=c(t,g+<span class="number">1</span>);</span><br><span class="line">++res;</span><br><span class="line">t/=pri[g];</span><br><span class="line">&#125;++g;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ulg <span class="title">f</span><span class="params">(ulg n,<span class="keyword">int</span> g)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n&lt;<span class="number">1</span>||pri[g]&gt;n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">ulg res=h[D(n)];</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1l</span>l*pri[g]*pri[g]&lt;=n)&#123;</span><br><span class="line">ulg t=n/pri[g];</span><br><span class="line">res+=c(t,g)*pri[g];</span><br><span class="line">++g;</span><br><span class="line">&#125;<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ulg <span class="title">slv</span><span class="params">(ulg n)</span></span>&#123;</span><br><span class="line">S=<span class="built_in">sqrt</span>(n);tns=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=S;++i)&#123;</span><br><span class="line">ns[++tns]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=S;i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(n/i&gt;S)ns[++tns]=n/i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=tns;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!(ns[i]&amp;<span class="number">1</span>))h[i]=(ns[i]+<span class="number">2</span>)/<span class="number">2</span>*(ns[i]<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">else</span> h[i]=(ns[i]<span class="number">-1</span>)/<span class="number">2</span>*(ns[i]+<span class="number">2</span>);</span><br><span class="line">d[i]=ns[i]<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> H=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">2</span>;p&lt;=S;++p)<span class="keyword">if</span>(!vd[p])&#123;</span><br><span class="line"><span class="keyword">while</span>(ns[H]&lt;<span class="number">1l</span>l*p*p)++H;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=tns;i&gt;=H;--i)&#123;</span><br><span class="line">h[i]-=(h[D(ns[i]/p)]-h[p<span class="number">-1</span>])*p;</span><br><span class="line">d[i]-=(d[D(ns[i]/p)]-d[p<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> f(n,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;MN;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(vd[i])<span class="keyword">continue</span>;</span><br><span class="line">pri[++totp]=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i+i;j&lt;MN;j+=i)vd[j]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;MN;++i)tp[i]=pri[i]+tp[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">init();<span class="keyword">int</span> Cas;</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;Cas);Cas;--Cas)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%llu\n"</span>,slv(n));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个东西续了我好长时间，并且让我意识到状态真的不太对&lt;/p&gt;
&lt;p&gt;Min_25筛这个东西，感觉对于不同题，思路上还是有些不同的，只是大致方向一致，所以也没有很多具体模板这种东西吧&lt;/p&gt;
&lt;h3 id=&quot;大致思路是这样的：&quot;&gt;&lt;a href=&quot;#大致思路是这样的：&quot; cl
      
    
    </summary>
    
    
      <category term="数论" scheme="http://tenecnt.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="数论筛" scheme="http://tenecnt.github.io/tags/%E6%95%B0%E8%AE%BA%E7%AD%9B/"/>
    
  </entry>
  
  <entry>
    <title>Stirling学习</title>
    <link href="http://tenecnt.github.io/2018/07/24/Stirling/"/>
    <id>http://tenecnt.github.io/2018/07/24/Stirling/</id>
    <published>2018-07-24T13:28:44.000Z</published>
    <updated>2018-07-29T01:01:43.693Z</updated>
    
    <content type="html"><![CDATA[<p>昨天学习了一发Stirling数<del>哒哒哒</del>，感觉很有用</p><p>首先，Stirling数<del>哒哒哒</del>分两类</p><h2 id="第一类Stirling数"><a href="#第一类Stirling数" class="headerlink" title="第一类Stirling数"></a>第一类Stirling数</h2><script type="math/tex; mode=display">\begin{bmatrix} n \\ k \end{bmatrix}</script><p>这表示第一类Stirling数<del>哒哒哒</del></p><h3 id="意义"><a href="#意义" class="headerlink" title="意义"></a>意义</h3><p>由 <script type="math/tex">n</script> 个数构成置换的方案数</p><h3 id="递推式"><a href="#递推式" class="headerlink" title="递推式"></a>递推式</h3><script type="math/tex; mode=display">\begin{bmatrix} n \\ k \end{bmatrix} = \begin{bmatrix} n-1 \\ k-1 \end{bmatrix} + (n-1)\begin{bmatrix} n-1 \\ k \end{bmatrix}</script><p>解释很简单，对于新加的<script type="math/tex">n</script>,要么单独成一个置换，要么放在某个的后面</p><h3 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h3><script type="math/tex; mode=display">x^{\overline{n}} = \sum_{k}\begin{bmatrix} n \\ k \end{bmatrix}x^{k}</script><script type="math/tex; mode=display">x^{\underline{n}} = \sum_{k}\begin{bmatrix} n \\ k \end{bmatrix}(-1)^{n-k}x^{k}</script><h2 id="第二类Stirling数"><a href="#第二类Stirling数" class="headerlink" title="第二类Stirling数"></a>第二类Stirling数</h2><script type="math/tex; mode=display">\begin{Bmatrix} n \\ k \end{Bmatrix}</script><p>这表示第二类Stirling数<del>哒哒哒</del></p><h3 id="意义-1"><a href="#意义-1" class="headerlink" title="意义"></a>意义</h3><p>由 <script type="math/tex">n</script> 个数构成集合的方案数</p><h3 id="递推式-1"><a href="#递推式-1" class="headerlink" title="递推式"></a>递推式</h3><script type="math/tex; mode=display">\begin{Bmatrix} n \\ k \end{Bmatrix} = \begin{Bmatrix} n-1 \\ k-1 \end{Bmatrix} + k\begin{Bmatrix} n-1 \\ k \end{Bmatrix}</script><p>解释很简单，对于新加的<script type="math/tex">n</script>,要么单独成一个置换，要么放在某个的后面</p><h3 id="用途-1"><a href="#用途-1" class="headerlink" title="用途"></a>用途</h3><script type="math/tex; mode=display">x^{n} = \sum_{k}\begin{Bmatrix} n \\ k \end{Bmatrix}x^{\underline{k}}</script><script type="math/tex; mode=display">x^{n} = \sum_{k}\begin{Bmatrix} n \\ k \end{Bmatrix}(-1)^{n-k}x^{\overline{k}}</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;昨天学习了一发Stirling数&lt;del&gt;哒哒哒&lt;/del&gt;，感觉很有用&lt;/p&gt;
&lt;p&gt;首先，Stirling数&lt;del&gt;哒哒哒&lt;/del&gt;分两类&lt;/p&gt;
&lt;h2 id=&quot;第一类Stirling数&quot;&gt;&lt;a href=&quot;#第一类Stirling数&quot; class=&quot;header
      
    
    </summary>
    
    
      <category term="组合数学" scheme="http://tenecnt.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>(CC JulyLong)Tom and Jerry</title>
    <link href="http://tenecnt.github.io/2018/07/24/CCJulyTom/"/>
    <id>http://tenecnt.github.io/2018/07/24/CCJulyTom/</id>
    <published>2018-07-24T11:54:37.000Z</published>
    <updated>2018-07-24T14:22:59.809Z</updated>
    
    <content type="html"><![CDATA[<p>这道题首先先猜一个结论：这是要求最大团</p><p>但是最大团怎么跑200000呢</p><p>这里有一个优越的性质：这是一个弦图</p><p>弦图有一个优秀的性质：它有一个完美消除序列</p><p>完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键点</p><p>还有一个性质：它的最大团大小就是他的最大染色数</p><p>还有一个性质：按逆完美消除序列操作贪心染色就是最优解</p><p>所以求出完美消除序列就行了</p><p>于是要用一个神奇的算法，它叫MCS</p><p>它倒过来求完美消除序列</p><p>每次取与现在已被取的点中度数最大的</p><p>弄一堆链表<del>(vector)</del>就能操作了</p><h1 id="以上所有内容，全部只会用不会证。证明？不存在的～～"><a href="#以上所有内容，全部只会用不会证。证明？不存在的～～" class="headerlink" title="以上所有内容，全部只会用不会证。证明？不存在的～～"></a>以上所有内容，全部只会用不会证。证明？不存在的～～</h1><p>留下一个<a href="https://www.codechef.com/JULY18A/problems/JERRYTOM" target="_blank" rel="noopener">好东西</a><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 400005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fr[MN],nex[MN&lt;&lt;<span class="number">1</span>],vi[MN&lt;&lt;<span class="number">1</span>],tot=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">nex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> vd[MN],d[MN];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> v,id;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Node A,Node B)&#123;</span><br><span class="line"><span class="keyword">return</span> A.v&lt;B.v||A.v==B.v&amp;&amp;A.id&lt;B.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; V[MN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(fr,<span class="number">0</span>,<span class="keyword">sizeof</span> fr);</span><br><span class="line">tot=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(vd,<span class="number">0</span>,<span class="keyword">sizeof</span> vd);</span><br><span class="line"><span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="keyword">sizeof</span> d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;++i)V[i].clear();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">clear();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,a,b;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a,&amp;b);</span><br><span class="line">add(a,b);add(b,a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">V[<span class="number">0</span>].push_back(i);</span><br><span class="line">&#125;<span class="keyword">int</span> Ms=<span class="number">0</span>;<span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">while</span>(V[Ms].size()==<span class="number">0</span>||vd[V[Ms][V[Ms].size()<span class="number">-1</span>]])&#123;</span><br><span class="line"><span class="keyword">if</span>(V[Ms].size()==<span class="number">0</span>)--Ms;</span><br><span class="line"><span class="keyword">else</span> V[Ms].pop_back();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> x=V[Ms][V[Ms].size()<span class="number">-1</span>],sz=<span class="number">1</span>;</span><br><span class="line">V[Ms].pop_back();</span><br><span class="line">vd[x]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//cout&lt;&lt;x&lt;&lt;"#"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=fr[x];i;i=nex[i])<span class="keyword">if</span>(!vd[vi[i]])&#123;</span><br><span class="line">++d[vi[i]];</span><br><span class="line">V[d[vi[i]]].push_back(vi[i]);</span><br><span class="line">Ms=max(Ms,d[vi[i]]);</span><br><span class="line"><span class="comment">//Q.push((Node)&#123;d[vi[i]],vi[i]&#125;);</span></span><br><span class="line">&#125;<span class="keyword">else</span> ++sz;</span><br><span class="line">res=max(res,sz);</span><br><span class="line"><span class="comment">//cout&lt;&lt;sz&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这道题首先先猜一个结论：这是要求最大团&lt;/p&gt;
&lt;p&gt;但是最大团怎么跑200000呢&lt;/p&gt;
&lt;p&gt;这里有一个优越的性质：这是一个弦图&lt;/p&gt;
&lt;p&gt;弦图有一个优秀的性质：它有一个完美消除序列&lt;/p&gt;
&lt;p&gt;完美消除序列是一个序列，其中每一项在所有往后的项构成的图中都是关键
      
    
    </summary>
    
    
      <category term="图论" scheme="http://tenecnt.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="最大团" scheme="http://tenecnt.github.io/tags/%E6%9C%80%E5%A4%A7%E5%9B%A2/"/>
    
  </entry>
  
  <entry>
    <title>bzoj5170(Fable)</title>
    <link href="http://tenecnt.github.io/2018/07/24/bzoj5170/"/>
    <id>http://tenecnt.github.io/2018/07/24/bzoj5170/</id>
    <published>2018-07-24T10:57:35.000Z</published>
    <updated>2018-07-24T11:53:12.369Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.lydsy.com/JudgeOnline/problem.php?id=5170" target="_blank" rel="noopener">QwQ</a>有点有趣</p><p>明显，平衡树可以秒这道题</p><p>但是总是感觉太烦了。</p><p>有没有好一点的方法呢？</p><p>如果我们考虑每一个数，如果没有向后送，向前移的位置数等于前面比它大的数，显然这可以用树状数组搞。</p><p>而剩下的数相对顺序一定排好了</p><p>所以把剩下的数sort一下填进去就好了<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lb(x) ((x)&amp;(-x))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pii pair<span class="meta-string">&lt;int,int&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> c[MN],res[MN],b[MN],n,k;</span><br><span class="line">pii a[MN];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">C</span><span class="params">(pii A,pii B)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> A.sd&lt;B.sd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qry</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>&gt; pQ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i].ft);</span><br><span class="line">a[i].sd=i;</span><br><span class="line">&#125;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)&#123;</span><br><span class="line">b[a[i].sd]=qry(a[i].sd);</span><br><span class="line">add(a[i].sd,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>(b[a[i].sd]&gt;k)res[a[i].sd-k]=a[i].ft;</span><br><span class="line"><span class="keyword">else</span> pQ.push(a[i].ft);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(!res[i])res[i]=pQ.top(),pQ.pop();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,res[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.lydsy.com/JudgeOnline/problem.php?id=5170&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;QwQ&lt;/a&gt;有点有趣&lt;/p&gt;
&lt;p&gt;明显，平衡树可以秒这道题&lt;/p&gt;
&lt;p&gt;但是总
      
    
    </summary>
    
    
      <category term="树状数组" scheme="http://tenecnt.github.io/tags/%E6%A0%91%E7%8A%B6%E6%95%B0%E7%BB%84/"/>
    
  </entry>
  
  <entry>
    <title>NOI2018屠龙勇士(dragon)</title>
    <link href="http://tenecnt.github.io/2018/07/22/noi18d/"/>
    <id>http://tenecnt.github.io/2018/07/22/noi18d/</id>
    <published>2018-07-22T11:51:21.000Z</published>
    <updated>2018-07-22T13:52:41.605Z</updated>
    
    <content type="html"><![CDATA[<p>好吧<a href="https://judge-duck.online:10086/problem/noi18d" target="_blank" rel="noopener">这道题</a>其实是道CRT裸题……</p><p>首先哪条龙选哪把剑是固定的。拿个set(multiset)/map扫一遍即可。<del>当然也可以自己写平衡树啊2333</del></p><p>然后就是若干 <script type="math/tex">k_{i}x \equiv a_i (mod\;p_i)</script></p><p>可以讲整个柿子中的<script type="math/tex">k_i,a_i,p_i</script>同除<script type="math/tex">gcd(k_i,p_i)</script>(如果<script type="math/tex">a_i</script>无法整除就无解了)，这肯定对答案是无影响的。<br>然后，江柿子两边同除<script type="math/tex">k_i</script>(已经有逆元了)，变为<script type="math/tex">n</script>个形为<script type="math/tex">x \equiv a_i/k_i(mod\;p_i)</script>的柿子<br>这就成了裸的CRT了。<br>对于一个CRT，</p><script type="math/tex; mode=display">\begin{equation}\begin{cases}x \equiv a_1(mod\;p_1) \\x \equiv a_2(mod\;p_2) \\gcd(p_1,p_2) = d\end{cases}\end{equation}</script><p>可得 </p><script type="math/tex; mode=display">x \equiv p_1*(a_2-a_1)*(p_1/d)^{-1}/d+a_1(mod\;n_1n_2/d)</script><p>于是扫一遍就能A了。<br>注意爆long long，要写慢速乘<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"></span><br><span class="line">lg a[MN],p[MN],k[MN],ne[MN];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;lg Ep1,Ep2,G,Q;</span><br><span class="line"></span><br><span class="line"><span class="built_in">map</span>&lt;lg,<span class="keyword">int</span>&gt; M;</span><br><span class="line"><span class="built_in">map</span>&lt;lg,<span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">gcd</span><span class="params">(lg A,lg B)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> B==<span class="number">0</span>?A:gcd(B,A%B);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exgcd</span><span class="params">(lg x,lg y,lg&amp; a,lg&amp; b)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(y==<span class="number">0</span>)a=<span class="number">1</span>,b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> exgcd(y,x%y,b,a),b-=x/y*a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">lg <span class="title">inv</span><span class="params">(lg x,lg y)</span></span>&#123;</span><br><span class="line">lg A,B;</span><br><span class="line">exgcd(x,y,A,B);</span><br><span class="line"><span class="keyword">return</span> (A%y+y)%y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Qx</span><span class="params">(lg x,lg y,lg md)</span></span>&#123;</span><br><span class="line">lg res=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>)x=-x,f=-f;</span><br><span class="line"><span class="keyword">if</span>(y&lt;<span class="number">0</span>)y=-y,f=-f;</span><br><span class="line"><span class="keyword">for</span>(;y;y&gt;&gt;=<span class="number">1</span>,x=(x+x)%md)<span class="keyword">if</span>(y&amp;<span class="number">1</span>)res=(res+x)%md;</span><br><span class="line">res*=f;res%=md;res+=md;res%=md;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">work</span><span class="params">()</span></span>&#123;</span><br><span class="line">lg F=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> H=gcd(k[i],p[i]);</span><br><span class="line"><span class="keyword">if</span>(a[i]%H)<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">k[i]/=H,p[i]/=H,a[i]/=H;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;++i)cout&lt;&lt;k[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">F=max(F,(a[i]<span class="number">-1</span>)/k[i]+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">a[i]-=F*k[i];</span><br><span class="line">a[i]%=p[i];</span><br><span class="line">a[i]+=p[i];</span><br><span class="line">a[i]%=p[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(G==<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> F;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">lg H=gcd(k[i],p[i]);</span><br><span class="line">a[i]=Qx(a[i],inv(k[i],p[i]),p[i]);</span><br><span class="line">&#125;</span><br><span class="line">lg np=p[<span class="number">1</span>],na=a[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;++i)&#123;</span><br><span class="line">lg E=gcd(np,p[i]),HH=p[i]/E,QQ=HH*np;</span><br><span class="line"><span class="comment">//assert(QQ&gt;=0);</span></span><br><span class="line"><span class="keyword">if</span>((a[i]-na)%E)<span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">exgcd(np,p[i],Ep1,Ep2);</span><br><span class="line">Ep1=Qx(Ep1,(a[i]-na)/E,HH);</span><br><span class="line">na+=Qx(np,Ep1,QQ);</span><br><span class="line">na%=QQ;</span><br><span class="line">np=QQ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> F+na;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    freopen(<span class="string">"dragon.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"dragon.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);M.clear();G=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,a+i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,p+i);</span><br><span class="line">G*=(p[i]==<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,ne+i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,b;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">++M[b];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>((M.begin()-&gt;ft)&gt;a[i])&#123;</span><br><span class="line">k[i]=M.begin()-&gt;ft;</span><br><span class="line">--M[M.begin()-&gt;ft];</span><br><span class="line"><span class="keyword">if</span>((M.begin()-&gt;sd)==<span class="number">0</span>)M.erase(M.begin());</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">++M[a[i]];</span><br><span class="line">it=M.find(a[i]);</span><br><span class="line"><span class="keyword">if</span>((it-&gt;sd)&gt;<span class="number">1</span>)&#123;</span><br><span class="line">M[a[i]]-=<span class="number">2</span>;</span><br><span class="line">k[i]=a[i];</span><br><span class="line">it=M.find(a[i]);</span><br><span class="line"><span class="keyword">if</span>(it-&gt;sd==<span class="number">0</span>)M.erase(it);</span><br><span class="line">++M[ne[i]];</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((it-&gt;sd)==<span class="number">1</span>)--it;</span><br><span class="line">--M[a[i]];</span><br><span class="line">k[i]=it-&gt;ft;</span><br><span class="line">--M[it-&gt;ft];</span><br><span class="line"><span class="keyword">if</span>((it-&gt;sd)==<span class="number">0</span>)M.erase(it);</span><br><span class="line">it=M.find(a[i]);</span><br><span class="line"><span class="keyword">if</span>(it-&gt;sd==<span class="number">0</span>)M.erase(it);</span><br><span class="line">&#125;</span><br><span class="line">++M[ne[i]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,work());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好吧&lt;a href=&quot;https://judge-duck.online:10086/problem/noi18d&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这道题&lt;/a&gt;其实是道CRT裸题……&lt;/p&gt;
&lt;p&gt;首先哪条龙选哪把剑是固定的。拿个set(m
      
    
    </summary>
    
    
      <category term="数论" scheme="http://tenecnt.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="CRT" scheme="http://tenecnt.github.io/tags/CRT/"/>
    
  </entry>
  
  <entry>
    <title>NOI2018冒泡排序(inverse)</title>
    <link href="http://tenecnt.github.io/2018/07/19/noi18b/"/>
    <id>http://tenecnt.github.io/2018/07/19/noi18b/</id>
    <published>2018-07-19T12:22:44.000Z</published>
    <updated>2018-07-22T13:49:56.761Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://judge-duck.online:10086/problem/noi18b" target="_blank" rel="noopener">这道题</a>的冒泡排序好像是假的</p><p>首先，根据那个啥的定义，首先必须得到坏序列的充要条件是 </p><script type="math/tex; mode=display">\exists\;{i<j<k},a_{i} > a_{j} > a_{k}</script><p>证明就感性理解一下，对于中间那个数，无论它目标位置是在左边还是右边，都有至少一步向反方向移动，所以一定是坏序列了</p><h3 id="80"><a href="#80" class="headerlink" title="80"></a>80</h3><hr><p>然后80分就很简单了，设计这么一个函数，<script type="math/tex">F_{i,j}</script>表示目前有i个数需要排列，但是由于前面的数的限制，最小的$j$个数的相对顺序必须递增。</p><p>容易得到递推式： </p><script type="math/tex; mode=display">F_{i,j} = \sum^{j-1}_{k=i} F_{i-1,k}</script><p>其实就是枚举拿的是哪个数，最小数就是<script type="math/tex">F_{i-1,k}</script>,否则对应了各个数。</p><p>然后就拿这个东西像数位dp一样扫一遍过去就是O(<script type="math/tex">n^2</script>)了</p><h3 id="100"><a href="#100" class="headerlink" title="100"></a>100</h3><hr><p>满分算法就比较神仙了</p><p>曾经有这样一道<a href="https://www.codechef.com/APRIL18B/problems/VAIMIN" target="_blank" rel="noopener">题</a></p><p>为了解决在一条直线限制下A点走到B点的方案数，这里用到了一种高妙的方法，将起点按对称线翻转计数，这里的每一种方案刚好一一对应了一种原起点到终点的一种路线(想象将该路线第一次遇到对称轴前的路径翻折)，于是这样，就能解决上述的小问题。</p><p>那么，对于这个问题，我们可以发现，在dp转移的时候，其实对应了一个长度为2n的括号序列。</p><p>每次转移对应了在原串后面加上了若干左括号和一个右括号（当取的是最小数时对应0个左括号+1个右括号）</p><p>然后将左括号和右括号转化成在二维坐标上的两个向右上（下）45度的向量，所以这就成了一个在二维上自由行走（但不能低于x轴）的问题，同时必须满足中途没有低于过一条线（除非已经高于过这条直线）。</p><p>于是想80分一样，对于每一位统计在这位超过限制的答案数，这里可以发现，只要先多出现了一个左括号，后面的左括号都能在自由行走中补充，所以每位的统计可以O(1)，这就使总体复杂度化为O(n)了</p><p><del>可是我为了偷懒，没有维护目前比最大值小的值数，用树状数组，多了一个log</del></p><p><del>能过就行</del></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 1200005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lsk 998244353</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lb(x) ((x)&amp;(-(x)))</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[MN&gt;&gt;<span class="number">1</span>],c[MN&gt;&gt;<span class="number">1</span>],D[MN&gt;&gt;<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> d;<span class="keyword">static</span> <span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">for</span>(d=<span class="number">0</span>,c=getchar();c&lt;<span class="string">'0'</span>||c&gt;<span class="string">'9'</span>;c=getchar());</span><br><span class="line"><span class="keyword">for</span>(;c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>;d=(d&lt;&lt;<span class="number">3</span>)+(d&lt;&lt;<span class="number">1</span>)+c-<span class="string">'0'</span>,c=getchar());</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(;x&lt;=n;x+=lb(x))c[x]+=y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qry</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(;x;x-=lb(x))res+=c[x];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lg fac[MN],ifac[MN];</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Pow</span><span class="params">(lg A,lg B)</span></span>&#123;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;B;B&gt;&gt;=<span class="number">1</span>,A=A*A%lsk)<span class="keyword">if</span>(B&amp;<span class="number">1</span>)res=res*A%lsk;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">fac[<span class="number">0</span>]=ifac[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;MN;++i)&#123;</span><br><span class="line">fac[i]=fac[i<span class="number">-1</span>]*i%lsk;</span><br><span class="line">ifac[i]=Pow(fac[i],lsk<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">C</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> fac[A]*ifac[B]%lsk*ifac[A-B]%lsk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Q</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> C(A,(A+B)/<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">T</span><span class="params">(<span class="keyword">int</span> A,<span class="keyword">int</span> B)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(B&lt;<span class="number">0</span>)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> ((Q(A,B)-Q(A,B+<span class="number">2</span>))%lsk+lsk)%lsk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> TT;init();</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;TT);</span><br><span class="line"><span class="keyword">while</span>(TT--)&#123;</span><br><span class="line"><span class="built_in">memset</span>(D,<span class="number">0</span>,<span class="keyword">sizeof</span> D);</span><br><span class="line"><span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span> c);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);lg res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)add(i,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)a[i]=read();</span><br><span class="line"><span class="keyword">int</span> mx=<span class="number">0</span>,mn=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> g=max(mx,a[i]);</span><br><span class="line"><span class="keyword">int</span> f=qry(g)+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> d=n*<span class="number">2</span>-(i<span class="number">-1</span>)*<span class="number">2</span>-f;</span><br><span class="line">res=(res+T(d,f))%lsk;</span><br><span class="line">D[a[i]]=<span class="number">1</span>;add(a[i],<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;mx)mx=a[i];</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a[i]!=mn)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(D[mn])++mn;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,res);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://judge-duck.online:10086/problem/noi18b&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;这道题&lt;/a&gt;的冒泡排序好像是假的&lt;/p&gt;
&lt;p&gt;首先，根据那个啥的定义，首先必须得到坏序列的充要
      
    
    </summary>
    
    
      <category term="组合数学" scheme="http://tenecnt.github.io/tags/%E7%BB%84%E5%90%88%E6%95%B0%E5%AD%A6/"/>
    
      <category term="NOI" scheme="http://tenecnt.github.io/tags/NOI/"/>
    
  </entry>
  
  <entry>
    <title>NOI2018归程(return)</title>
    <link href="http://tenecnt.github.io/2018/07/19/noi18a/"/>
    <id>http://tenecnt.github.io/2018/07/19/noi18a/</id>
    <published>2018-07-18T23:30:38.000Z</published>
    <updated>2018-07-19T23:41:38.805Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://judge-duck.online:10086/problem/noi18a" target="_blank" rel="noopener"><del>题面</del></a></p><p>在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……</p><p>不过话说回来，写log^2的可持久化并查集的都过了……</p><p>不过，标算是个神奇的东西，叫：</p><h2 id="克鲁斯卡尔重构树"><a href="#克鲁斯卡尔重构树" class="headerlink" title="克鲁斯卡尔重构树"></a>克鲁斯卡尔重构树</h2><h2 id="～～其实这是个很蠢的东西～～"><a href="#～～其实这是个很蠢的东西～～" class="headerlink" title="～～其实这是个很蠢的东西～～"></a>～～其实这是个很蠢的东西～～</h2><p>大家都会克鲁斯卡尔最小生成树吧</p><p>只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子</p><p>这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 800005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pli pair<span class="meta-string">&lt;lg,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> d=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&gt;<span class="string">'9'</span>||c&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(c==<span class="string">'-'</span>)f=-f;c=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)&#123;d=d*<span class="number">10</span>+c-<span class="string">'0'</span>;c=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> d*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nex[MN],tot=<span class="number">0</span>,vi[MN],fr[MN],ai[MN];</span><br><span class="line">lg wi[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">nex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ege</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,a;lg c;</span><br><span class="line">&#125;E[MN];</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Ege A,Ege B)&#123;</span><br><span class="line"><span class="keyword">return</span> A.a&lt;B.a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Qry</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> v,p,id;</span><br><span class="line">&#125;Q[MN];</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Qry A,Qry B)&#123;</span><br><span class="line"><span class="keyword">return</span> A.p&lt;B.p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;pli,<span class="built_in">vector</span>&lt;pli &gt;,greater&lt;pli &gt; &gt; pQ;</span><br><span class="line">lg ds[MN];<span class="keyword">int</span> vis[MN],F[MN];lg V[MN];<span class="keyword">int</span> L[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">djk</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(ds,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> ds);</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">ds[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!pQ.empty())pQ.pop();</span><br><span class="line">pQ.push(mp(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">while</span>(!pQ.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> x=pQ.top().sd;pQ.pop();</span><br><span class="line"><span class="keyword">if</span>(vis[x])<span class="keyword">continue</span>;vis[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=fr[x];i;i=nex[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(ds[x]+wi[i]&lt;ds[vi[i]])&#123;</span><br><span class="line">ds[vi[i]]=ds[x]+wi[i];</span><br><span class="line">pQ.push(mp(ds[vi[i]],vi[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)F[i]=i,V[i]=ds[i],L[i]=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gf</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> F[x]==x?x:F[x]=gf(F[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lg res[MN];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">20</span>][MN];</span><br><span class="line">lg Lasans,Ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line">tot=<span class="number">0</span>;<span class="built_in">memset</span>(fr,<span class="number">0</span>,<span class="keyword">sizeof</span> fr);Lasans=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">f[<span class="number">0</span>][x]=++n;</span><br><span class="line">f[<span class="number">0</span>][y]=n;</span><br><span class="line">V[n]=min(V[x],V[y]);</span><br><span class="line">L[n]=v;</span><br><span class="line">F[x]=F[y]=n;F[n]=n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bt</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(E+<span class="number">1</span>,E+m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=m;i;--i)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=gf(E[i].x),fy=gf(E[i].y);</span><br><span class="line"><span class="keyword">if</span>(fx!=fy)un(fx,fy,E[i].a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">19</span>;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T=read();</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">clean();</span><br><span class="line">n=read();m=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> a=read(),b=read();lg c=read(),d=read();</span><br><span class="line">add(a,b,c,d);add(b,a,c,d);E[i]=(Ege)&#123;a,b,d,c&#125;;</span><br><span class="line">&#125;<span class="keyword">int</span> nn=n;</span><br><span class="line">djk();Lasans=<span class="number">0</span>;bt();</span><br><span class="line"><span class="keyword">int</span> q=read(),K=read(),S=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> v=(read()+K*Lasans<span class="number">-1</span>)%nn+<span class="number">1</span>,</span><br><span class="line">p=(read()+K*Lasans)%(S+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">19</span>;~j;--j)<span class="keyword">if</span>(L[f[j][v]]&gt;p)v=f[j][v];</span><br><span class="line">Lasans=V[v];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Lasans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://judge-duck.online:10086/problem/noi18a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;del&gt;题面&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在同步赛中，时间都花在T2上了，导致这题没怎么想
      
    
    </summary>
    
    
      <category term="图论" scheme="http://tenecnt.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="NOI" scheme="http://tenecnt.github.io/tags/NOI/"/>
    
      <category term="生成树" scheme="http://tenecnt.github.io/tags/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>NOI2018归程(return)</title>
    <link href="http://tenecnt.github.io/2018/07/19/test/"/>
    <id>http://tenecnt.github.io/2018/07/19/test/</id>
    <published>2018-07-18T23:30:38.000Z</published>
    <updated>2018-08-29T10:02:54.440Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://judge-duck.online:10086/problem/noi18a" target="_blank" rel="noopener"><del>题面</del></a></p><p>dfsdfsdfdfsadf<br>在同步赛中，时间都花在T2上了，导致这题没怎么想，看到暴力+离线有75就马上打了，没有任何向标算上的思考，当然，可持久化并查集还是想到的，但是写……</p><p>不过话说回来，写log^2的可持久化并查集的都过了……</p><p>不过，标算是个神奇的东西，叫：</p><h2 id="克鲁斯卡尔重构树"><a href="#克鲁斯卡尔重构树" class="headerlink" title="克鲁斯卡尔重构树"></a>克鲁斯卡尔重构树</h2><h2 id="～～其实这是个很蠢的东西～～"><a href="#～～其实这是个很蠢的东西～～" class="headerlink" title="～～其实这是个很蠢的东西～～"></a>～～其实这是个很蠢的东西～～</h2><p>大家都会克鲁斯卡尔最小生成树吧</p><p>只要在建树的时候，为新加的边新建一个点，并把别的两个点连它的儿子</p><p>这样，若干次的联通块就是若干子树了，只要倍增维护子树最小值就行了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 800005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pli pair<span class="meta-string">&lt;lg,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> d=<span class="number">0</span>,f=<span class="number">1</span>;<span class="keyword">char</span> c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&gt;<span class="string">'9'</span>||c&lt;<span class="string">'0'</span>)&#123;<span class="keyword">if</span>(c==<span class="string">'-'</span>)f=-f;c=getchar();&#125;</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>)&#123;d=d*<span class="number">10</span>+c-<span class="string">'0'</span>;c=getchar();&#125;</span><br><span class="line"><span class="keyword">return</span> d*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> nex[MN],tot=<span class="number">0</span>,vi[MN],fr[MN],ai[MN];</span><br><span class="line">lg wi[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">nex[++tot]=fr[x];fr[x]=tot;vi[tot]=y;wi[tot]=z;ai[tot]=a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Ege</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,a;lg c;</span><br><span class="line">&#125;E[MN];</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Ege A,Ege B)&#123;</span><br><span class="line"><span class="keyword">return</span> A.a&lt;B.a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Qry</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> v,p,id;</span><br><span class="line">&#125;Q[MN];</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(Qry A,Qry B)&#123;</span><br><span class="line"><span class="keyword">return</span> A.p&lt;B.p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">priority_queue&lt;pli,<span class="built_in">vector</span>&lt;pli &gt;,greater&lt;pli &gt; &gt; pQ;</span><br><span class="line">lg ds[MN];<span class="keyword">int</span> vis[MN],F[MN];lg V[MN];<span class="keyword">int</span> L[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">djk</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(ds,<span class="number">0x3f</span>,<span class="keyword">sizeof</span> ds);</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span> vis);</span><br><span class="line">ds[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(!pQ.empty())pQ.pop();</span><br><span class="line">pQ.push(mp(<span class="number">0</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">while</span>(!pQ.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> x=pQ.top().sd;pQ.pop();</span><br><span class="line"><span class="keyword">if</span>(vis[x])<span class="keyword">continue</span>;vis[x]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=fr[x];i;i=nex[i])&#123;</span><br><span class="line"><span class="keyword">if</span>(ds[x]+wi[i]&lt;ds[vi[i]])&#123;</span><br><span class="line">ds[vi[i]]=ds[x]+wi[i];</span><br><span class="line">pQ.push(mp(ds[vi[i]],vi[i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)F[i]=i,V[i]=ds[i],L[i]=<span class="number">0x7f7f7f7f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gf</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> F[x]==x?x:F[x]=gf(F[x]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lg res[MN];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">20</span>][MN];</span><br><span class="line">lg Lasans,Ans=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line">tot=<span class="number">0</span>;<span class="built_in">memset</span>(fr,<span class="number">0</span>,<span class="keyword">sizeof</span> fr);Lasans=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> v)</span></span>&#123;</span><br><span class="line">f[<span class="number">0</span>][x]=++n;</span><br><span class="line">f[<span class="number">0</span>][y]=n;</span><br><span class="line">V[n]=min(V[x],V[y]);</span><br><span class="line">L[n]=v;</span><br><span class="line">F[x]=F[y]=n;F[n]=n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bt</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(E+<span class="number">1</span>,E+m+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=m;i;--i)&#123;</span><br><span class="line"><span class="keyword">int</span> fx=gf(E[i].x),fy=gf(E[i].y);</span><br><span class="line"><span class="keyword">if</span>(fx!=fy)un(fx,fy,E[i].a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">19</span>;++i)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;++j)&#123;</span><br><span class="line">f[i][j]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][j]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T=read();</span><br><span class="line"><span class="keyword">while</span>(T--)&#123;</span><br><span class="line">clean();</span><br><span class="line">n=read();m=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> a=read(),b=read();lg c=read(),d=read();</span><br><span class="line">add(a,b,c,d);add(b,a,c,d);E[i]=(Ege)&#123;a,b,d,c&#125;;</span><br><span class="line">&#125;<span class="keyword">int</span> nn=n;</span><br><span class="line">djk();Lasans=<span class="number">0</span>;bt();</span><br><span class="line"><span class="keyword">int</span> q=read(),K=read(),S=read();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;++i)&#123;</span><br><span class="line"><span class="keyword">int</span> v=(read()+K*Lasans<span class="number">-1</span>)%nn+<span class="number">1</span>,</span><br><span class="line">p=(read()+K*Lasans)%(S+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">19</span>;~j;--j)<span class="keyword">if</span>(L[f[j][v]]&gt;p)v=f[j][v];</span><br><span class="line">Lasans=V[v];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,Lasans);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://judge-duck.online:10086/problem/noi18a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;del&gt;题面&lt;/del&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;dfsdfsdfdfsadf&lt;br&gt;在同步赛中，
      
    
    </summary>
    
    
      <category term="图论" scheme="http://tenecnt.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
      <category term="NOI" scheme="http://tenecnt.github.io/tags/NOI/"/>
    
      <category term="生成树" scheme="http://tenecnt.github.io/tags/%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>多项式(2)</title>
    <link href="http://tenecnt.github.io/2018/07/17/poly2/"/>
    <id>http://tenecnt.github.io/2018/07/17/poly2/</id>
    <published>2018-07-17T10:15:28.000Z</published>
    <updated>2018-07-31T13:11:00.585Z</updated>
    
    <content type="html"><![CDATA[<p>船新版本的多项式！加入了</p><h3 id="开根"><a href="#开根" class="headerlink" title="开根"></a>开根</h3><script type="math/tex; mode=display">\large B(x)=\cfrac{A(x)+B_0^2(x)}{2B_0(x)}</script><hr><p>只有开根……</p><p>不过这样一道6合一模板题(<a href="http://cogs.pro:8080/cogs/problem/problem.php?pid=2189" target="_blank" rel="noopener">帕秋莉的超级多项式</a>)还是少见的</p><p>卡常卡常卡常卡常</p><p>突然开了几个register就过了</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 1&lt;&lt;19|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lsk 998244353</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k,l;</span><br><span class="line">lg pw[MN],inv[MN],rev[MN];</span><br><span class="line">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN],Tmpsqrt[MN],Tmpsqrt2[MN];</span><br><span class="line">lg F[MN],G[MN];</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Pow</span><span class="params">(lg A,lg B)</span></span>&#123;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;B;B&gt;&gt;=<span class="number">1</span>,A=A*A%lsk)<span class="keyword">if</span>(B&amp;<span class="number">1</span>)res=res*A%lsk;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFTinit</span><span class="params">(<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line">rev[i]=(rev[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)*(l&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">lg wn=pw[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;j+=i*<span class="number">2</span>)&#123;</span><br><span class="line">lg w=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class="line">lg F=y[k+i]*w%lsk,T=y[k];</span><br><span class="line">y[k]=(F+T)%lsk;</span><br><span class="line">y[k+i]=(T-F)%lsk;</span><br><span class="line"><span class="keyword">if</span>(y[k+i]&lt;<span class="number">0</span>)y[k+i]+=lsk;</span><br><span class="line">w=wn*w%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">idft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">reverse(y+<span class="number">1</span>,y+l);</span><br><span class="line">dft(y,l);lg INv=Pow(l,lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">y[i]=y[i]*INv%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Inv</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">1</span>)&#123;</span><br><span class="line">Inv(y,res,d+<span class="number">1</span>&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,Tmpinv);</span><br><span class="line">fill(Tmpinv+d,Tmpinv+l,<span class="number">0</span>);</span><br><span class="line">FFTinit(l);</span><br><span class="line">dft(Tmpinv,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=((<span class="number">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">res[<span class="number">0</span>]=Pow(y[<span class="number">0</span>],lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Der</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d<span class="number">-1</span>;++i)&#123;</span><br><span class="line">y[i]=y[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%lsk;</span><br><span class="line">&#125;y[d<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Int</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d<span class="number">-1</span>;i;--i)&#123;</span><br><span class="line">y[i]=y[i<span class="number">-1</span>]*inv[i]%lsk;</span><br><span class="line">&#125;y[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ln</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,res);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">Der(res,d);</span><br><span class="line">fill(Tmpln,Tmpln+l,<span class="number">0</span>);</span><br><span class="line">Inv(y,Tmpln,d);FFTinit(l);</span><br><span class="line">dft(Tmpln,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpln[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">Int(res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exp</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">Exp(y,res,d+<span class="number">1</span>&gt;&gt;<span class="number">1</span>);</span><br><span class="line">fill(Tmpexp,Tmpexp+l,<span class="number">0</span>);</span><br><span class="line">Ln(res,Tmpexp,d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d;++i)&#123;</span><br><span class="line">Tmpexp[i]=y[i]-Tmpexp[i];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[i]&lt;<span class="number">0</span>)Tmpexp[i]+=lsk;</span><br><span class="line">&#125;++Tmpexp[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[<span class="number">0</span>]&gt;=lsk)Tmpexp[<span class="number">0</span>]-=lsk;</span><br><span class="line">FFTinit(l);</span><br><span class="line">dft(res,l);dft(Tmpexp,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pow</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d,lg k)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">fill(Tmppow,Tmppow+d,<span class="number">0</span>);</span><br><span class="line">Ln(y,Tmppow,d);k%=lsk;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class="line">Exp(Tmppow,res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sqrt</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(<span class="number">1</span>&lt;&lt;d)));</span><br><span class="line">Sqrt(y,res,(d+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">fill(Tmpsqrt,Tmpsqrt+l,<span class="number">0</span>);</span><br><span class="line">Inv(res,Tmpsqrt,d);</span><br><span class="line">fill(Tmpsqrt+d,Tmpsqrt+l,<span class="number">0</span>);</span><br><span class="line">copy(y,y+d,Tmpsqrt2);</span><br><span class="line">fill(Tmpsqrt2+d,Tmpsqrt2+l,<span class="number">0</span>);</span><br><span class="line">FFTinit(l);</span><br><span class="line">dft(Tmpsqrt,l);dft(Tmpsqrt2,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]+Tmpsqrt[i]*Tmpsqrt2[i]%lsk;</span><br><span class="line"><span class="keyword">if</span>(res[i]&gt;=lsk)res[i]-=lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d;++i)&#123;</span><br><span class="line">res[i]=res[i]*inv[<span class="number">2</span>]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">res[<span class="number">0</span>]=(lg)(<span class="built_in">sqrt</span>(y[<span class="number">0</span>]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">pw[<span class="number">0</span>]=inv[<span class="number">0</span>]=inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1</span>&lt;&lt;<span class="number">19</span>;++i)&#123;</span><br><span class="line">pw[i]=Pow(<span class="number">3</span>,(lsk<span class="number">-1</span>)/i/<span class="number">2</span>);</span><br><span class="line">inv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">freopen(<span class="string">"polynomial.in"</span>,<span class="string">"r"</span>,<span class="built_in">stdin</span>);</span><br><span class="line">freopen(<span class="string">"polynomial.out"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">lg k;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%lld"</span>,&amp;n,&amp;k);</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,F+i);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(<span class="number">1</span>&lt;&lt;n)));</span><br><span class="line">Sqrt(F,G,n);</span><br><span class="line"><span class="comment">//for(int i=0;i&lt;n;++i)printf("%lld ",G[i]);</span></span><br><span class="line">fill(F,F+l,<span class="number">0</span>);</span><br><span class="line">Inv(G,F,n);</span><br><span class="line">fill(G,G+l,<span class="number">0</span>);</span><br><span class="line">Int(F,n);</span><br><span class="line">Exp(F,G,n);</span><br><span class="line">fill(F,F+l,<span class="number">0</span>);</span><br><span class="line">Inv(G,F,n);++F[<span class="number">0</span>];</span><br><span class="line">fill(G,G+l,<span class="number">0</span>);</span><br><span class="line">Ln(F,G,n);++G[<span class="number">0</span>];</span><br><span class="line">fill(F,F+l,<span class="number">0</span>);</span><br><span class="line">Pow(G,F,n,k);</span><br><span class="line">Der(F,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;++i)<span class="built_in">printf</span>(<span class="string">"%lld "</span>,F[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;船新版本的多项式！加入了&lt;/p&gt;
&lt;h3 id=&quot;开根&quot;&gt;&lt;a href=&quot;#开根&quot; class=&quot;headerlink&quot; title=&quot;开根&quot;&gt;&lt;/a&gt;开根&lt;/h3&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\large B(x)=\cf
      
    
    </summary>
    
    
      <category term="多项式" scheme="http://tenecnt.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>My Todolist和重要网站</title>
    <link href="http://tenecnt.github.io/2018/07/16/todolist/"/>
    <id>http://tenecnt.github.io/2018/07/16/todolist/</id>
    <published>2018-07-16T05:09:41.000Z</published>
    <updated>2018-07-20T12:27:31.789Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>完成</th><th style="text-align:center">内容</th></tr></thead><tbody><tr><td></td><td style="text-align:center">分治线段树</td></tr><tr><td></td><td style="text-align:center">agc补题</td></tr><tr><td></td><td style="text-align:center">NOI18D1T3</td></tr><tr><td><script type="math/tex">\checkmark</script></td><td style="text-align:center">NOI18D1T2</td></tr><tr><td><script type="math/tex">\checkmark</script></td><td style="text-align:center">弦图最大团</td></tr><tr><td><script type="math/tex">\checkmark</script></td><td style="text-align:center">dsu on tree</td></tr></tbody></table></div><p>网站：<br><a href="http://zh-google-styleguide.readthedocs.io/en/latest/google-cpp-styleguide/" target="_blank" rel="noopener">谷歌代码规范</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;完成&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;
      
    
    </summary>
    
    
      <category term="规划" scheme="http://tenecnt.github.io/tags/%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>多项式(1)</title>
    <link href="http://tenecnt.github.io/2018/07/16/poly/"/>
    <id>http://tenecnt.github.io/2018/07/16/poly/</id>
    <published>2018-07-16T04:46:48.000Z</published>
    <updated>2018-07-31T12:51:20.665Z</updated>
    
    <content type="html"><![CDATA[<p>学习了一发多项式，感觉码风得到改善</p><p>包括了：</p><h3 id="1-求逆"><a href="#1-求逆" class="headerlink" title="1. 求逆"></a>1. 求逆</h3><script type="math/tex; mode=display">\large B(x)=2B_0(x)-A(x)B_0^2(x)</script><h3 id="2-求导"><a href="#2-求导" class="headerlink" title="2. 求导"></a>2. 求导</h3><p>xjb推即可</p><h3 id="3-积分"><a href="#3-积分" class="headerlink" title="3. 积分"></a>3. 积分</h3><p>xjb推即可</p><h3 id="4-ln"><a href="#4-ln" class="headerlink" title="4. ln"></a>4. ln</h3><script type="math/tex; mode=display">\large \begin{aligned}由：& H(x)=G(B(x))=B'(x)*G(B(x))\\& H'(x)=G'(B(x))*B'(x)\\可得：& ln(B(x))=\dfrac{1}{B(x)}*B'(x)\end{aligned}</script><h3 id="5-exp"><a href="#5-exp" class="headerlink" title="5. exp"></a>5. exp</h3><script type="math/tex; mode=display">\large B(x)=B_0(x)*(1-ln(B_0(x))+A(x))</script><h3 id="6-pow"><a href="#6-pow" class="headerlink" title="6. pow"></a>6. pow</h3><script type="math/tex; mode=display">\large B(x)^k=e^{ln(B(x))\times k}</script><p><a href="https://www.codechef.com/JULY18A/problems/PFRUIT" target="_blank" rel="noopener">水果沙拉(CodeChef)</a></p><p>基本思路就是将k次方多项式展开，对每一项单独计算，可以推导出是若干以e为幂的数的和的乘积，然后就是多项式了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 1&lt;&lt;19|1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lsk 998244353</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,k,l;</span><br><span class="line">lg pw[MN],inv[MN],rev[MN],Ex[MN],Iex[MN];</span><br><span class="line">lg Tmpinv[MN],Tmpln[MN],Tmpexp[MN],Tmppow[MN],Tmpfuc[MN];</span><br><span class="line">lg F[MN],G[MN],Res[MN];</span><br><span class="line"></span><br><span class="line"><span class="function">lg <span class="title">Pow</span><span class="params">(lg A,lg B)</span></span>&#123;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(;B;B&gt;&gt;=<span class="number">1</span>,A=A*A%lsk)<span class="keyword">if</span>(B&amp;<span class="number">1</span>)res=res*A%lsk;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FFtinit</span><span class="params">(<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line">rev[i]=(rev[i&gt;&gt;<span class="number">1</span>]&gt;&gt;<span class="number">1</span>)|((i&amp;<span class="number">1</span>)*(l&gt;&gt;<span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;++i)&#123;</span><br><span class="line"><span class="keyword">if</span>(i&lt;rev[i])swap(y[i],y[rev[i]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;l;i&lt;&lt;=<span class="number">1</span>)&#123;</span><br><span class="line">lg wn=pw[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;j+=i*<span class="number">2</span>)&#123;</span><br><span class="line">lg w=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=j;k&lt;i+j;++k)&#123;</span><br><span class="line">lg F=y[k+i]*w%lsk,T=y[k];</span><br><span class="line">y[k]=(F+T)%lsk;</span><br><span class="line">y[k+i]=(T-F)%lsk;</span><br><span class="line"><span class="keyword">if</span>(y[k+i]&lt;<span class="number">0</span>)y[k+i]+=lsk;</span><br><span class="line">w=w*wn%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">idft</span><span class="params">(lg *y,<span class="keyword">int</span> l)</span></span>&#123;</span><br><span class="line">reverse(y+<span class="number">1</span>,y+l);</span><br><span class="line">dft(y,l);lg INv=Pow(l,lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">y[i]=y[i]*INv%lsk;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Inv</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line">res[<span class="number">0</span>]=Pow(y[<span class="number">0</span>],lsk<span class="number">-2</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">Inv(y,res,(d+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,Tmpinv);</span><br><span class="line">fill(Tmpinv+d,Tmpinv+l,<span class="number">0</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Tmpinv,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=((<span class="number">2</span>-Tmpinv[i]*res[i])%lsk+lsk)*res[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Der</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d<span class="number">-1</span>;++i)&#123;</span><br><span class="line">y[i]=y[i+<span class="number">1</span>]*(i+<span class="number">1</span>)%lsk;</span><br><span class="line">&#125;</span><br><span class="line">y[d<span class="number">-1</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Int</span><span class="params">(lg *y,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d<span class="number">-1</span>;i;--i)&#123;</span><br><span class="line">y[i]=y[i<span class="number">-1</span>]*inv[i]%lsk;</span><br><span class="line">&#125;y[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Ln</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">copy(y,y+d,res);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">Der(res,d);</span><br><span class="line">fill(Tmpln,Tmpln+l,<span class="number">0</span>);</span><br><span class="line">Inv(y,Tmpln,d);FFtinit(l);</span><br><span class="line">dft(Tmpln,l);dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpln[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">Int(res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Exp</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(d==<span class="number">1</span>)&#123;</span><br><span class="line">res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">Exp(y,res,(d+<span class="number">1</span>)&gt;&gt;<span class="number">1</span>);</span><br><span class="line">fill(Tmpexp,Tmpexp+l,<span class="number">0</span>);</span><br><span class="line">Ln(res,Tmpexp,d);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;d;++i)&#123;</span><br><span class="line">Tmpexp[i]=y[i]-Tmpexp[i];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[i]&lt;<span class="number">0</span>)Tmpexp[i]+=lsk;</span><br><span class="line">&#125;</span><br><span class="line">++Tmpexp[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">if</span>(Tmpexp[<span class="number">0</span>]&gt;=lsk)Tmpexp[<span class="number">0</span>]-=lsk;</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(res,l);dft(Tmpexp,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Tmpexp[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pow</span><span class="params">(lg *y,lg *res,<span class="keyword">int</span> d,lg k)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2(d&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">fill(Tmppow,Tmppow+d,<span class="number">0</span>);</span><br><span class="line">Ln(y,Tmppow,d);k%=lsk;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l;++i)Tmppow[i]=Tmppow[i]*k%lsk;</span><br><span class="line">Exp(Tmppow,res,d);</span><br><span class="line">fill(res+d,res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Func</span><span class="params">(lg u,lg *res)</span></span>&#123;</span><br><span class="line">Tmpfuc[<span class="number">1</span>]=u+<span class="number">1</span>;</span><br><span class="line">Tmpfuc[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2((k+<span class="number">1</span>)&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">fill(res,res+l,<span class="number">0</span>);</span><br><span class="line">Exp(Tmpfuc,res,k+<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=k;++i)res[i]=res[i+<span class="number">1</span>];</span><br><span class="line">res[k+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">fill(res+k+<span class="number">1</span>,res+l,<span class="number">0</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(res,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=l;++i)&#123;</span><br><span class="line">res[i]=res[i]*Iex[i]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(res,l);</span><br><span class="line">fill(res+k+<span class="number">1</span>,res+l,<span class="number">0</span>);</span><br><span class="line">fill(Tmpfuc,Tmpfuc+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">l=<span class="number">1</span>&lt;&lt;((<span class="keyword">int</span>)<span class="built_in">ceil</span>(log2((k+<span class="number">1</span>)&lt;&lt;<span class="number">1</span>)));</span><br><span class="line">pw[<span class="number">0</span>]=<span class="number">1</span>;inv[<span class="number">0</span>]=inv[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">1</span>&lt;&lt;<span class="number">19</span>;++i)&#123;</span><br><span class="line">pw[i]=Pow(<span class="number">3</span>,(lsk<span class="number">-1</span>)/i/<span class="number">2</span>);</span><br><span class="line">inv[i]=inv[lsk%i]*(lsk-lsk/i)%lsk;</span><br><span class="line">assert(inv[i]);</span><br><span class="line">&#125;</span><br><span class="line">Ex[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;++i)&#123;</span><br><span class="line">Ex[i]=Ex[i<span class="number">-1</span>]*inv[i+<span class="number">1</span>]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">Inv(Ex,Iex,k+<span class="number">1</span>);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Iex,l);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%*d%d"</span>,&amp;k,&amp;n);</span><br><span class="line">init();</span><br><span class="line">fill(Res,Res+l,<span class="number">0</span>);Res[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">lg a,b;<span class="keyword">int</span> c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">fill(G,G+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">fill(F,F+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Func(b,G);Func(a<span class="number">-1</span>,F);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=k;++j)&#123;</span><br><span class="line">G[j]-=F[j];</span><br><span class="line"><span class="keyword">if</span>(G[j]&lt;<span class="number">0</span>)G[j]+=lsk;</span><br><span class="line">&#125;</span><br><span class="line">fill(F,F+k+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">Pow(G,F,k+<span class="number">1</span>,c);</span><br><span class="line">FFtinit(l);</span><br><span class="line">dft(Res,l);dft(F,l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;l;++j)&#123;</span><br><span class="line">Res[j]=Res[j]*F[j]%lsk;</span><br><span class="line">&#125;</span><br><span class="line">idft(Res,l);</span><br><span class="line">fill(Res+k+<span class="number">1</span>,Res+l,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">lg res=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=k;++i)res=res*i%lsk;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,res*Res[k]%lsk);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习了一发多项式，感觉码风得到改善&lt;/p&gt;
&lt;p&gt;包括了：&lt;/p&gt;
&lt;h3 id=&quot;1-求逆&quot;&gt;&lt;a href=&quot;#1-求逆&quot; class=&quot;headerlink&quot; title=&quot;1. 求逆&quot;&gt;&lt;/a&gt;1. 求逆&lt;/h3&gt;&lt;script type=&quot;math/tex; mo
      
    
    </summary>
    
    
      <category term="多项式" scheme="http://tenecnt.github.io/tags/%E5%A4%9A%E9%A1%B9%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>后缀自动机</title>
    <link href="http://tenecnt.github.io/2018/07/16/hzzdj/"/>
    <id>http://tenecnt.github.io/2018/07/16/hzzdj/</id>
    <published>2018-07-15T18:26:05.000Z</published>
    <updated>2018-07-16T05:06:16.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转移重要代码"><a href="#转移重要代码" class="headerlink" title="转移重要代码"></a>转移重要代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[MN];</span><br><span class="line"><span class="keyword">int</span> n,tot=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> maxlen,slink,tran[<span class="number">26</span>];</span><br><span class="line">&#125;N[MN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Nd</span><span class="params">(<span class="keyword">int</span> _maxlen,<span class="keyword">int</span> _tran,<span class="keyword">int</span> _slink)</span></span>&#123;</span><br><span class="line">N[++tot]=(Node)&#123;_maxlen,_slink,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">if</span>(_tran)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)<span class="keyword">if</span>(N[_tran].tran[i])N[tot].tran[i]=N[_tran].tran[i];<span class="keyword">else</span> N[tot].tran[i]=<span class="number">0</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">26</span>;++i)N[tot].tran[i]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addchar</span><span class="params">(<span class="keyword">char</span> cc,<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ch=cc-<span class="string">'a'</span>;</span><br><span class="line"><span class="keyword">int</span> z=Nd(N[u].maxlen+<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> v=u;</span><br><span class="line"><span class="keyword">while</span>(v&amp;&amp;!N[v].tran[ch])&#123;</span><br><span class="line">N[v].tran[ch]=z;</span><br><span class="line">v=N[v].slink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!v)&#123;N[z].slink=<span class="number">1</span>;<span class="keyword">return</span> z;&#125;</span><br><span class="line"><span class="keyword">int</span> x=N[v].tran[ch];</span><br><span class="line"><span class="keyword">if</span>(N[v].maxlen==N[x].maxlen<span class="number">-1</span>)&#123;</span><br><span class="line">N[z].slink=x;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> y=Nd(N[v].maxlen+<span class="number">1</span>,x,N[x].slink);</span><br><span class="line">N[x].slink=y;N[z].slink=y;</span><br><span class="line"><span class="keyword">while</span>(v&amp;&amp;N[v].tran[ch]==x)&#123;</span><br><span class="line">N[v].tran[ch]=y;</span><br><span class="line">v=N[v].slink;</span><br><span class="line">&#125;<span class="keyword">return</span> z;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span></span>&#123;</span><br><span class="line">Nd(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> now=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;now=addchar(c[i],now);&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;转移重要代码&quot;&gt;&lt;a href=&quot;#转移重要代码&quot; class=&quot;headerlink&quot; title=&quot;转移重要代码&quot;&gt;&lt;/a&gt;转移重要代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="字符串" scheme="http://tenecnt.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>虚树</title>
    <link href="http://tenecnt.github.io/2018/07/16/xushu/"/>
    <id>http://tenecnt.github.io/2018/07/16/xushu/</id>
    <published>2018-07-15T18:21:10.000Z</published>
    <updated>2018-07-16T05:09:00.120Z</updated>
    
    <content type="html"><![CDATA[<h2 id="转移重要代码"><a href="#转移重要代码" class="headerlink" title="转移重要代码"></a>转移重要代码</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MN 600005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pil pair<span class="meta-string">&lt;int,long long&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mp make_pair</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ft first</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sd second</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lg long long</span></span><br><span class="line"><span class="keyword">int</span> n,m,K,q;</span><br><span class="line"><span class="keyword">int</span> nex[MN],fr[MN],vi[MN];lg wi[MN];<span class="keyword">int</span> tote;</span><br><span class="line"><span class="keyword">int</span> tail=<span class="number">0</span>,stk[MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z)</span></span>&#123;</span><br><span class="line">nex[++tote]=fr[x];fr[x]=tote;wi[tote]=z;vi[tote]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> dfc=<span class="number">0</span>,dfn[MN];<span class="keyword">int</span> dep[MN],f[<span class="number">20</span>][MN];lg g[<span class="number">20</span>][MN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">dfn[x]=++dfc;<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">19</span>;++i)f[i][x]=f[i<span class="number">-1</span>][f[i<span class="number">-1</span>][x]],g[i][x]=min(g[i<span class="number">-1</span>][x],g[i<span class="number">-1</span>][f[i<span class="number">-1</span>][x]]);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=fr[x];i;i=nex[i])<span class="keyword">if</span>(vi[i]!=fa)&#123;</span><br><span class="line">f[<span class="number">0</span>][vi[i]]=x;g[<span class="number">0</span>][vi[i]]=wi[i];dep[vi[i]]=dep[x]+<span class="number">1</span>;dfs(vi[i],x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">pil <span class="title">Lca</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[x]&lt;dep[y])swap(x,y);</span><br><span class="line"><span class="keyword">if</span>(x==y)<span class="keyword">return</span> mp(x,<span class="number">0</span>);</span><br><span class="line">lg res=<span class="number">0x3f3f3f3f3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">19</span>;~i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[f[i][x]]&gt;=dep[y])&#123;</span><br><span class="line">res=min(res,g[i][x]);</span><br><span class="line">x=f[i][x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">if</span>(x==y) <span class="keyword">return</span> mp(x,res);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">19</span>;~i;--i)&#123;</span><br><span class="line"><span class="keyword">if</span>(f[i][x]!=f[i][y])&#123;</span><br><span class="line">res=min(res,min(g[i][x],g[i][y]));</span><br><span class="line">x=f[i][x];y=f[i][y];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> mp(f[<span class="number">0</span>][x],min(res,min(g[<span class="number">0</span>][x],g[<span class="number">0</span>][y])));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> v[MN],dd[MN];</span><br><span class="line"><span class="keyword">int</span> Fr[MN],Nex[MN],Vi[MN];lg Wi[MN];<span class="keyword">int</span> Tot=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt; Q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,lg z)</span></span>&#123;Nex[++Tot]=Fr[x];Wi[Tot]=z;Fr[x]=Tot;Vi[Tot]=y;Nex[++Tot]=Fr[y];Wi[Tot]=z;Fr[y]=Tot;Vi[Tot]=x;&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> dfn[x]&lt;dfn[y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">lg <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> fa)</span></span>&#123;</span><br><span class="line">lg ans=<span class="number">0</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;x&lt;&lt;' '&lt;&lt;fa&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=Fr[x];i;i=Nex[i])<span class="keyword">if</span>(Vi[i]!=fa)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;Vi[i]&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(dd[Vi[i]])ans+=Wi[i];<span class="keyword">else</span> ans+=min(Wi[i],dfs2(Vi[i],x));</span><br><span class="line">&#125;<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bt</span><span class="params">()</span></span>&#123;</span><br><span class="line">sort(v+<span class="number">1</span>,v+m+<span class="number">1</span>,cmp);Tot=<span class="number">0</span>;pil L;tail=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)dd[v[i]]=<span class="number">1</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"&amp;"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">if</span>(i&amp;&amp;v[i]==v[i<span class="number">-1</span>])<span class="keyword">continue</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;v[i]&lt;&lt;' '&lt;&lt;v[i-1]&lt;&lt;endl;</span></span><br><span class="line">L=Lca(stk[tail],v[i]);;</span><br><span class="line"><span class="keyword">while</span>(tail&gt;<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dep[L.ft]&gt;dep[stk[tail]]||L.ft==stk[tail])<span class="keyword">break</span>;</span><br><span class="line"><span class="comment">// cout&lt;&lt;stk[tail]&lt;&lt;' '&lt;&lt;stk[tail-1]&lt;&lt;' '&lt;&lt;Lca(stk[tail],stk[tail-1]).sd&lt;&lt;"&amp;&amp;&amp;"&lt;&lt;endl;</span></span><br><span class="line">Add(stk[tail],stk[tail<span class="number">-1</span>],Lca(stk[tail],stk[tail<span class="number">-1</span>]).sd);</span><br><span class="line">--tail;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(L.ft!=stk[tail])Fr[L.ft]=<span class="number">0</span>,stk[++tail]=L.ft,Q.push(L.ft);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=m;++i)dd[v[i]]=<span class="number">0</span>;</span><br><span class="line">Fr[v[i]]=<span class="number">0</span>;stk[++tail]=v[i];Q.push(v[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"@"&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">while</span>(tail!=<span class="number">1</span>)Add(stk[tail],stk[tail<span class="number">-1</span>],Lca(stk[tail],stk[tail<span class="number">-1</span>]).sd),--tail;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,dfs2(<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">while</span>(!Q.empty())&#123;<span class="keyword">int</span> x=Q.front();Q.pop();dd[x]=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"^"&lt;&lt;endl;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,x,y;i&lt;n;++i)&#123;</span><br><span class="line">lg z;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%lld"</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">add(x,y,z);add(y,x,z);</span><br><span class="line">&#125;dep[<span class="number">1</span>]=<span class="number">1</span>;dfs(<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);v[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(q--)&#123;</span><br><span class="line"><span class="comment">// cout&lt;&lt;"$"&lt;&lt;endl;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;++i)<span class="built_in">scanf</span>(<span class="string">"%d"</span>,v+i);</span><br><span class="line">bt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;转移重要代码&quot;&gt;&lt;a href=&quot;#转移重要代码&quot; class=&quot;headerlink&quot; title=&quot;转移重要代码&quot;&gt;&lt;/a&gt;转移重要代码&lt;/h2&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
    
      <category term="图论" scheme="http://tenecnt.github.io/tags/%E5%9B%BE%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>Helloworld</title>
    <link href="http://tenecnt.github.io/2018/07/14/Helloworld/"/>
    <id>http://tenecnt.github.io/2018/07/14/Helloworld/</id>
    <published>2018-07-14T00:19:15.000Z</published>
    <updated>2018-07-22T13:04:52.981Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第二次转移博客"><a href="#第二次转移博客" class="headerlink" title="第二次转移博客"></a>第二次转移博客</h1><p>$ \sqrt{\phi} $</p><script type="math/tex; mode=display">{1+1=2}</script><script type="math/tex; mode=display">{\fac 1}</script><p>Simple inline $ a = b + c $</p><script type="math/tex; mode=display">\frac{\partial u}{\partial t}= h^2 \left( \frac{\partial^2 u}{\partial x^2} +\frac{\partial^2 u}{\partial y^2} +\frac{\partial^2 u}{\partial z^2}\right)</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;第二次转移博客&quot;&gt;&lt;a href=&quot;#第二次转移博客&quot; class=&quot;headerlink&quot; title=&quot;第二次转移博客&quot;&gt;&lt;/a&gt;第二次转移博客&lt;/h1&gt;&lt;p&gt;$ \sqrt{\phi} $&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=d
      
    
    </summary>
    
    
      <category term="试验" scheme="http://tenecnt.github.io/tags/%E8%AF%95%E9%AA%8C/"/>
    
      <category term="math" scheme="http://tenecnt.github.io/tags/math/"/>
    
  </entry>
  
</feed>
